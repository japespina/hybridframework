/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ewb.qa.tdd.GUI;

import ewb.qa.tdd.SQLObj;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import java.awt.*;
import java.awt.event.*;
import org.apache.poi.ss.util.NumberToTextConverter;
import ewb.qa.tdd.GUI.MainGUI.*;
import ewb.qa.tdd.SeleniumObj;
import javax.swing.table.TableColumnModel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.*;

import org.apache.commons.io.FileUtils;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.chrome.ChromeDriver;


/**
 *
 * @author JPE61800
 */
public class MenuTestScript extends javax.swing.JFrame {

    /**
     * Creates new form MenuTestScript
     */
    
    private TDDMouseListener mListener;
    
    public MenuTestScript() {
        initComponents();
        
        setUserCodeIndexSelected(-1);
        setMainIndexSelected(-1);
        setChildIndexSelected(-1);
        
        //TDDMouseListener handler = new TDDMouseListener();
        //MainUserCodeCmb.addMouseListener(handler);
        mListener = new TDDMouseListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ProjCodeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        MainUserCodeCmb = new javax.swing.JComboBox<>();
        MainMenuCodeCmb = new javax.swing.JComboBox<>();
        MainModuleTxt = new javax.swing.JTextField();
        MainElemIdTxt = new javax.swing.JTextField();
        MainElemXpathTxt = new javax.swing.JTextField();
        MainElemTypeCmb = new javax.swing.JComboBox<>();
        MainElemActionCmb = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        MainMenuTbl = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        ParentCodeCmb = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        ChildCodeTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        ChildModuleTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ChildFieldTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        ChildElemIdTxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        ChildElemXpathTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ChildElemTypeCmb = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        ChildElemActionCmb = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChildMenuTbl = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        ChildLevelTxt = new javax.swing.JTextField();
        BackBtn = new javax.swing.JButton();
        ProjDescTxt = new javax.swing.JTextField();
        MainCancelBtn = new javax.swing.JButton();
        MainSaveBtn = new javax.swing.JButton();
        MainChangeBtn = new javax.swing.JButton();
        MainDeleteBtn = new javax.swing.JButton();
        MainNewBtn = new javax.swing.JButton();
        ChildChangeBtn = new javax.swing.JButton();
        ChildCancelBtn = new javax.swing.JButton();
        ChildSaveBtn = new javax.swing.JButton();
        ChildDeleteBtn = new javax.swing.JButton();
        ChildNewBtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        ChildSeqTxt = new javax.swing.JTextField();
        MainFieldTxt = new javax.swing.JTextField();
        ChildMenuIdTxt = new javax.swing.JTextField();
        MainMenuIdTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Test Script Maintenance");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Project Code :");

        ProjCodeTxt.setText("jTextField1");

        jLabel2.setText("User Code :");

        jLabel3.setText("Menu Code :");

        jLabel4.setText("Module :");

        jLabel5.setText("Field :");

        jLabel6.setText("Element ID :");

        jLabel7.setText("Element XPath :");

        jLabel8.setText("Element Type :");

        jLabel9.setText("Element Action :");

        MainUserCodeCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MainUserCodeCmbItemStateChanged(evt);
            }
        });
        MainUserCodeCmb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainUserCodeCmbMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MainUserCodeCmbMousePressed(evt);
            }
        });
        MainUserCodeCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainUserCodeCmbActionPerformed(evt);
            }
        });

        MainMenuCodeCmb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainMenuCodeCmbMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MainMenuCodeCmbMousePressed(evt);
            }
        });
        MainMenuCodeCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuCodeCmbActionPerformed(evt);
            }
        });

        MainModuleTxt.setText("jTextField2");

        MainElemIdTxt.setText("jTextField4");

        MainElemXpathTxt.setText("jTextField5");

        MainElemTypeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Button" }));

        MainElemActionCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click" }));

        MainMenuTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        MainMenuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        MainMenuTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MainMenuTblMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(MainMenuTbl);

        jLabel10.setText("Parent Code :");

        ParentCodeCmb.setToolTipText("");

        jLabel11.setText("Child Code :");

        ChildCodeTxt.setText("jTextField7");

        jLabel12.setText("Module :");

        ChildModuleTxt.setText("jTextField6");

        jLabel13.setText("Field :");

        ChildFieldTxt.setText("jTextField8");

        jLabel14.setText("Element ID :");

        ChildElemIdTxt.setText("jTextField9");

        jLabel15.setText("Element XPath :");

        ChildElemXpathTxt.setText("jTextField10");

        jLabel16.setText("Element Type :");

        ChildElemTypeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Button" }));

        jLabel17.setText("Element Action :");

        ChildElemActionCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click" }));

        ChildMenuTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        ChildMenuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ChildMenuTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ChildMenuTblMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(ChildMenuTbl);

        jLabel18.setText("Level :");

        ChildLevelTxt.setText("jTextField1");

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        ProjDescTxt.setText("jTextField1");

        MainCancelBtn.setText("Cancel");
        MainCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainCancelBtnActionPerformed(evt);
            }
        });

        MainSaveBtn.setText("Save");
        MainSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainSaveBtnActionPerformed(evt);
            }
        });

        MainChangeBtn.setText("Change");
        MainChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainChangeBtnActionPerformed(evt);
            }
        });

        MainDeleteBtn.setText("Delete");
        MainDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainDeleteBtnActionPerformed(evt);
            }
        });

        MainNewBtn.setText("New");
        MainNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainNewBtnActionPerformed(evt);
            }
        });

        ChildChangeBtn.setText("Change");
        ChildChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildChangeBtnActionPerformed(evt);
            }
        });

        ChildCancelBtn.setText("Cancel");
        ChildCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildCancelBtnActionPerformed(evt);
            }
        });

        ChildSaveBtn.setText("Save");
        ChildSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildSaveBtnActionPerformed(evt);
            }
        });

        ChildDeleteBtn.setText("Delete");

        ChildNewBtn.setText("New");
        ChildNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildNewBtnActionPerformed(evt);
            }
        });

        jLabel19.setText("Sequence :");

        ChildSeqTxt.setText("jTextField1");

        MainFieldTxt.setText("jTextField1");

        ChildMenuIdTxt.setText("jTextField1");

        MainMenuIdTxt.setText("jTextField2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ParentCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildMenuIdTxt))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ChildElemTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildElemActionCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ChildCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildModuleTxt))
                            .addComponent(ChildElemIdTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(176, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ChildLevelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ChildSeqTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(ChildElemXpathTxt)
                                        .addGap(79, 79, 79))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(MainUserCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(MainMenuIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(MainMenuCodeCmb, 0, 1, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(MainModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(MainFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(MainElemIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(MainElemTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(MainElemActionCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(MainElemXpathTxt))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ChildNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildChangeBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(MainNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MainDeleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MainChangeBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MainSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MainCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MainMenuIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(MainUserCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(MainMenuCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(MainModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(MainFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(MainElemIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(MainElemXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(MainElemTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(MainElemActionCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MainSaveBtn)
                    .addComponent(MainChangeBtn)
                    .addComponent(MainDeleteBtn)
                    .addComponent(MainNewBtn)
                    .addComponent(MainCancelBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ParentCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChildMenuIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ChildCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(ChildModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(ChildFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChildElemIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(ChildElemXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(ChildElemTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(ChildElemActionCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(ChildLevelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(ChildSeqTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackBtn)
                    .addComponent(ChildChangeBtn)
                    .addComponent(ChildCancelBtn)
                    .addComponent(ChildSaveBtn)
                    .addComponent(ChildDeleteBtn)
                    .addComponent(ChildNewBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String ProjCode = MainGUI.getProjectCode();
        String ProjDesc = MainGUI.getProjectDesc();
        
        ProjCodeTxt.setText(ProjCode);
        ProjDescTxt.setText(ProjDesc);
        
        loadMainMenuTbl();
        loadChildMenuTbl();
        loadMainUserCodeList();
        loadMainMenuCodeList();
        loadChildMenuCodeList();
        defaultsettingsMainMenu();
        defaultsettingsChildMenu();
        display();
        
        setStatusMainFlag(0);

    }//GEN-LAST:event_formWindowOpened

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        ExecutePage execPage = new ExecutePage();
        execPage.setVisible(true);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void MainUserCodeCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainUserCodeCmbActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            //int getIndex = MainUserCodeCmb.getSelectedIndex();
            //int globalIndex = getUserCodeIndexSelected();
            //if(globalIndex > 0){
                String ProjCode = ProjCodeTxt.getText();
                String UserCode = MainUserCodeCmb.getSelectedItem().toString();
                loadMainMenuTblByProjCodeMenuCode(ProjCode, UserCode);
                loadChildMenuTbl_ProjCodeUserCode(ProjCode, UserCode);
                loadMainMenuCodeList_ProjCodeUserCode(ProjCode, UserCode);     
                
                //setUserCodeIndexSelected(getIndex);
            //}
            
            /*
            if(MainUserCodeCmb.getSelectedIndex() > -1){
                String ProjCode = ProjCodeTxt.getText();
                String UserCode = MainUserCodeCmb.getSelectedItem().toString();
                loadMainMenuTblByProjCodeMenuCode(ProjCode, UserCode);
                loadChildMenuTbl_ProjCodeUserCode(ProjCode, UserCode);
                loadMainMenuCodeList_ProjCodeUserCode(ProjCode, UserCode);                
            }
            */
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main User Code - List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                   
        }
    }//GEN-LAST:event_MainUserCodeCmbActionPerformed

    private void MainMenuCodeCmbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainMenuCodeCmbMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_MainMenuCodeCmbMousePressed

    private void MainMenuCodeCmbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainMenuCodeCmbMouseClicked
        // TODO add your handling code here

    }//GEN-LAST:event_MainMenuCodeCmbMouseClicked

    private void MainMenuCodeCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuCodeCmbActionPerformed
        // TODO add your handling code here:
        //String action = MainMenuCodeCmb.getActionCommand();
        //String listener = MainMenuCodeCmb.getActionListeners().toString();
        int listenerIndex = mListener.getFlagIndex();
        
        JFrame jFrame = new JFrame();
        try{
            String ProjCode = ProjCodeTxt.getText();
            String UserCode = MainUserCodeCmb.getSelectedItem().toString();
            String MenuCode = "";
            
            if(MainMenuCodeCmb.getSelectedIndex() > -1){
                MenuCode = MainMenuCodeCmb.getSelectedItem().toString();
                loadMainMenuTbl_ProjCodeUserCodeMenuCode(ProjCode, UserCode, MenuCode);
                loadChildMenuTbl_ProjCodeUserCodeMainMenuCode(ProjCode, UserCode, MenuCode);
                loadChildMenuCodeLst_ProjCodeUserCodeMainMenuCode(ProjCode, UserCode, MenuCode);
                
                defaultsettingsMainMenu();
            }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Code - List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);              
        }
        
    }//GEN-LAST:event_MainMenuCodeCmbActionPerformed

    private void MainUserCodeCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MainUserCodeCmbItemStateChanged
        // TODO add your handling code here:
        //int getIndex = MainUserCodeCmb.getSelectedIndex();
        //setMainIndexSelected(getIndex);
    }//GEN-LAST:event_MainUserCodeCmbItemStateChanged

    private void MainUserCodeCmbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainUserCodeCmbMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_MainUserCodeCmbMousePressed

    private void MainUserCodeCmbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainUserCodeCmbMouseClicked
        // TODO add your handling code here:
        //int getIndex = MainUserCodeCmb.getSelectedIndex();
        //setMainIndexSelected(getIndex);
        //TDDMouseListener mListener = new TDDMouseListener();
        int flagIndex = mListener.getFlagIndex();
    }//GEN-LAST:event_MainUserCodeCmbMouseClicked

    private void MainNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainNewBtnActionPerformed
        // TODO add your handling code here:
            setVisible(false);
            CreateNewMainMenu newMainMenu = new CreateNewMainMenu();
            newMainMenu.setVisible(true);
    }//GEN-LAST:event_MainNewBtnActionPerformed

    private void MainMenuTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainMenuTblMousePressed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            //if(evt.getClickCount() == 2){
                String Id = "";
                String UserCode = "";
                String MenuCode = "";
                String Module = "";
                String Field = "";
                String ElemId = "";
                String ElemXpath = "";
                String ElemType = "";
                String ElemAction = "";
                
                TableModel tblmodel = MainMenuTbl.getModel();
                int index = MainMenuTbl.getSelectedRow();
                setStatusMainFlag(1);
                
                Id = tblmodel.getValueAt(index,0).toString();
                UserCode = tblmodel.getValueAt(index, 1).toString();
                MenuCode = tblmodel.getValueAt(index, 2).toString();
                Module = tblmodel.getValueAt(index,3).toString();
                Field = tblmodel.getValueAt(index, 4).toString();
                ElemId = tblmodel.getValueAt(index,5).toString();
                ElemXpath = tblmodel.getValueAt(index,6).toString();
                ElemType = tblmodel.getValueAt(index,7).toString();
                ElemAction = tblmodel.getValueAt(index,8).toString();
                
                MainMenuIdTxt.setText(Id);
                MainUserCodeCmb.setSelectedItem(UserCode);
                MainMenuCodeCmb.setSelectedItem(MenuCode);
                MainModuleTxt.setText(Module);
                MainFieldTxt.setText(Field);
                MainElemIdTxt.setText(ElemId);
                MainElemXpathTxt.setText(ElemXpath);
                MainElemTypeCmb.setSelectedItem(ElemType);
                MainElemActionCmb.setSelectedItem(ElemAction);

                //MainMenuIdTxt.setEnabled(false);
                
                MainSelectedItem_EnabledDeleteChangeCancel();
            //}
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Table selecting item failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                 
        }
    }//GEN-LAST:event_MainMenuTblMousePressed

    private void MainChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainChangeBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            MainSelectedItem_EnabledSaveCancel();            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Table selecting item failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                   
        }

    }//GEN-LAST:event_MainChangeBtnActionPerformed

    private void MainCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainCancelBtnActionPerformed
        // TODO add your handling code here:
        setStatusMainFlag(0);
        defaultsettingsMainMenu();
    }//GEN-LAST:event_MainCancelBtnActionPerformed

    private void MainDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainDeleteBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            String ProjCode = ProjCodeTxt.getText();
            String UserCode = MainUserCodeCmb.getSelectedItem().toString();
            String MenuCode = MainMenuCodeCmb.getSelectedItem().toString();
            
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_ProjCodeUserCodeMenuCode(?,?,?)}");
            
            cs.setNString(1, ProjCode);
            cs.setNString(2, UserCode);
            cs.setNString(3, MenuCode);
 
            ResultSet rs = cs.executeQuery();
            if(rs.next()){
                
                cs.close();
                cs = conn.prepareCall("{call Search_MenuTestScript_Count_ByProjCodeUserCodeMenuCode(?,?,?)}");
                cs.setNString(1, ProjCode);
                cs.setNString(2, UserCode);
                cs.setNString(3, MenuCode);
                
                rs = cs.executeQuery();
                int childCount = 0;
                int response = 0;
                
                if(rs.next()){
                    childCount = rs.getInt(1);
                    response = JOptionPane.showConfirmDialog(jFrame, "Are you sure you want to delete the following record?" + "\n" + 
                    "Project Code: " + ProjCode + "\n" + 
                    "User Code: " + UserCode + "\n" + 
                    "Menu Code: " + MenuCode + "\n" +
                    "With number of Child dependents: " + childCount , "Test Script - Maintenance", JOptionPane.YES_NO_OPTION);                    
                }
                else{
                    response = JOptionPane.showConfirmDialog(jFrame, "Are you sure you want to delete the following record?" + "\n" + 
                    "Project Code: " + ProjCode + "\n" + 
                    "User Code: " + UserCode + "\n" + 
                    "Menu Code: " + MenuCode + "\n" +
                    "With number of Child dependents: " + childCount , "Test Script - Maintenance", JOptionPane.YES_NO_OPTION);                        
                }
                
                if(response == 0){
                    //Delete 
                    
                    JOptionPane.showMessageDialog(jFrame,  "Record Deleted Successful ", "Menu Test Script - Maintenance", JOptionPane.INFORMATION_MESSAGE);                    
                }
            }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Selected record deletion failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                          
        }
        
    }//GEN-LAST:event_MainDeleteBtnActionPerformed

    private void MainSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainSaveBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Update_UserMenuMap(?,?,?,?,?,?,?,?)}");
            /*
            @id int,
            @proj_code NVARCHAR(20),
            @user_code NVARCHAR(20),
            @main_code NVARCHAR(50),
            @page_module NVARCHAR(50),
            @page_field NVARCHAR(50),
            @element_id NVARCHAR(200),
            @element_xpath NVARCHAR(200)            
            */
            
            String Id = MainMenuIdTxt.getText();
            String ProjCode = ProjCodeTxt.getText();
            String UserCode = MainUserCodeCmb.getSelectedItem().toString();
            String MenuCode = MainMenuCodeCmb.getSelectedItem().toString();
            String Module = MainModuleTxt.getText();
            String Field = MainFieldTxt.getText();
            String ElemId = MainElemIdTxt.getText();
            String ElemXpath = MainElemXpathTxt.getText();
            String ElemType = MainElemTypeCmb.getSelectedItem().toString();
            String ElemAction = MainElemActionCmb.getSelectedItem().toString();
            
            cs.setInt(1, Integer.parseInt(Id));
            cs.setNString(2, ProjCode);
            cs.setNString(3, UserCode);
            cs.setNString(4, MenuCode);
            cs.setNString(5, Module);
            cs.setNString(6, Field);
            cs.setNString(7, ElemId);
            cs.setNString(8,ElemXpath);
            
            int response = 0;
            response = JOptionPane.showConfirmDialog(jFrame, "Are you sure you want to update the following record?" + "\n" + 
            "Project Code: " + ProjCode + "\n" + 
            "User Code: " + UserCode + "\n" + 
            "Menu Code: " + MenuCode + "\n" +
            "Module: " + Module + "\n" +
            "Element ID: " + ElemId + "\n" +
            "Element XPath: " + ElemXpath + "\n" +
            "Element Type: " + ElemType + "\n" +
            "Element Action: " + ElemAction, "Test Script - Maintenance", JOptionPane.YES_NO_OPTION);                 
            
            if(response == 0){
                int saveflag = 0;
                saveflag = cs.executeUpdate();
                if(saveflag >0){
                    JOptionPane.showMessageDialog(jFrame,  "Record Updated Successful ", "Menu Test Script - Maintenance", JOptionPane.INFORMATION_MESSAGE);    
                    defaultsettingsMainMenu();                    
                }
            }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Update record  failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                   
        }
        
    }//GEN-LAST:event_MainSaveBtnActionPerformed

    private void ChildMenuTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChildMenuTblMousePressed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            TableModel tblmodel = ChildMenuTbl.getModel();
            int index = ChildMenuTbl.getSelectedRow();
            //{0-"ID",1-"User Code", 2-"Menu Code", 3-"Child Menu Code", 4-"Page Module", 5-"Page Field", 6-"Element ID", 7-"Element XPath",8-"Element Type", 9-"Element Action", 10-"Menu Level", 11-"Sequence"}
            
            String Id = tblmodel.getValueAt(index, 0).toString();
            String ParentCode = tblmodel.getValueAt(index, 2).toString();
            String ChildCode = tblmodel.getValueAt(index,3).toString();
            String ChildModule = tblmodel.getValueAt(index,4).toString();
            String ChildField = tblmodel.getValueAt(index,5).toString();
            String ChildElemId = tblmodel.getValueAt(index, 6).toString();
            String ChildElemXpath = tblmodel.getValueAt(index,7).toString();
            String ChildElemType = tblmodel.getValueAt(index, 8).toString();
            String ChildElemAction = tblmodel.getValueAt(index, 9).toString();
            String MenuLvl = tblmodel.getValueAt(index,10).toString();
            String Seq = tblmodel.getValueAt(index,11).toString();
            
            ParentCodeCmb.setSelectedItem(ParentCode);
            ChildMenuIdTxt.setText(Id);
            ChildCodeTxt.setText(ChildCode);
            ChildModuleTxt.setText(ChildModule);
            ChildFieldTxt.setText(ChildField);
            ChildElemIdTxt.setText(ChildElemId);
            ChildElemXpathTxt.setText(ChildElemXpath);
            ChildElemTypeCmb.setSelectedItem(ChildElemType);
            ChildElemActionCmb.setSelectedItem(ChildElemAction);
            ChildLevelTxt.setText(MenuLvl);
            ChildSeqTxt.setText(Seq);
            
            ChildSelectedItem_EnabledDeleteChangeCancel();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Selecting child record  failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);               
        }
    }//GEN-LAST:event_ChildMenuTblMousePressed

    private void ChildNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildNewBtnActionPerformed
        // TODO add your handling code here:
            String UserCode = MainUserCodeCmb.getSelectedItem().toString();
            String MenuCode = MainMenuCodeCmb.getSelectedItem().toString();
            
            setUserCode(UserCode);
            setMainMenuCode(MenuCode);
        
            setVisible(false);
            CreateNewChildMenu newChildMenu = new CreateNewChildMenu();
            newChildMenu.setVisible(true);
    }//GEN-LAST:event_ChildNewBtnActionPerformed

    private void ChildCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildCancelBtnActionPerformed
        // TODO add your handling code here:
        defaultsettingsChildMenu();
    }//GEN-LAST:event_ChildCancelBtnActionPerformed

    private void ChildChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildChangeBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            ChildSelectedItem_EnabledSaveCancel();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Change Settings failed" + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);               
        }
    }//GEN-LAST:event_ChildChangeBtnActionPerformed

    private void ChildSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildSaveBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Update_MenuTestScript(?,?,?,?,?,?,?,?,?)}");
            
            /*
            1-@id INT,
            2-@proj_code NVARCHAR(20),
            3-@user_code NVARCHAR(20),
            4-@menu_code NVARCHAR(50),
            5-@childmenu_code NVARCHAR(50),
            6-@page_module NVARCHAR(50),
            7-@page_field NVARCHAR(50),
            8-@element_id NVARCHAR(200),
            9-@element_xpath NVARCHAR(200)            
            */
            
            cs.setInt(1, Integer.parseInt(ChildMenuIdTxt.getText()));
            cs.setNString(2, ProjCodeTxt.getText());
            cs.setNString(3, MainUserCodeCmb.getSelectedItem().toString());
            cs.setNString(4, ParentCodeCmb.getSelectedItem().toString());
            cs.setNString(5, ChildCodeTxt.getText());
            cs.setNString(6, ChildModuleTxt.getText());
            cs.setNString(7, ChildFieldTxt.getText());
            cs.setNString(8, ChildElemIdTxt.getText());
            cs.setNString(9, ChildElemXpathTxt.getText());
            
            int response = 0;
            response = JOptionPane.showConfirmDialog(jFrame, "Are you sure you want to apply changes with the following records?" + "\n" +
                    "Child Menu ID: " + ChildMenuIdTxt.getText() + "\n" + 
                    "Parent Code: " + ParentCodeCmb.getSelectedItem().toString() + "\n" + 
                    "Child Code: " + ChildCodeTxt.getText() + "\n" + 
                    "Child Module: " + ChildModuleTxt.getText() + "\n" +
                    "Child Field: " + ChildFieldTxt.getText() + "\n" +
                    "Child Element ID: " + ChildElemIdTxt.getText() + "\n" +
                    "Child Element XPath: " + ChildElemXpathTxt.getText(), "Child Menu - Menu Test Script", JOptionPane.YES_NO_OPTION);
            
            if(response == 0){
                int saveflag = cs.executeUpdate();
                if(saveflag < 0){
                    JOptionPane.showMessageDialog(jFrame, "Record Update Successfully", "Child Menu - Menu Test Script", JOptionPane.INFORMATION_MESSAGE);
                    
                    String ProjCode = ProjCodeTxt.getText();
                    String UserCode = MainUserCodeCmb.getSelectedItem().toString();
                    String MenuCode = MainMenuCodeCmb.getSelectedItem().toString();
                    loadChildMenuTbl_ProjCodeUserCodeMainMenuCode(ProjCode, UserCode, MenuCode);
                    
                    defaultsettingsChildMenu();
                }
            }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Change Settings failed" + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                  
        }
    }//GEN-LAST:event_ChildSaveBtnActionPerformed

    private void loadMainMenuTblByProjCodeMenuCode(String givenProjCode, String givenUserCode){
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_ProjCodeUserCode(?,?)}");
                String Id = "";
                String ProjCode = "";
                String UserCode = "";
                String MenuCode = "";
                String Module = "";
                String Field = "";
                String ElemId = "";
                String ElemXpath = "";
                String ElemType = "";
                String ElemAction = "";
                
                //ProjCode = ProjCodeTxt.getText();
                MainMenuTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Module", "Field", "Element ID", "Element XPath", "Element Type", "Element Action"}));
                
                cs.setNString(1, givenProjCode);
                cs.setNString(2, givenUserCode);
                ResultSet rs = cs.executeQuery();
                while(rs.next()){
                    /*
                    1-[ID] = MAP.ID,
                    2-[USERCODE] = MAP.USER_CODE,
                    3-[MAINCODE] = MAP.MAIN_CODE,
                    4-[MODULE] = MAP.PAGE_MODULE,
                    5-[FIELD] = MAP.PAGE_FIELD,
                    6-[ELEMENTID] = MAP.ELEMENT_ID,
                    7-[ELEMENTXPATH] = MAP.ELEMENT_XPATH,
                    8-[LINK] = MAP.LINK_VALUE,
                    9-[URL] = MAP.PAGE_URL,
                    10-[TITLE] = MAP.PAGE_TITLE,
                    11-[ELEMENTTYPE] = MAP.ELEMENT_TYPE,
                    12-[ELEMENTVALUE] = MAP.ELEMENT_VALUE,
                    13-[ELEMENTACTION] = MAP.ELEMENT_ACTION,
                    14-[MENUREF] = MAP.MENU_REFERENCE,
                    15-[WORKSHEETREF] = MAP.WORKSHEET_REFERENCE,
                    16-[FIELDREF] = MAP.FIELD_REFERENCE,
                    17-[ELEMENTMSG] = MAP.ELEMENT_MESSAGE,
                    18-[ELEMENTRESULT] = MAP.ELEMENT_RESULT                    
                    */
                    Id = NumberToTextConverter.toText(rs.getInt(1));
                    UserCode = rs.getNString(2);
                    MenuCode = rs.getNString(3);
                    Module = rs.getNString(4);
                    Field = rs.getNString(5);
                    ElemId = rs.getNString(6);
                    ElemXpath = rs.getNString(7);
                    ElemType = rs.getNString(11);
                    ElemAction = rs.getNString(13);
                    
                    String[] arrTbl = {Id,UserCode,MenuCode, Module, Field, ElemId, ElemXpath,ElemType, ElemAction};

                    DefaultTableModel tblmodel = (DefaultTableModel)MainMenuTbl.getModel();
                    tblmodel.addRow(arrTbl);
                }
                cs.close();
                conn.close();            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Table loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                 
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuTestScript.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuTestScript.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuTestScript.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuTestScript.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuTestScript().setVisible(true);
            }
        });
    }

    private void display(){
        //JFrame f = new JFrame("TestScript");
        //TestScript f = new TestScript();
        //f.setExtendedState(JFrame.MAXIMIZED_BOTH);
        //f.setVisible(true);
        if(this.getExtendedState() != MenuTestScript.MAXIMIZED_BOTH){
            this.setExtendedState(MenuTestScript.MAXIMIZED_BOTH);
        }
        else{
            this.setExtendedState(MenuTestScript.NORMAL);
        }
    }    
    
    private void loadMainMenuTbl(){
            JFrame jFrame = new JFrame();
            try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_ByProjCode(?)}");
                String Id = "";
                String ProjCode = "";
                String UserCode = "";
                String MenuCode = "";
                String Module = "";
                String Field = "";
                String ElemId = "";
                String ElemXpath = "";
                String ElemType = "";
                String ElemAction = "";
                
                ProjCode = ProjCodeTxt.getText();
                MainMenuTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Module", "Field", "Element ID", "Element XPath", "Element Type", "Element Action"}));
                
                cs.setNString(1, ProjCode);
                ResultSet rs = cs.executeQuery();
                while(rs.next()){
                    /*
                    1-[ID] = MAP.ID,
                    2-[USERCODE] = MAP.USER_CODE,
                    3-[MAINCODE] = MAP.MAIN_CODE,
                    4-[MODULE] = MAP.PAGE_MODULE,
                    5-[FIELD] = MAP.PAGE_FIELD,
                    6-[ELEMENTID] = MAP.ELEMENT_ID,
                    7-[ELEMENTXPATH] = MAP.ELEMENT_XPATH,
                    8-[LINK] = MAP.LINK_VALUE,
                    9-[URL] = MAP.PAGE_URL,
                    10-[TITLE] = MAP.PAGE_TITLE,
                    11-[ELEMENTTYPE] = MAP.ELEMENT_TYPE,
                    12-[ELEMENTVALUE] = MAP.ELEMENT_VALUE,
                    13-[ELEMENTACTION] = MAP.ELEMENT_ACTION,
                    14-[MENUREF] = MAP.MENU_REFERENCE,
                    15-[WORKSHEETREF] = MAP.WORKSHEET_REFERENCE,
                    16-[FIELDREF] = MAP.FIELD_REFERENCE,
                    17-[ELEMENTMSG] = MAP.ELEMENT_MESSAGE,
                    18-[ELEMENTRESULT] = MAP.ELEMENT_RESULT                    
                    */
                    Id = NumberToTextConverter.toText(rs.getInt(1));
                    UserCode = rs.getNString(2);
                    MenuCode = rs.getNString(3);
                    Module = rs.getNString(4);
                    Field = rs.getNString(5);
                    ElemId = rs.getNString(6);
                    ElemXpath = rs.getNString(7);
                    ElemType = rs.getNString(11);
                    ElemAction = rs.getNString(13);
                    
                    String[] arrTbl = {Id, UserCode,MenuCode, Module, Field, ElemId, ElemXpath,ElemType, ElemAction};

                    DefaultTableModel tblmodel = (DefaultTableModel)MainMenuTbl.getModel();
                    tblmodel.addRow(arrTbl);
                }
                cs.close();
                conn.close();
                
            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Menu Test Script - Parent Menu List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                    
            }
    }
    
    private void loadChildMenuTbl(){
            JFrame jFrame = new JFrame();
            try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cs = conn.prepareCall("{call Search_MenuTestScript_ByProjCode(?)}");
                
                String ProJCode = ProjCodeTxt.getText();
                String Id = "";
                String MenuCode = "";
                String UserCode = "";
                String ChildMenuCode = "";
                String PageModule = "";
                String PageField = "";
                String ElementId = "";
                String ElementXpath = "";
                String LinkValue = "";
                String PageUrl = "";
                String PageTitle = "";
                String ElementType = "";
                String ElementValue = "";
                String ElementAction = "";
                String MenuReference = "";
                String WorksheetReference = "";
                String FieldReference = "";
                String ElementMessage = "";
                String ElementResult = "";
                String MenuLvl = "";
                String Sequence = "";
                
                cs.setNString(1, ProJCode);

                /*
                1-MT.ID,
                2-MT.USER_CODE,
                3-MT.MENU_CODE,
                4-MT.CHILDMENU_CODE,
                5-MT.PAGE_MODULE,
                6-MT.PAGE_FIELD,
                7-MT.ELEMENT_ID,
                8-MT.ELEMENT_XPATH,
                9-MT.LINK_VALUE,
                10-MT.PAGE_URL,
                11-MT.PAGE_TITLE,
                12-MT.ELEMENT_TYPE,
                13-MT.ELEMENT_VALUE,
                14-MT.ELEMENT_ACTION,
                15-MT.MENU_REFERENCE,
                16-MT.WORKSHEET_REFERENCE,
                17-MT.FIELD_REFERENCE,
                18-MT.ELEMENT_MESSAGE,
                19-MT.ELEMENT_RESULT,
                20-MT.MENU_LVL,
                21-MT.SEQUENCE                
                */
                
                ChildMenuTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Child Menu Code", "Page Module", "Page Field", "Element ID", "Element XPath","Element Type", "Element Action", "Menu Level", "Sequence"}));
                ResultSet rs = cs.executeQuery();
                
                while(rs.next()){
                    Id = NumberToTextConverter.toText(rs.getInt(1));
                    UserCode = rs.getNString(2);
                    MenuCode = rs.getNString(3);
                    ChildMenuCode = rs.getNString(4);
                    PageModule = rs.getNString(5);
                    PageField = rs.getNString(6);
                    ElementId = rs.getNString(7);
                    ElementXpath = rs.getNString(8);
                    ElementType = rs.getNString(12);
                    ElementAction = rs.getNString(13);
                    MenuLvl = NumberToTextConverter.toText(rs.getInt(20));
                    Sequence = NumberToTextConverter.toText(rs.getInt(21));
                    String[] arrList = {Id, UserCode, MenuCode, ChildMenuCode, PageModule, PageField, ElementId, ElementXpath, ElementType, ElementAction, MenuLvl, Sequence};

                    DefaultTableModel tblModel = (DefaultTableModel)ChildMenuTbl.getModel();
                    tblModel.addRow(arrList);
                    
                }
                cs.close();
                conn.close();
                
            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Menu Test Script - Child Menu List loading failed " + 
                               "\n" + errMessage, "Child Menu Test Script - Maintenance", 0);                    
            }
    }
    
    private void loadMainUserCodeList(){
        JFrame jFrame = new JFrame();
        try{
            String ProjCode = ProjCodeTxt.getText();
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_DistinctProjCode(?)}");
            cs.setNString(1, ProjCode);
            
            //MainUserCodeCmb.removeAllItems();
            int countItems = MainUserCodeCmb.getItemCount();
            if(countItems > 0){
                MainUserCodeCmb.removeAllItems();
            }
            
            ResultSet rs = cs.executeQuery();
            while(rs.next()){
                String UserCode = rs.getNString(1);
                MainUserCodeCmb.addItem(UserCode);
            }
            
            //MainUserCodeCmb.addMouseListener(mListener);
            cs.close();
            conn.close();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main User Code - List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                  
        }
    }
    
    private void loadMainMenuCodeList(){
        JFrame jFrame = new JFrame();
        try{
            String ProjCode = ProjCodeTxt.getText();
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_DistinctMenuCode(?)}");
            cs.setNString(1,ProjCode);
            ResultSet rs = cs.executeQuery();
            
            //MainMenuCodeCmb.removeAllItems();
            int countItems = MainMenuCodeCmb.getItemCount();
            if(countItems > 0){
                MainMenuCodeCmb.removeAllItems();
            }
            
            while(rs.next()){
                String MenuCode = rs.getNString("MAINCODE");
                MainMenuCodeCmb.addItem(MenuCode);
            }
            //MainMenuCodeCmb.addActionListener((ActionListener) this);
            
            cs.close();
            conn.close();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Code - List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                    
        }
    }
    
    private void loadChildMenuTbl_ProjCodeUserCode(String givenProjCode, String givenUserCode){
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cs = conn.prepareCall("{call Search_MenuTestScriptTbl_ByProjCodeUserCode(?,?)}");
                cs.setNString(1, givenProjCode);
                cs.setNString(2, givenUserCode);
                
                String Id = "";
                String MenuCode = "";
                String UserCode = "";
                String ChildMenuCode = "";
                String PageModule = "";
                String PageField = "";
                String ElementId = "";
                String ElementXpath = "";
                String LinkValue = "";
                String PageUrl = "";
                String PageTitle = "";
                String ElementType = "";
                String ElementValue = "";
                String ElementAction = "";
                String MenuReference = "";
                String WorksheetReference = "";
                String FieldReference = "";
                String ElementMessage = "";
                String ElementResult = "";
                String MenuLvl = "";
                String Sequence = "";

                /*
                1-MT.USER_CODE,
                2-MT.MENU_CODE,
                3-MT.CHILDMENU_CODE,
                4-MT.PAGE_MODULE,
                5-MT.PAGE_FIELD,
                6-MT.ELEMENT_ID,
                7-MT.ELEMENT_XPATH,
                8-MT.LINK_VALUE,
                9-MT.PAGE_URL,
                10-MT.PAGE_TITLE,
                11-MT.ELEMENT_TYPE,
                12-MT.ELEMENT_VALUE,
                13-MT.ELEMENT_ACTION,
                14-MT.MENU_REFERENCE,
                15-MT.WORKSHEET_REFERENCE,
                16-MT.FIELD_REFERENCE,
                17-MT.ELEMENT_MESSAGE,
                18-MT.ELEMENT_RESULT,
                19-MT.MENU_LVL,
                20-MT.SEQUENCE                
                */
                
                ChildMenuTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Child Menu Code", "Page Module", "Page Field", "Element ID", "Element XPath","Element Type", "Element Action", "Menu Level", "Sequence"}));
                ResultSet rs = cs.executeQuery();
                
                while(rs.next()){
                    Id = NumberToTextConverter.toText(rs.getInt(1));
                    UserCode = rs.getNString(2);
                    MenuCode = rs.getNString(3);
                    ChildMenuCode = rs.getNString(4);
                    PageModule = rs.getNString(5);
                    PageField = rs.getNString(6);
                    ElementId = rs.getNString(7);
                    ElementXpath = rs.getNString(8);
                    ElementType = rs.getNString(12);
                    ElementAction = rs.getNString(13);
                    MenuLvl = NumberToTextConverter.toText(rs.getInt(20));
                    Sequence = NumberToTextConverter.toText(rs.getInt(21));
                    String[] arrList = {Id, UserCode, MenuCode, ChildMenuCode, PageModule, PageField, ElementId, ElementXpath, ElementType, ElementAction, MenuLvl, Sequence};

                    DefaultTableModel tblModel = (DefaultTableModel)ChildMenuTbl.getModel();
                    tblModel.addRow(arrList);
                    
                }
                cs.close();
                conn.close();
                
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Menu Test Script - Child Menu List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);              
        }
    }
    
    private void loadMainMenuCodeList_ProjCodeUserCode(String givenProjCode, String givenUserCode){
        JFrame jFrame = new JFrame();
        try{
            //Search_UserMenuMap_DistinctMenuCode_ProjCodeUserCode
            String ProjCode = ProjCodeTxt.getText();
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_DistinctMenuCode_ProjCodeUserCode(?,?)}");
            cs.setNString(1,givenProjCode);
            cs.setNString(2, givenUserCode);
            ResultSet rs = cs.executeQuery();
            
            //MainMenuCodeCmb.removeAllItems();
            int countItems = MainMenuCodeCmb.getItemCount();
            if(countItems > 0){
                MainMenuCodeCmb.removeAllItems();
            }
            
            while(rs.next()){
                String MenuCode = rs.getNString("MAINCODE");
                MainMenuCodeCmb.addItem(MenuCode);
            }
            cs.close();
            conn.close();            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Test List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                          
        }
    }
    
    private void loadChildMenuCodeList(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_MenuTestScript_DistinctMenuCode_ByProjCode(?)}");
            String ProjCode = ProjCodeTxt.getText();
            String MenuCode = "";
            int countItem = ParentCodeCmb.getItemCount();
            if(countItem > 0){
                ParentCodeCmb.removeAllItems();
            }
            
            cs.setNString(1, ProjCode);
            ResultSet rs = cs.executeQuery();
            while(rs.next()){
                MenuCode = rs.getNString(1);
                ParentCodeCmb.addItem(MenuCode);
            }
            
            cs.close();
            conn.close();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Menu Code List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                          
        }
    }

    private void loadMainMenuTbl_ProjCodeUserCodeMenuCode(String givenProjCode, String givenUserCode, String givenMenuCode){
        JFrame jFrame = new JFrame();
        try{
            //Search_UserMenuMap_ProjCodeUserCodeMenuCode
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cs = conn.prepareCall("{call Search_UserMenuMap_ProjCodeUserCodeMenuCode(?,?,?)}");
                String Id = "";
                String ProjCode = "";
                String UserCode = "";
                String MenuCode = "";
                String Module = "";
                String Field = "";
                String ElemId = "";
                String ElemXpath = "";
                String ElemType = "";
                String ElemAction = "";
                
                ProjCode = ProjCodeTxt.getText();
                MainMenuTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Module", "Field", "Element ID", "Element XPath", "Element Type", "Element Action"}));
                
                cs.setNString(1, givenProjCode);
                cs.setNString(2, givenUserCode);
                cs.setNString(3, givenMenuCode);
                
                ResultSet rs = cs.executeQuery();
                while(rs.next()){
                    /*
                    1-[ID] = MAP.ID,
                    2-[USERCODE] = MAP.USER_CODE,
                    3-[MAINCODE] = MAP.MAIN_CODE,
                    4-[MODULE] = MAP.PAGE_MODULE,
                    5-[FIELD] = MAP.PAGE_FIELD,
                    6-[ELEMENTID] = MAP.ELEMENT_ID,
                    7-[ELEMENTXPATH] = MAP.ELEMENT_XPATH,
                    8-[LINK] = MAP.LINK_VALUE,
                    9-[URL] = MAP.PAGE_URL,
                    10-[TITLE] = MAP.PAGE_TITLE,
                    11-[ELEMENTTYPE] = MAP.ELEMENT_TYPE,
                    12-[ELEMENTVALUE] = MAP.ELEMENT_VALUE,
                    13-[ELEMENTACTION] = MAP.ELEMENT_ACTION,
                    14-[MENUREF] = MAP.MENU_REFERENCE,
                    15-[WORKSHEETREF] = MAP.WORKSHEET_REFERENCE,
                    16-[FIELDREF] = MAP.FIELD_REFERENCE,
                    17-[ELEMENTMSG] = MAP.ELEMENT_MESSAGE,
                    18-[ELEMENTRESULT] = MAP.ELEMENT_RESULT                    
                    */
                    Id = NumberToTextConverter.toText(rs.getInt(1));
                    UserCode = rs.getNString(2);
                    MenuCode = rs.getNString(3);
                    Module = rs.getNString(4);
                    Field = rs.getNString(5);
                    ElemId = rs.getNString(6);
                    ElemXpath = rs.getNString(7);
                    ElemType = rs.getNString(11);
                    ElemAction = rs.getNString(13);
                    
                    String[] arrTbl = {Id, UserCode,MenuCode, Module, Field, ElemId, ElemXpath,ElemType, ElemAction};

                    DefaultTableModel tblmodel = (DefaultTableModel)MainMenuTbl.getModel();
                    tblmodel.addRow(arrTbl);
                }
                cs.close();
                conn.close();            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Main Menu Table loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);              
        }
    }
    
    private void loadChildMenuTbl_ProjCodeUserCodeMainMenuCode(String givenProjCode, String givenUserCode, String givenMenuCode){
        JFrame jFrame = new JFrame();
        try{
                //***************************************************
            //Search_MenuTestScript_ByProjCodeUserCodeMenuCode
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                //CallableStatement cs = conn.prepareCall("{call Search_MenuTestScript_ByProjCodeUserCodeMenuCode(?,?,?)}");
                CallableStatement cs = conn.prepareCall("{call Search_MenuTestScriptTbl_ByProjCodeUserCodeMenuCode(?,?,?)}");
                cs.setNString(1, givenProjCode);
                cs.setNString(2, givenUserCode);
                cs.setNString(3, givenMenuCode);
                
                String Id = "";
                String MenuCode = "";
                String UserCode = "";
                String ChildMenuCode = "";
                String PageModule = "";
                String PageField = "";
                String ElementId = "";
                String ElementXpath = "";
                String LinkValue = "";
                String PageUrl = "";
                String PageTitle = "";
                String ElementType = "";
                String ElementValue = "";
                String ElementAction = "";
                String MenuReference = "";
                String WorksheetReference = "";
                String FieldReference = "";
                String ElementMessage = "";
                String ElementResult = "";
                String MenuLvl = "";
                String Sequence = "";

                /*
                1-MT.USER_CODE,
                2-MT.MENU_CODE,
                3-MT.CHILDMENU_CODE,
                4-MT.PAGE_MODULE,
                5-MT.PAGE_FIELD,
                6-MT.ELEMENT_ID,
                7-MT.ELEMENT_XPATH,
                8-MT.LINK_VALUE,
                9-MT.PAGE_URL,
                10-MT.PAGE_TITLE,
                11-MT.ELEMENT_TYPE,
                12-MT.ELEMENT_VALUE,
                13-MT.ELEMENT_ACTION,
                14-MT.MENU_REFERENCE,
                15-MT.WORKSHEET_REFERENCE,
                16-MT.FIELD_REFERENCE,
                17-MT.ELEMENT_MESSAGE,
                18-MT.ELEMENT_RESULT,
                19-MT.MENU_LVL,
                20-MT.SEQUENCE                
                */
                
                ChildMenuTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Child Menu Code", "Page Module", "Page Field", "Element ID", "Element XPath","Element Type", "Element Action", "Menu Level", "Sequence"}));
                ResultSet rs = cs.executeQuery();
                
                while(rs.next()){
                    Id = NumberToTextConverter.toText(rs.getInt(1));
                    UserCode = rs.getNString(2);
                    MenuCode = rs.getNString(3);
                    ChildMenuCode = rs.getNString(4);
                    PageModule = rs.getNString(5);
                    PageField = rs.getNString(6);
                    ElementId = rs.getNString(7);
                    ElementXpath = rs.getNString(8);
                    ElementType = rs.getNString(12);
                    ElementAction = rs.getNString(13);
                    MenuLvl = NumberToTextConverter.toText(rs.getInt(20));
                    Sequence = NumberToTextConverter.toText(rs.getInt(21));
                    String[] arrList = {Id, UserCode, MenuCode, ChildMenuCode, PageModule, PageField, ElementId, ElementXpath, ElementType, ElementAction, MenuLvl, Sequence};

                    DefaultTableModel tblModel = (DefaultTableModel)ChildMenuTbl.getModel();
                    tblModel.addRow(arrList);
                    
                }
                cs.close();
                conn.close();            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Menu Table loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);               
        }
        
    }
    
    private void loadChildMenuCodeLst_ProjCodeUserCodeMainMenuCode(String givenProjCode, String givenUserCode, String givenMenuCode){
        JFrame jFrame = new JFrame();
        try{
            //Search_MenuTestScript_DistinctMenuCode_ByProjCodeUserCodeMenuCode
            //Search_MenuTestScript_DistinctMenuCodeLst_ByProjCodeUserCodeMenuCode
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            //CallableStatement cs = conn.prepareCall("{call Search_MenuTestScript_DistinctMenuCode_ByProjCodeUserCodeMenuCode(?,?,?)}");
            CallableStatement cs = conn.prepareCall("{call Search_MenuTestScript_DistinctMenuCodeLst_ByProjCodeUserCodeMenuCode(?,?,?)}");
            String MenuCode = "";
 
            cs.setNString(1, givenProjCode);
            cs.setNString(2, givenUserCode);
            cs.setNString(3, givenMenuCode);
            
            int itemCount = ParentCodeCmb.getItemCount();
            if(itemCount > 0){
                ParentCodeCmb.removeAllItems();
            }
            
            ResultSet rs = cs.executeQuery();
            while(rs.next()){
                MenuCode = rs.getNString(1);
                ParentCodeCmb.addItem(MenuCode);
            }
            
            cs.close();
            conn.close();            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Child Menu Code List loading failed " + 
                               "\n" + errMessage, "Menu Test Script - Maintenance", 0);                 
        }
    }
    
    
    private static int UserCodeIndexSelected;
    private static int MainIndexSelected;
    private static int ChildIndexSelected;
    
    public void setUserCodeIndexSelected(int givenIndex){
        UserCodeIndexSelected = givenIndex;
    }
    
    public int getUserCodeIndexSelected(){
        return UserCodeIndexSelected;
    }
    
    public void setMainIndexSelected(int givenIndex){
        MainIndexSelected = givenIndex;
    }
    
    public int getMainIndexSelected(){
        return MainIndexSelected;
    }
    
    public void setChildIndexSelected(int givenIndex){
        ChildIndexSelected = givenIndex;
    }
    
    public int getChildIndexSelected(){
        return ChildIndexSelected;
    }
    
    private void defaultsettingsMainMenu(){
        
        MainMenuIdTxt.setEnabled(false);
        ProjCodeTxt.setEnabled(false);
        ProjDescTxt.setEnabled(false);
        MainUserCodeCmb.setEnabled(true);
        MainMenuCodeCmb.setEnabled(true);
        MainModuleTxt.setEnabled(false);
        MainFieldTxt.setEnabled(false);
        MainElemIdTxt.setEnabled(false);
        MainElemXpathTxt.setEnabled(false);
        MainElemTypeCmb.setEnabled(false);
        MainElemActionCmb.setEnabled(false);
        
        if(getStatusMainFlag() == 0){
            MainMenuIdTxt.setText("");
            MainModuleTxt.setText("");
            MainFieldTxt.setText("");
            MainElemIdTxt.setText("");
            MainElemXpathTxt.setText("");
        }

        MainNewBtn.setEnabled(true);
        MainDeleteBtn.setEnabled(false);
        MainChangeBtn.setEnabled(false);
        MainSaveBtn.setEnabled(false);
        MainCancelBtn.setEnabled(false);

    }
    
    private void defaultsettingsChildMenu(){
        ChildMenuIdTxt.setEnabled(false);
        ParentCodeCmb.setEnabled(true);
        ChildCodeTxt.setEnabled(false);
        ChildModuleTxt.setEnabled(false);
        ChildFieldTxt.setEnabled(false);
        ChildElemIdTxt.setEnabled(false);
        ChildElemXpathTxt.setEnabled(false);
        ChildElemTypeCmb.setEnabled(false);
        ChildElemActionCmb.setEnabled(false);
        ChildLevelTxt.setEnabled(false);
        ChildSeqTxt.setEnabled(false);
        
        //ParentCodeCmb.setSelectedItem(ParentCode);
        ChildMenuIdTxt.setText("");
        ChildCodeTxt.setText("");
        ChildModuleTxt.setText("");
        ChildFieldTxt.setText("");
        ChildElemIdTxt.setText("");
        ChildElemXpathTxt.setText("");
        //ChildElemTypeCmb.setSelectedItem(ChildElemType);
        //ChildElemActionCmb.setSelectedItem(ChildElemAction);
        ChildLevelTxt.setText("");
        ChildSeqTxt.setText("");              
        
        ChildNewBtn.setEnabled(true);
        ChildDeleteBtn.setEnabled(false);
        ChildChangeBtn.setEnabled(false);
        ChildSaveBtn.setEnabled(false);
        ChildCancelBtn.setEnabled(false);        
    }
    
    private void MainSelectedItem_EnabledDeleteChangeCancel(){
        MainNewBtn.setEnabled(false);
        MainDeleteBtn.setEnabled(true);
        MainChangeBtn.setEnabled(true);
        MainSaveBtn.setEnabled(false);
        MainCancelBtn.setEnabled(true);
    }
    
    private void MainSelectedItem_EnabledSaveCancel(){
        ProjCodeTxt.setEnabled(false);
        ProjDescTxt.setEnabled(false);
        MainUserCodeCmb.setEnabled(true);
        MainMenuCodeCmb.setEnabled(true);
        MainModuleTxt.setEnabled(true);
        MainFieldTxt.setEnabled(true);
        MainElemIdTxt.setEnabled(true);
        MainElemXpathTxt.setEnabled(true);
        MainElemTypeCmb.setEnabled(true);
        MainElemActionCmb.setEnabled(true);        
        
        MainNewBtn.setEnabled(false);
        MainDeleteBtn.setEnabled(false);
        MainChangeBtn.setEnabled(false);
        MainSaveBtn.setEnabled(true);
        MainCancelBtn.setEnabled(true);        
    }
    
    private void ChildSelectedItem_EnabledDeleteChangeCancel(){
            ChildNewBtn.setEnabled(false);
            ChildDeleteBtn.setEnabled(true);
            ChildChangeBtn.setEnabled(true);
            ChildSaveBtn.setEnabled(false);
            ChildCancelBtn.setEnabled(true);
    }
    
    private void ChildSelectedItem_EnabledSaveCancel(){
            ParentCodeCmb.setEnabled(true);
            ChildCodeTxt.setEnabled(true);
            ChildModuleTxt.setEnabled(true);
            ChildFieldTxt.setEnabled(true);
            ChildElemIdTxt.setEnabled(true);
            ChildElemXpathTxt.setEnabled(true);
            ChildElemTypeCmb.setEnabled(true);
            ChildElemActionCmb.setEnabled(true);
            ChildLevelTxt.setEnabled(true);
            ChildSeqTxt.setEnabled(true);        
            
            ChildNewBtn.setEnabled(false);
            ChildDeleteBtn.setEnabled(false);
            ChildChangeBtn.setEnabled(false);
            ChildSaveBtn.setEnabled(true);
            ChildCancelBtn.setEnabled(true);            
    }
    
    private int statusMainFlag;
    
    public void setStatusMainFlag(int givenStatusMainFlag){
        statusMainFlag = givenStatusMainFlag;
    }
    
    public int getStatusMainFlag(){
        return statusMainFlag;
    }
    
    private static String globalUserCode;
    private static String globalMainMenuCode;
    
    public static void setUserCode(String givenUserCode){
        globalUserCode = givenUserCode;
    }
    
    public static String getUserCode(){
        return globalUserCode;
    }
    
    public static void setMainMenuCode(String givenMenuCode){
        globalMainMenuCode = givenMenuCode;
    }
    
    public static String getMainMenuCode(){
        return globalMainMenuCode;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton ChildCancelBtn;
    private javax.swing.JButton ChildChangeBtn;
    private javax.swing.JTextField ChildCodeTxt;
    private javax.swing.JButton ChildDeleteBtn;
    private javax.swing.JComboBox<String> ChildElemActionCmb;
    private javax.swing.JTextField ChildElemIdTxt;
    private javax.swing.JComboBox<String> ChildElemTypeCmb;
    private javax.swing.JTextField ChildElemXpathTxt;
    private javax.swing.JTextField ChildFieldTxt;
    private javax.swing.JTextField ChildLevelTxt;
    private javax.swing.JTextField ChildMenuIdTxt;
    private javax.swing.JTable ChildMenuTbl;
    private javax.swing.JTextField ChildModuleTxt;
    private javax.swing.JButton ChildNewBtn;
    private javax.swing.JButton ChildSaveBtn;
    private javax.swing.JTextField ChildSeqTxt;
    private javax.swing.JButton MainCancelBtn;
    private javax.swing.JButton MainChangeBtn;
    private javax.swing.JButton MainDeleteBtn;
    private javax.swing.JComboBox<String> MainElemActionCmb;
    private javax.swing.JTextField MainElemIdTxt;
    private javax.swing.JComboBox<String> MainElemTypeCmb;
    private javax.swing.JTextField MainElemXpathTxt;
    private javax.swing.JTextField MainFieldTxt;
    private javax.swing.JComboBox<String> MainMenuCodeCmb;
    private javax.swing.JTextField MainMenuIdTxt;
    private javax.swing.JTable MainMenuTbl;
    private javax.swing.JTextField MainModuleTxt;
    private javax.swing.JButton MainNewBtn;
    private javax.swing.JButton MainSaveBtn;
    private javax.swing.JComboBox<String> MainUserCodeCmb;
    private javax.swing.JComboBox<String> ParentCodeCmb;
    private javax.swing.JTextField ProjCodeTxt;
    private javax.swing.JTextField ProjDescTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables


}
