/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ewb.qa.tdd.GUI;


import ewb.qa.tdd.SQLObj;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import java.awt.*;
import java.awt.event.*;
import org.apache.poi.ss.util.NumberToTextConverter;
import ewb.qa.tdd.GUI.MainGUI.*;
import ewb.qa.tdd.SeleniumObj;
import javax.swing.table.TableColumnModel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.*;

import org.apache.commons.io.FileUtils;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.chrome.ChromeDriver;

import ewb.qa.tdd.GUI.MenuTestScript.*;

/**
 *
 * @author JPE61800
 */
public class CreateNewChildMenu extends javax.swing.JFrame {

    /**
     * Creates new form CreateNewChildMenu
     */
    
    public CreateNewChildMenu() {
        initComponents();
        
        String ProjCode = MainGUI.getProjectCode();
        String ProjDesc = MainGUI.getProjectDesc();
        ProjCodeTxt.setText(ProjCode);
        ProjDescTxt.setText(ProjDesc);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ProjCodeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ProjDescTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        UserCodeCmb = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ParentMenuCodeTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ChildMenuCodeTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ModuleTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        FieldTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ElemIdTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ElemXpathTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ElemTypeCmb = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        ElemActionCmb = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        MenuLvlTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        SequenceTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        MenuTestScriptTbl = new javax.swing.JTable();
        SaveBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create New Child Menu - Maintenance");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Project Code :");

        ProjCodeTxt.setText("jTextField1");

        jLabel2.setText("Project Name :");

        ProjDescTxt.setText("jTextField2");

        jLabel3.setText("User Code :");

        UserCodeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Menu Code :");

        ParentMenuCodeTxt.setText("jTextField3");

        jLabel5.setText("Child Menu Code :");

        ChildMenuCodeTxt.setText("jTextField4");

        jLabel6.setText("Module :");

        ModuleTxt.setText("jTextField5");

        jLabel7.setText("Field :");

        FieldTxt.setText("jTextField6");

        jLabel8.setText("Element ID :");

        ElemIdTxt.setText("jTextField7");

        jLabel9.setText("Element XPath :");

        ElemXpathTxt.setText("jTextField8");

        jLabel10.setText("Element Type :");

        ElemTypeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Button" }));

        jLabel11.setText("Element Action :");

        ElemActionCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Click" }));

        jLabel12.setText("Menu Level :");

        MenuLvlTxt.setText("jTextField9");

        jLabel13.setText("Sequence :");

        SequenceTxt.setText("jTextField10");

        MenuTestScriptTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        MenuTestScriptTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(MenuTestScriptTbl);

        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ProjDescTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(ModuleTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                            .addComponent(UserCodeCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ParentMenuCodeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                            .addComponent(FieldTxt))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChildMenuCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(ElemTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ElemActionCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(MenuLvlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SequenceTxt))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ElemIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ElemXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 185, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(UserCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(ParentMenuCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(ChildMenuCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(FieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ElemIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(ElemXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ElemTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(ElemActionCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(MenuLvlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(SequenceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelBtn)
                    .addComponent(SaveBtn)
                    .addComponent(BackBtn))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MenuTestScript menuts = new MenuTestScript();
        menuts.setVisible(true);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //MenuTestScript mt = new MenuTestScript();

        String ProjCode = ProjCodeTxt.getText();
        String UserCode = MenuTestScript.getUserCode();
        String MainMenuCode = MenuTestScript.getMainMenuCode();

        loadTDDUserCode(ProjCode);
        loadChildMenuTbl(ProjCode, UserCode, MainMenuCode);
        
        UserCodeCmb.setSelectedItem(UserCode);
        ParentMenuCodeTxt.setText(MainMenuCode);
        defaultsettings();
        
        //display();
                
    }//GEN-LAST:event_formWindowOpened

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        defaultsettings();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Insert_MenuTestscript(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
            
            /*
            1-@proj_code NVARCHAR(20),
            2-@user_code NVARCHAR(20),
            3-@menu_code NVARCHAR(50),
            4-@childmenu_code NVARCHAR(50),
            5-@page_module NVARCHAR(50),
            6-@page_field NVARCHAR(50),
            7-@element_id NVARCHAR(200),
            8-@element_xpath NVARCHAR(200),
            9-@link_value NVARCHAR(50),
            10-@page_url NVARCHAR(200),
            11-@page_title NVARCHAR(100),
            12-@element_type NVARCHAR(50),
            13-@element_value NVARCHAR(100),
            14-@element_action NVARCHAR(50),
            15-@menu_reference NVARCHAR(50),
            16-@worksheet_reference NVARCHAR(50),
            17-@field_reference NVARCHAR(50),
            18-@element_message NVARCHAR(500),
            19-@element_result NVARCHAR(100),
            20-@menu_lvl INT,
            21-@sequence INT            
            */
            cs.setNString(1, ProjCodeTxt.getText());
            cs.setNString(2, UserCodeCmb.getSelectedItem().toString());
            cs.setNString(3, ParentMenuCodeTxt.getText());
            cs.setNString(4, ChildMenuCodeTxt.getText());
            cs.setNString(5, ModuleTxt.getText());
            cs.setNString(6, FieldTxt.getText());
            cs.setNString(7, ElemIdTxt.getText());
            cs.setNString(8, ElemXpathTxt.getText());
            cs.setNString(9, "null");
            cs.setNString(10, "null");
            cs.setNString(11, "null");
            cs.setNString(12, ElemTypeCmb.getSelectedItem().toString());
            cs.setNString(13, "null");
            cs.setNString(14, ElemActionCmb.getSelectedItem().toString());
            cs.setNString(15, "null");
            cs.setNString(16, "null");
            cs.setNString(17, "null");
            cs.setNString(18, "null");
            cs.setNString(19, "null");
            cs.setInt(20, Integer.parseInt(MenuLvlTxt.getText()));
            cs.setInt(21, Integer.parseInt(SequenceTxt.getText()));
            
            int response = 0;
            int saveflag = 0;
            
            response = JOptionPane.showConfirmDialog(jFrame, "Are you sure you want to add this record into the database", "Create Child Menu - Maintenance", JOptionPane.YES_NO_OPTION);
            if(response == 0){
                String ProjCode = ProjCodeTxt.getText();
                String UserCode = UserCodeCmb.getSelectedItem().toString();
                String MenuCode = ParentMenuCodeTxt.getText();
                int menuLvl = Integer.parseInt(MenuLvlTxt.getText());
                int menuSeq = Integer.parseInt(SequenceTxt.getText());

                if(validateMenuLvlSeq(ProjCode, UserCode, MenuCode, menuLvl, menuSeq)){
                    saveflag = cs.executeUpdate();
                    if(saveflag < 0){
                        JOptionPane.showMessageDialog(jFrame, "Record Successfull Saved", "Create Child Menu - Mainteance", JOptionPane.INFORMATION_MESSAGE);
                        
                        String mainmenucode = MenuTestScript.getMainMenuCode();
                        loadChildMenuTbl(ProjCode, UserCode, mainmenucode);
                        
                    }
                }
            }
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Populate Child Menu Table failed " + 
                               "\n" + errMessage, "Create New Child Menu - Maintenance", 0);                
        }
    }//GEN-LAST:event_SaveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateNewChildMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateNewChildMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateNewChildMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateNewChildMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateNewChildMenu().setVisible(true);
            }
        });
    }

    private void loadTDDUserCode(String givenProjCode){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_TDDUserLst_ByProjCode(?)}");
            cs.setNString(1, givenProjCode);
            
            int countItem = UserCodeCmb.getItemCount();
            if(countItem > 0){
                UserCodeCmb.removeAllItems();
            }
            
            ResultSet rs = cs.executeQuery();
            while(rs.next()){
                String UserCode = rs.getNString(1);
                UserCodeCmb.addItem(UserCode);
            }
            cs.close();
            conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Populate User Code failed " + 
                               "\n" + errMessage, "Create New Child Menu - Maintenance", 0);             
        }
    }
    
    private void loadChildMenuTbl(String givenProjCode, String givenUserCode, String givenMenuCode){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_MenuTestScriptTbl_ByProjCodeUserCodeMenuCode(?,?,?)}");
            cs.setNString(1, givenProjCode);
            cs.setNString(2, givenUserCode);
            cs.setNString(3, givenMenuCode);

            String Id = "";
            String MenuCode = "";
            String UserCode = "";
            String ChildMenuCode = "";
            String PageModule = "";
            String PageField = "";
            String ElementId = "";
            String ElementXpath = "";
            String LinkValue = "";
            String PageUrl = "";
            String PageTitle = "";
            String ElementType = "";
            String ElementValue = "";
            String ElementAction = "";
            String MenuReference = "";
            String WorksheetReference = "";
            String FieldReference = "";
            String ElementMessage = "";
            String ElementResult = "";
            String MenuLvl = "";
            String Sequence = "";

            /*
            1-MT.USER_CODE,
            2-MT.MENU_CODE,
            3-MT.CHILDMENU_CODE,
            4-MT.PAGE_MODULE,
            5-MT.PAGE_FIELD,
            6-MT.ELEMENT_ID,
            7-MT.ELEMENT_XPATH,
            8-MT.LINK_VALUE,
            9-MT.PAGE_URL,
            10-MT.PAGE_TITLE,
            11-MT.ELEMENT_TYPE,
            12-MT.ELEMENT_VALUE,
            13-MT.ELEMENT_ACTION,
            14-MT.MENU_REFERENCE,
            15-MT.WORKSHEET_REFERENCE,
            16-MT.FIELD_REFERENCE,
            17-MT.ELEMENT_MESSAGE,
            18-MT.ELEMENT_RESULT,
            19-MT.MENU_LVL,
            20-MT.SEQUENCE                
            */

            MenuTestScriptTbl.setModel(new DefaultTableModel(null, new String[]{"ID","User Code", "Menu Code", "Child Menu Code", "Page Module", "Page Field", "Element ID", "Element XPath","Element Type", "Element Action", "Menu Level", "Sequence"}));
            ResultSet rs = cs.executeQuery();

            while(rs.next()){
                Id = NumberToTextConverter.toText(rs.getInt(1));
                UserCode = rs.getNString(2);
                MenuCode = rs.getNString(3);
                ChildMenuCode = rs.getNString(4);
                PageModule = rs.getNString(5);
                PageField = rs.getNString(6);
                ElementId = rs.getNString(7);
                ElementXpath = rs.getNString(8);
                ElementType = rs.getNString(12);
                ElementAction = rs.getNString(13);
                MenuLvl = NumberToTextConverter.toText(rs.getInt(20));
                Sequence = NumberToTextConverter.toText(rs.getInt(21));
                String[] arrList = {Id, UserCode, MenuCode, ChildMenuCode, PageModule, PageField, ElementId, ElementXpath, ElementType, ElementAction, MenuLvl, Sequence};

                DefaultTableModel tblModel = (DefaultTableModel)MenuTestScriptTbl.getModel();
                tblModel.addRow(arrList);

            }
            cs.close();
            conn.close();            

        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Populate Child Menu Table failed " + 
                               "\n" + errMessage, "Create New Child Menu - Maintenance", 0);                
        }
        
    }
    
    private void defaultsettings(){
        ProjCodeTxt.setEnabled(false);
        ProjDescTxt.setEnabled(false);
        UserCodeCmb.setEnabled(true);
        ParentMenuCodeTxt.setEnabled(true);
        ChildMenuCodeTxt.setEnabled(true);
        ModuleTxt.setEnabled(true);
        FieldTxt.setEnabled(true);
        ElemIdTxt.setEnabled(true);
        ElemXpathTxt.setEnabled(true);
        ElemTypeCmb.setEnabled(true);
        ElemActionCmb.setEnabled(true);
        MenuLvlTxt.setEnabled(true);
        SequenceTxt.setEnabled(true);
        
        //ParentMenuCodeTxt.setText("");
        ChildMenuCodeTxt.setText("");
        ModuleTxt.setText("");
        FieldTxt.setText("");
        ElemIdTxt.setText("null");
        ElemXpathTxt.setText("null");
        MenuLvlTxt.setText("");
        SequenceTxt.setText("");
        
        BackBtn.setEnabled(true);
        SaveBtn.setEnabled(true);
        CancelBtn.setEnabled(true);
        
    }
    
    private boolean validateMenuLvlSeq(String givenProjCode, String givenUserCode, String givenMenuCode, int givenLevel, int givenSeq){
        JFrame jFrame = new JFrame();
        boolean result = false;
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_MenuTestScript_GetMenuLvlSequence_ProjCodeUserCodeMenuCode(?,?,?)}");
            cs.setNString(1, givenProjCode);
            cs.setNString(2, givenUserCode);
            cs.setNString(3, givenMenuCode);
            
            ResultSet rs = cs.executeQuery();
            if(rs.next()){
                int resultLvl = rs.getInt(1);
                int resultSeq = rs.getInt(2);
                int parentflag = rs.getInt(3);
                int childflag = rs.getInt(4);
                int maxLvl = resultLvl + 2;
                int maxSeq = resultSeq + 2;
                
                if(parentflag == 1 && childflag == 0){
                    //Existing Parent Code add new Sub Menu Code
                    //DB Result Level - @lvl and Sequence - @seq
                    //Initial values Level - same as @lvl and Sequence - @seq + 1
                    if(resultLvl == givenLevel){
                        if(resultSeq < givenSeq && givenSeq < maxSeq){
                            result = true;
                        }
                        else{
                            JOptionPane.showMessageDialog(jFrame, "Invalid Sequence, it should be greater than one but not less than on the existing Sequence", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                    
                            result = false;
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(jFrame, "Invalid Menu Level, it should be same as on the existing Sequence", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                    
                    }
                    
                }
                else if(parentflag == 0 && childflag == 1){
                    //Existing Sub Menu Code add new Parent Code
                    //DB Result Level - @lvl and Sequence - @seq
                    //Initial values Level - @lvl + 1 and Sequence - @seq + 1
                    if(resultLvl < givenLevel && maxLvl > givenLevel){
                        if(resultSeq < givenSeq && maxSeq > givenSeq){
                            result = true;
                        }
                        else{
                            JOptionPane.showMessageDialog(jFrame, "Invalid Sequence, it should be greater than one but not less than on the existing Sequence", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                    
                            result = false;
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(jFrame, "Invalid Menu Level, it should be greater than one from the Parent Code", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                                                
                        result = false;
                    }

                }
                else if(parentflag == 0 && childflag == 0){
                    //New Record
                    //DB Result Level - 0 and Sequence - 0
                    //Initial values Level - 1 and Sequence - 1
                    if(resultLvl == 0 && givenLevel == 1){
                        if(resultSeq == 0 && givenSeq == 1){
                            result = true;
                        }
                        else{
                            JOptionPane.showMessageDialog(jFrame, "Invalid Sequence, New record should have a Menu Sequence value of 1", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                                                
                            result = false;
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(jFrame, "Invalid Menu Level, New record should have a Menu Level value of 1 ", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                    
                        result = false;
                    }
                }
                
                
                /*
                if(resultLvl == 0 && givenLevel == 1 && givenSeq == 1){
                    result = true;
                }
                else if(resultLvl == 0 && givenLevel == 1 && givenSeq > 1){
                    result = false;
                    JOptionPane.showMessageDialog(jFrame, "Invalid Sequence, it should be greater than one but not less than on the existing Sequence", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);                    
                }
                else if(resultLvl == givenLevel){
                    if(resultSeq < givenSeq && maxSeq > givenSeq){
                        result = true;
                    }
                    else{
                        result = false;
                        JOptionPane.showMessageDialog(jFrame, "Invalid Sequence, it should be greater than one but not less than on the existing Sequence", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    result = false;
                    JOptionPane.showMessageDialog(jFrame, "Invalid Menu Level, it should be equal on the selected Parent", "Create New Child Menu - Maintenance", JOptionPane.ERROR_MESSAGE);
                }
                */
            }
            return result;
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                 JOptionPane.showMessageDialog(jFrame,  "Validate Menu Level and Sequence failed " + 
                               "\n" + errMessage, "Create New Child Menu - Maintenance", 0);           
                 return false;
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JTextField ChildMenuCodeTxt;
    private javax.swing.JComboBox<String> ElemActionCmb;
    private javax.swing.JTextField ElemIdTxt;
    private javax.swing.JComboBox<String> ElemTypeCmb;
    private javax.swing.JTextField ElemXpathTxt;
    private javax.swing.JTextField FieldTxt;
    private javax.swing.JTextField MenuLvlTxt;
    private javax.swing.JTable MenuTestScriptTbl;
    private javax.swing.JTextField ModuleTxt;
    private javax.swing.JTextField ParentMenuCodeTxt;
    private javax.swing.JTextField ProjCodeTxt;
    private javax.swing.JTextField ProjDescTxt;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JTextField SequenceTxt;
    private javax.swing.JComboBox<String> UserCodeCmb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
