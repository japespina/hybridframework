/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ewb.qa.tdd.GUI;

import ewb.qa.tdd.ExcelObj;
import ewb.qa.tdd.SQLObj;
import ewb.qa.tdd.GUI.ExcelObject;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import java.awt.*;
import java.awt.event.*;
import org.apache.poi.ss.util.NumberToTextConverter;
import ewb.qa.tdd.GUI.MainGUI.*;
import java.io.FileInputStream;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author JPE61800
 * 
 * 
 */
public class MaintenanceGUI extends javax.swing.JFrame {

    public ewb.qa.tdd.SQLObj sqlObj;
    public ewb.qa.tdd.GUI.ExcelObject xlObj;
    /**
     * Creates new form MaintenanceGUI
     */
    public MaintenanceGUI() {
        initComponents();
        ProjCodeTxt.setText(MainGUI.getProjectCode());
        ProjDescTxt.setText(MainGUI.getProjectDesc());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MaintenanceTabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Mod_ModuleCodeTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Mod_ModuleNameTxt = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        Mod_ModuleTbl = new javax.swing.JTable();
        Mod_NewBtn = new javax.swing.JButton();
        Mod_ChangeBtn = new javax.swing.JButton();
        Mod_SaveBtn = new javax.swing.JButton();
        Mod_CancelBtn = new javax.swing.JButton();
        Mod_SearchBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        Mod_ProjNameLbl = new javax.swing.JLabel();
        Mod_IdTxt = new javax.swing.JTextField();
        Mod_ProjCodeTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        FMModuleCodeLst = new javax.swing.JList<>();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        FMFunctionCodeLst = new javax.swing.JList<>();
        jLabel28 = new javax.swing.JLabel();
        FMFieldIdTxt = new javax.swing.JTextField();
        FMFieldNameTxt = new javax.swing.JTextField();
        FMElementIdTxt = new javax.swing.JTextField();
        FMElementXpathTxt = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        FMElementTypeLst = new javax.swing.JList<>();
        jScrollPane16 = new javax.swing.JScrollPane();
        FMElementActionLst = new javax.swing.JList<>();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        FieldMappingTbl = new javax.swing.JTable();
        FMNewBtn = new javax.swing.JButton();
        FMChangeBtn = new javax.swing.JButton();
        FMSaveBtn = new javax.swing.JButton();
        FMCancelBtn = new javax.swing.JButton();
        FMConsolidateBtn = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        FMSubmoduleCodeLst = new javax.swing.JList<>();
        jLabel35 = new javax.swing.JLabel();
        FMFunctionNameLbl = new javax.swing.JLabel();
        FMModuleNameLbl = new javax.swing.JLabel();
        FMSubmoduleNameLbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        MenuIdLbl = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        MenuSearchBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        MenuTbl = new javax.swing.JTable();
        MenuCancelBtn = new javax.swing.JButton();
        MenuSaveBtn = new javax.swing.JButton();
        MenuChangeBtn = new javax.swing.JButton();
        MenuNewBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        MenuUserCodeLst = new javax.swing.JList<>();
        MenuUserNameLbl = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        MenuElementTypeLst = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        MenuElementActionLst = new javax.swing.JList<>();
        jLabel25 = new javax.swing.JLabel();
        MenuMainCodeTxt = new javax.swing.JTextField();
        MenuSubCodeTxt = new javax.swing.JTextField();
        MenuChildCodeTxt = new javax.swing.JTextField();
        MenuPageFieldTxt = new javax.swing.JTextField();
        MenuPageModuleTxt = new javax.swing.JTextField();
        MenuElementIdTxt = new javax.swing.JTextField();
        MenuElementXpathTxt = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Proj_NewBtn = new javax.swing.JButton();
        Proj_SaveBtn = new javax.swing.JButton();
        Proj_ProjectCodeTxt = new javax.swing.JTextField();
        Proj_ProjectNameTxt = new javax.swing.JTextField();
        Proj_SearchBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Proj_ProjectAppTbl = new javax.swing.JTable();
        Proj_CancelBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Proj_ProjectPlatformList = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        Proj_ProjectIDLbl = new javax.swing.JLabel();
        Proj_ChangeBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        UserIdLbl = new javax.swing.JLabel();
        UserCodeTxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        UserNameTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        UserTbl = new javax.swing.JTable();
        UserCancelBtn = new javax.swing.JButton();
        UserSaveBtn = new javax.swing.JButton();
        UserChangeBtn = new javax.swing.JButton();
        UserNewBtn = new javax.swing.JButton();
        UserSearchBtn = new javax.swing.JButton();
        UserLoginTxt = new javax.swing.JTextField();
        UserPasswordTxt = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        FieldLoginTxt = new javax.swing.JTextField();
        FieldPasswordTxt = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        UserTypeCmb = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PFuncCodeTxt = new javax.swing.JTextField();
        PFuncNameTxt = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        PFuncTbl = new javax.swing.JTable();
        PFuncCancelBtn = new javax.swing.JButton();
        PFuncSaveBtn = new javax.swing.JButton();
        PFuncChangeBtn = new javax.swing.JButton();
        PFuncNewBtn = new javax.swing.JButton();
        PFIdLbl = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        PLPathTxt = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        PLEnvironmentLst = new javax.swing.JList<>();
        jScrollPane20 = new javax.swing.JScrollPane();
        PLBrowserLst = new javax.swing.JList<>();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane21 = new javax.swing.JScrollPane();
        ProjectLocationTbl = new javax.swing.JTable();
        jLabel39 = new javax.swing.JLabel();
        PLIdLbl = new javax.swing.JLabel();
        PLChangeBtn = new javax.swing.JButton();
        PLCancelBtn = new javax.swing.JButton();
        PLSaveBtn = new javax.swing.JButton();
        PLNewBtn = new javax.swing.JButton();
        PLSearchBtn = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        CatUserCodeTxt = new javax.swing.JTextField();
        CategoryIdTxt = new javax.swing.JTextField();
        CatGroupIdTxt = new javax.swing.JTextField();
        CatFieldIdTxt = new javax.swing.JTextField();
        CatElementIdTxt = new javax.swing.JTextField();
        CatElementXpathTxt = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        CatModuleTxt = new javax.swing.JTextField();
        jScrollPane25 = new javax.swing.JScrollPane();
        CatElementTypeLst = new javax.swing.JList<>();
        jScrollPane26 = new javax.swing.JScrollPane();
        CatElementActionLst = new javax.swing.JList<>();
        jScrollPane27 = new javax.swing.JScrollPane();
        CategoryMenuTbl = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        CatCancelBtn = new javax.swing.JButton();
        CatChangeBtn = new javax.swing.JButton();
        CatSaveBtn = new javax.swing.JButton();
        CatNewBtn = new javax.swing.JButton();
        CatUploadBtn = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jScrollPane28 = new javax.swing.JScrollPane();
        GrpElementTypeLst = new javax.swing.JList<>();
        jScrollPane29 = new javax.swing.JScrollPane();
        GrpElementActionLst = new javax.swing.JList<>();
        jScrollPane30 = new javax.swing.JScrollPane();
        GroupMenuTbl = new javax.swing.JTable();
        GrpChangeBtn = new javax.swing.JButton();
        GrpCancelBtn = new javax.swing.JButton();
        GrpSaveBtn = new javax.swing.JButton();
        GrpNewBtn = new javax.swing.JButton();
        GrpUploadBtn = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        ProdUserCodeTxt = new javax.swing.JTextField();
        ProdCategoryTxt = new javax.swing.JTextField();
        ProdSubMenuTxt = new javax.swing.JTextField();
        ProdChildMenuTxt = new javax.swing.JTextField();
        ProdModuleTxt = new javax.swing.JTextField();
        ProdFieldTxt = new javax.swing.JTextField();
        ProdElementId = new javax.swing.JTextField();
        ProdElementXpathTxt = new javax.swing.JTextField();
        jScrollPane22 = new javax.swing.JScrollPane();
        ProdElementTypeLst = new javax.swing.JList<>();
        jScrollPane23 = new javax.swing.JScrollPane();
        ProdElementActionLst = new javax.swing.JList<>();
        jScrollPane24 = new javax.swing.JScrollPane();
        ProductMenuTbl = new javax.swing.JTable();
        ProdCancelBtn = new javax.swing.JButton();
        ProdSaveBtn = new javax.swing.JButton();
        ProdChangeBtn = new javax.swing.JButton();
        ProdNewBtn = new javax.swing.JButton();
        ProdUploadBtn = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        TestCaseIdTxt = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        TestCaseDescTxt = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        DeclaredTestCaseTbl = new javax.swing.JTable();
        tcCancelBtn = new javax.swing.JButton();
        tcChangeBtn = new javax.swing.JButton();
        tcSaveBtn = new javax.swing.JButton();
        tcNewBtn = new javax.swing.JButton();
        tcRecordIdTxt = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        StatusCodeCmb = new javax.swing.JComboBox<>();
        StatusDescTxt = new javax.swing.JTextField();
        BackBtn = new javax.swing.JButton();
        ProjCodeTxt = new javax.swing.JTextField();
        ProjDescTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TDD Maintenance");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        MaintenanceTabs.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        MaintenanceTabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaintenanceTabsMouseClicked(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel7.setText("ID :");

        jLabel8.setText("Module Code :");

        jLabel9.setText("Module Name :");

        Mod_ModuleTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        Mod_ModuleTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Module Code", "Module Name", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Mod_ModuleTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Mod_ModuleTblMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(Mod_ModuleTbl);

        Mod_NewBtn.setText("New");

        Mod_ChangeBtn.setText("Change");
        Mod_ChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mod_ChangeBtnActionPerformed(evt);
            }
        });

        Mod_SaveBtn.setText("Save");
        Mod_SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mod_SaveBtnActionPerformed(evt);
            }
        });

        Mod_CancelBtn.setText("Cancel");
        Mod_CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mod_CancelBtnActionPerformed(evt);
            }
        });

        Mod_SearchBtn.setText("Search");
        Mod_SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mod_SearchBtnActionPerformed(evt);
            }
        });

        jLabel13.setText("Project Code :");

        Mod_ProjNameLbl.setText("*");

        Mod_ProjCodeTxt.setText("jTextField2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                        .addGap(249, 249, 249))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Mod_ModuleNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Mod_ModuleCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Mod_SearchBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Mod_ProjCodeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(Mod_IdTxt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Mod_ProjNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Mod_NewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mod_ChangeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mod_SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mod_CancelBtn)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mod_IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Mod_ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Mod_ProjNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Mod_ModuleCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mod_SearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mod_ModuleNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Mod_CancelBtn)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Mod_NewBtn)
                        .addComponent(Mod_ChangeBtn)
                        .addComponent(Mod_SaveBtn)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Modules", jPanel1);

        FMModuleCodeLst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                FMModuleCodeLstValueChanged(evt);
            }
        });
        jScrollPane12.setViewportView(FMModuleCodeLst);

        jLabel26.setText("Module :");

        FMFunctionCodeLst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                FMFunctionCodeLstValueChanged(evt);
            }
        });
        jScrollPane13.setViewportView(FMFunctionCodeLst);

        jLabel28.setText("Function : ");

        jLabel29.setText("Field ID :");

        jLabel30.setText("Field Name :");

        jLabel31.setText("Element ID :");

        jLabel32.setText("Element Xpath :");

        FMElementTypeLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "BLANK", "NewTab", "Dropdown Box", "Input Box", "Button", "Text Message", "NewTab" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane15.setViewportView(FMElementTypeLst);

        FMElementActionLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "BLANK", "SwitchTo", "Select", "SendKeys", "Click", "GetText", "SwitchTo", "Close" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane16.setViewportView(FMElementActionLst);

        jLabel33.setText("Element Type :");

        jLabel34.setText("Element Action :");

        FieldMappingTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        FieldMappingTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Function Code", "Module", "Sub Module", "Field ID", "Field Name", "Element ID", "Element XPath", "Element Type", "Element Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FieldMappingTbl.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        FieldMappingTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FieldMappingTblMousePressed(evt);
            }
        });
        jScrollPane17.setViewportView(FieldMappingTbl);
        if (FieldMappingTbl.getColumnModel().getColumnCount() > 0) {
            FieldMappingTbl.getColumnModel().getColumn(0).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(1).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(2).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(3).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(4).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(5).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(6).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(7).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(8).setResizable(false);
            FieldMappingTbl.getColumnModel().getColumn(9).setResizable(false);
        }

        FMNewBtn.setText("New");
        FMNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMNewBtnActionPerformed(evt);
            }
        });

        FMChangeBtn.setText("Change");
        FMChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMChangeBtnActionPerformed(evt);
            }
        });

        FMSaveBtn.setText("Save");
        FMSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMSaveBtnActionPerformed(evt);
            }
        });

        FMCancelBtn.setText("Cancel");
        FMCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMCancelBtnActionPerformed(evt);
            }
        });

        FMConsolidateBtn.setText("Consolidate");
        FMConsolidateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMConsolidateBtnActionPerformed(evt);
            }
        });

        FMSubmoduleCodeLst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                FMSubmoduleCodeLstValueChanged(evt);
            }
        });
        jScrollPane18.setViewportView(FMSubmoduleCodeLst);

        jLabel35.setText("Sub Module :");

        FMFunctionNameLbl.setText("*");

        FMModuleNameLbl.setText("*");

        FMSubmoduleNameLbl.setText("*");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(FMModuleNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                .addGap(627, 627, 627))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(FMSubmoduleNameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(FMConsolidateBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FMNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FMChangeBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FMSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FMCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(4, 4, 4)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(FMFunctionNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(FMFieldNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FMElementXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FMFieldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FMElementIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(202, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(FMModuleNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(FMFunctionNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FMSubmoduleNameLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FMFieldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(FMFieldNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FMElementIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FMElementXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FMCancelBtn)
                    .addComponent(FMSaveBtn)
                    .addComponent(FMChangeBtn)
                    .addComponent(FMNewBtn)
                    .addComponent(FMConsolidateBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Field Mapping", jPanel2);

        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jLabel10.setText("ID :");

        MenuIdLbl.setText("*");

        jLabel11.setText("Main Code :");

        jLabel12.setText("Sub Code :");

        MenuSearchBtn.setText("Search");
        MenuSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSearchBtnActionPerformed(evt);
            }
        });

        MenuTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        MenuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "User Code", "Main Code", "Sub Code", "Child Code", "Page Module", "Page Field", "Element ID", "Element Xpath", "Element Type", "Element Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MenuTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuTblMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(MenuTbl);
        if (MenuTbl.getColumnModel().getColumnCount() > 0) {
            MenuTbl.getColumnModel().getColumn(0).setResizable(false);
            MenuTbl.getColumnModel().getColumn(1).setResizable(false);
            MenuTbl.getColumnModel().getColumn(2).setResizable(false);
            MenuTbl.getColumnModel().getColumn(3).setResizable(false);
            MenuTbl.getColumnModel().getColumn(4).setResizable(false);
            MenuTbl.getColumnModel().getColumn(5).setResizable(false);
            MenuTbl.getColumnModel().getColumn(6).setResizable(false);
            MenuTbl.getColumnModel().getColumn(7).setResizable(false);
            MenuTbl.getColumnModel().getColumn(8).setResizable(false);
            MenuTbl.getColumnModel().getColumn(9).setResizable(false);
            MenuTbl.getColumnModel().getColumn(10).setResizable(false);
        }

        MenuCancelBtn.setText("Cancel");
        MenuCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCancelBtnActionPerformed(evt);
            }
        });

        MenuSaveBtn.setText("Save");
        MenuSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSaveBtnActionPerformed(evt);
            }
        });

        MenuChangeBtn.setText("Change");
        MenuChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuChangeBtnActionPerformed(evt);
            }
        });

        MenuNewBtn.setText("New");

        jLabel14.setText("User Code :");

        MenuUserCodeLst.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MenuUserCodeLst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                MenuUserCodeLstValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(MenuUserCodeLst);

        MenuUserNameLbl.setText("*");

        jLabel19.setText("Child Code :");

        jLabel20.setText("Page Field :");

        jLabel21.setText("Page Module :");

        jLabel22.setText("Element ID :");

        jLabel23.setText("Element Xpath :");

        jLabel24.setText("Element Type :");

        MenuElementTypeLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "BLANK", "NewTab", "Dropdown Box", "Input Box", "Button", "Radio", "Text Message", "NewTab" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane10.setViewportView(MenuElementTypeLst);

        MenuElementActionLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "BLANK", "SwitchTo", "Select", "SendKeys", "Click", "GetText", "SwitchTo", "Close" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane11.setViewportView(MenuElementActionLst);

        jLabel25.setText("Element Action :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(MenuSubCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MenuMainCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 399, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MenuElementIdTxt)
                                    .addComponent(MenuElementXpathTxt)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(MenuNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MenuChangeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MenuSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MenuCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MenuIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(MenuUserNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(MenuSearchBtn))))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MenuChildCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MenuPageFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MenuPageModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MenuIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MenuUserNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MenuSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MenuMainCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(MenuElementIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(MenuSubCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(MenuElementXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19)
                                .addComponent(MenuChildCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel24))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(MenuPageModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(MenuPageFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MenuCancelBtn)
                    .addComponent(MenuSaveBtn)
                    .addComponent(MenuChangeBtn)
                    .addComponent(MenuNewBtn))
                .addGap(189, 189, 189))
        );

        MaintenanceTabs.addTab("Menu", jPanel3);

        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        jLabel3.setText("Project Code :");

        jLabel4.setText("Project Name :");

        jLabel5.setText("Platform :");

        Proj_NewBtn.setText("New");
        Proj_NewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proj_NewBtnActionPerformed(evt);
            }
        });

        Proj_SaveBtn.setText("Save");
        Proj_SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proj_SaveBtnActionPerformed(evt);
            }
        });

        Proj_SearchBtn.setText("Search");
        Proj_SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proj_SearchBtnActionPerformed(evt);
            }
        });

        Proj_ProjectAppTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        Proj_ProjectAppTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project ID", "Project Code", "Project Name", "Project Platform"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Proj_ProjectAppTbl.getTableHeader().setReorderingAllowed(false);
        Proj_ProjectAppTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Proj_ProjectAppTblMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Proj_ProjectAppTblMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(Proj_ProjectAppTbl);

        Proj_CancelBtn.setText("Cancel");
        Proj_CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proj_CancelBtnActionPerformed(evt);
            }
        });

        Proj_ProjectPlatformList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "NONE", "Web Browser", "Mobile", "API", "Windows App" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Proj_ProjectPlatformList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(Proj_ProjectPlatformList);

        jLabel6.setText("ID :");

        Proj_ProjectIDLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Proj_ProjectIDLbl.setText("*");

        Proj_ChangeBtn.setText("Change");
        Proj_ChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proj_ChangeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Proj_ProjectNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Proj_ProjectIDLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(Proj_ProjectCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Proj_SearchBtn))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(Proj_NewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Proj_ChangeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Proj_SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Proj_CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(590, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Proj_ProjectIDLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Proj_ProjectCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Proj_SearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Proj_ProjectNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Proj_NewBtn)
                    .addComponent(Proj_CancelBtn)
                    .addComponent(Proj_SaveBtn)
                    .addComponent(Proj_ChangeBtn))
                .addContainerGap(318, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Project Apps", jPanel4);

        jLabel2.setText("User ID :");

        UserIdLbl.setText("*");

        jLabel15.setText("User Code :");

        jLabel16.setText("User Name :");

        jLabel17.setText("User Type :");

        UserTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        UserTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Project Code", "User Code", "User Name", "User Type", "Field Login", "Login", "Field Password", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserTblMousePressed(evt);
            }
        });
        jScrollPane8.setViewportView(UserTbl);
        if (UserTbl.getColumnModel().getColumnCount() > 0) {
            UserTbl.getColumnModel().getColumn(0).setResizable(false);
            UserTbl.getColumnModel().getColumn(1).setResizable(false);
            UserTbl.getColumnModel().getColumn(2).setResizable(false);
            UserTbl.getColumnModel().getColumn(3).setResizable(false);
            UserTbl.getColumnModel().getColumn(4).setResizable(false);
            UserTbl.getColumnModel().getColumn(5).setResizable(false);
            UserTbl.getColumnModel().getColumn(6).setResizable(false);
            UserTbl.getColumnModel().getColumn(7).setResizable(false);
            UserTbl.getColumnModel().getColumn(8).setResizable(false);
        }

        UserCancelBtn.setText("Cancel");
        UserCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserCancelBtnActionPerformed(evt);
            }
        });

        UserSaveBtn.setText("Save");
        UserSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserSaveBtnActionPerformed(evt);
            }
        });

        UserChangeBtn.setText("Change");
        UserChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserChangeBtnActionPerformed(evt);
            }
        });

        UserNewBtn.setText("New");
        UserNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNewBtnActionPerformed(evt);
            }
        });

        UserSearchBtn.setText("Search");
        UserSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserSearchBtnActionPerformed(evt);
            }
        });

        jLabel41.setText("Login :");

        jLabel42.setText("Password :");

        jLabel43.setText("Field Login :");

        jLabel44.setText("Field Password :");

        UserTypeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MAKER", "AUTHORISER" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                        .addGap(833, 833, 833))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(UserNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(UserChangeBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(UserSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(UserCancelBtn))
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(UserTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(UserPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(UserIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(UserCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(UserLoginTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(UserSearchBtn))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FieldLoginTxt))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FieldPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(UserSearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel41)
                    .addComponent(UserLoginTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(FieldLoginTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(UserTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel42)
                        .addComponent(UserPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FieldPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel44)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserCancelBtn)
                    .addComponent(UserSaveBtn)
                    .addComponent(UserChangeBtn)
                    .addComponent(UserNewBtn))
                .addGap(167, 167, 167))
        );

        MaintenanceTabs.addTab("User", jPanel5);

        jLabel1.setText("Function Code :");

        jLabel27.setText("Function Name :");

        PFuncTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        PFuncTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "FUNCTION CODE", "FUNCTION NAME"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PFuncTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PFuncTblMousePressed(evt);
            }
        });
        jScrollPane14.setViewportView(PFuncTbl);
        if (PFuncTbl.getColumnModel().getColumnCount() > 0) {
            PFuncTbl.getColumnModel().getColumn(0).setResizable(false);
            PFuncTbl.getColumnModel().getColumn(1).setResizable(false);
            PFuncTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        PFuncCancelBtn.setText("Cancel");
        PFuncCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFuncCancelBtnActionPerformed(evt);
            }
        });

        PFuncSaveBtn.setText("Save");
        PFuncSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFuncSaveBtnActionPerformed(evt);
            }
        });

        PFuncChangeBtn.setText("Change");
        PFuncChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFuncChangeBtnActionPerformed(evt);
            }
        });

        PFuncNewBtn.setText("New");
        PFuncNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFuncNewBtnActionPerformed(evt);
            }
        });

        PFIdLbl.setText("*");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(PFuncCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PFIdLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(PFuncNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(PFuncNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PFuncChangeBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PFuncSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PFuncCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(475, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PFuncCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PFIdLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PFuncNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PFuncCancelBtn)
                    .addComponent(PFuncSaveBtn)
                    .addComponent(PFuncChangeBtn)
                    .addComponent(PFuncNewBtn))
                .addContainerGap(547, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Function", jPanel6);

        jLabel36.setText("Url / Path :");

        jLabel37.setText("Environment :");

        PLEnvironmentLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Development", "SIT", "UAT" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane19.setViewportView(PLEnvironmentLst);

        PLBrowserLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Internet Explorer", "Google Chrome", "Mozilla Firefox" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane20.setViewportView(PLBrowserLst);

        jLabel38.setText("Browser :");

        ProjectLocationTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        ProjectLocationTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Environment", "Path", "Browser"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane21.setViewportView(ProjectLocationTbl);
        if (ProjectLocationTbl.getColumnModel().getColumnCount() > 0) {
            ProjectLocationTbl.getColumnModel().getColumn(0).setResizable(false);
            ProjectLocationTbl.getColumnModel().getColumn(1).setResizable(false);
            ProjectLocationTbl.getColumnModel().getColumn(2).setResizable(false);
            ProjectLocationTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel39.setText("ID :");

        PLIdLbl.setText("*");

        PLChangeBtn.setText("Change");
        PLChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PLChangeBtnActionPerformed(evt);
            }
        });

        PLCancelBtn.setText("Cancel");
        PLCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PLCancelBtnActionPerformed(evt);
            }
        });

        PLSaveBtn.setText("Save");
        PLSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PLSaveBtnActionPerformed(evt);
            }
        });

        PLNewBtn.setText("New");
        PLNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PLNewBtnActionPerformed(evt);
            }
        });

        PLSearchBtn.setText("Search");
        PLSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PLSearchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PLSearchBtn)
                                .addGap(770, 770, 770))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(PLIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(PLNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PLChangeBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PLSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PLCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane21, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PLPathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(400, 400, 400))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PLIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PLSearchBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PLPathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PLChangeBtn)
                    .addComponent(PLCancelBtn)
                    .addComponent(PLSaveBtn)
                    .addComponent(PLNewBtn))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Project Location", jPanel7);

        jLabel54.setText("User Code :");

        jLabel55.setText("Category :");

        jLabel56.setText("Group ID :");

        jLabel57.setText("Field ID :");

        jLabel58.setText("Element ID :");

        jLabel59.setText("Element Xpath :");

        jLabel60.setText("Element Type :");

        jLabel61.setText("Element Action :");

        CatUserCodeTxt.setText("CatUserCodeTxt");

        CategoryIdTxt.setText("CategoryIdTxt");

        CatGroupIdTxt.setText("CatGroupIdTxt");

        CatFieldIdTxt.setText("CatFieldIdTxt");

        CatElementIdTxt.setText("CatElementIdTxt");

        CatElementXpathTxt.setText("CatElementXpathTxt");

        jLabel62.setText("Module :");

        CatModuleTxt.setText("CatModuleTxt");
        CatModuleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatModuleTxtActionPerformed(evt);
            }
        });

        CatElementTypeLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane25.setViewportView(CatElementTypeLst);

        CatElementActionLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane26.setViewportView(CatElementActionLst);

        CategoryMenuTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        CategoryMenuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane27.setViewportView(CategoryMenuTbl);

        jButton6.setText("Change");

        CatCancelBtn.setText("Cancel");

        CatChangeBtn.setText("Change");

        CatSaveBtn.setText("Save");

        CatNewBtn.setText("New");

        CatUploadBtn.setText("Upload");
        CatUploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatUploadBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane27)
                        .addContainerGap())
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel59, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(jLabel58, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CatElementIdTxt)
                                    .addComponent(CatElementXpathTxt)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CatModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CatUserCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CategoryIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CatFieldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CatGroupIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(210, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(CatUploadBtn)
                        .addContainerGap(956, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addGap(234, 234, 234))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(CatNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CatChangeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CatSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CatCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CatUserCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel55)
                            .addComponent(CategoryIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56)
                            .addComponent(CatGroupIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel54))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel57)
                            .addComponent(CatFieldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel62)
                            .addComponent(CatModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel58)
                            .addComponent(CatElementIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel60)))
                    .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel59)
                        .addComponent(CatElementXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel61))
                    .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CatCancelBtn)
                    .addComponent(CatChangeBtn)
                    .addComponent(CatNewBtn)
                    .addComponent(CatSaveBtn)
                    .addComponent(CatUploadBtn))
                .addGap(291, 291, 291)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Category Menu", jPanel9);

        jLabel63.setText("User Code :");

        jLabel64.setText("Group ID :");

        jLabel65.setText("Group Menu Code :");

        jLabel66.setText("Module :");

        jLabel67.setText("Field ID :");

        jLabel68.setText("Element ID :");

        jLabel69.setText("Element Xpath :");

        jLabel70.setText("Element Type :");

        jLabel71.setText("Element Action :");

        jTextField1.setText("GrpUserCodeTxt");

        jTextField3.setText("GrpGroupIdTxt");

        jTextField4.setText("GrpMenuCodeTxt");

        jTextField5.setText("GrpModuleTxt");

        jTextField6.setText("GrpFieldIdTxt");

        jTextField7.setText("GrpElementIdTxt");

        jTextField8.setText("GrpElementXpathTxt");

        GrpElementTypeLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane28.setViewportView(GrpElementTypeLst);

        GrpElementActionLst.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane29.setViewportView(GrpElementActionLst);

        GroupMenuTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        GroupMenuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane30.setViewportView(GroupMenuTbl);

        GrpChangeBtn.setText("Change");

        GrpCancelBtn.setText("Cancel");

        GrpSaveBtn.setText("Save");

        GrpNewBtn.setText("New");

        GrpUploadBtn.setText("Upload");
        GrpUploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrpUploadBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane30)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(jTextField5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField6))))
                            .addComponent(jTextField7)
                            .addComponent(jTextField8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 297, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(GrpUploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GrpNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GrpChangeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GrpSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GrpCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel68)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel70))
                    .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel69)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel71)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane30, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GrpCancelBtn)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GrpChangeBtn)
                        .addComponent(GrpSaveBtn)
                        .addComponent(GrpNewBtn)
                        .addComponent(GrpUploadBtn)))
                .addGap(54, 54, 54))
        );

        MaintenanceTabs.addTab("Group Menu", jPanel10);

        jLabel40.setText("User Code :");

        jLabel45.setText("Category :");

        jLabel46.setText("Sub Menu :");

        jLabel47.setText("Child Menu :");

        jLabel48.setText("Module :");

        jLabel49.setText("Field ID :");

        jLabel50.setText("Element ID :");

        jLabel51.setText("Element Xpath :");

        jLabel52.setText("Element Type :");

        jLabel53.setText("Element Action :");

        jScrollPane22.setViewportView(ProdElementTypeLst);

        jScrollPane23.setViewportView(ProdElementActionLst);

        ProductMenuTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        ProductMenuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane24.setViewportView(ProductMenuTbl);

        ProdCancelBtn.setText("Cancel");

        ProdSaveBtn.setText("Save");

        ProdChangeBtn.setText("Change");

        ProdNewBtn.setText("New");

        ProdUploadBtn.setText("Upload");
        ProdUploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdUploadBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane24)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ProdElementXpathTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addComponent(ProdElementId, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ProdUserCodeTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(ProdModuleTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ProdCategoryTxt, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ProdFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ProdSubMenuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(16, 16, 16)
                                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane23)
                                            .addComponent(ProdChildMenuTxt)
                                            .addComponent(jScrollPane22))))))
                        .addGap(0, 243, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(ProdUploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ProdNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProdChangeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProdSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProdCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(ProdUserCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(ProdCategoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProdSubMenuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47)
                    .addComponent(ProdChildMenuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(ProdModuleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49)
                    .addComponent(ProdFieldTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel50)
                        .addComponent(ProdElementId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel52))
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel51)
                        .addComponent(ProdElementXpathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel53))
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane24, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProdCancelBtn)
                    .addComponent(ProdChangeBtn)
                    .addComponent(ProdSaveBtn)
                    .addComponent(ProdNewBtn)
                    .addComponent(ProdUploadBtn))
                .addContainerGap())
        );

        MaintenanceTabs.addTab("Product Menu", jPanel8);

        jLabel72.setText("Test Case ID :");

        TestCaseIdTxt.setText("jTextField2");

        jLabel73.setText("Test Case Description :");

        TestCaseDescTxt.setText("jTextField9");
        TestCaseDescTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestCaseDescTxtActionPerformed(evt);
            }
        });

        DeclaredTestCaseTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        DeclaredTestCaseTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DeclaredTestCaseTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DeclaredTestCaseTblMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(DeclaredTestCaseTbl);

        tcCancelBtn.setText("Cancel");
        tcCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcCancelBtnActionPerformed(evt);
            }
        });

        tcChangeBtn.setText("Change");
        tcChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcChangeBtnActionPerformed(evt);
            }
        });

        tcSaveBtn.setText("Save");
        tcSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcSaveBtnActionPerformed(evt);
            }
        });

        tcNewBtn.setText("New");
        tcNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcNewBtnActionPerformed(evt);
            }
        });

        tcRecordIdTxt.setText("jTextField2");

        jLabel74.setText("Status :");

        StatusCodeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "I" }));
        StatusCodeCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusCodeCmbActionPerformed(evt);
            }
        });

        StatusDescTxt.setText("jTextField2");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TestCaseIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TestCaseDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StatusCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StatusDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(tcRecordIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tcNewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tcChangeBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tcSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tcCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(TestCaseIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73)
                    .addComponent(TestCaseDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tcRecordIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel74)
                    .addComponent(StatusCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatusDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tcCancelBtn)
                    .addComponent(tcChangeBtn)
                    .addComponent(tcSaveBtn)
                    .addComponent(tcNewBtn))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        MaintenanceTabs.addTab("Test Cases", jPanel11);

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        ProjCodeTxt.setText("jTextField2");

        ProjDescTxt.setText("jTextField9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MaintenanceTabs)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BackBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MaintenanceTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        this.setVisible(false);
        MainGUI mainform = new MainGUI();
        mainform.setVisible(true);
        
    }//GEN-LAST:event_BackBtnActionPerformed

    private void Proj_NewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proj_NewBtnActionPerformed
        this.Proj_ProjectCodeTxt.setEnabled(true);
        this.Proj_ProjectNameTxt.setEnabled(true);
        this.Proj_ProjectPlatformList.setEnabled(true);
        
        Proj_NewBtn.setEnabled(false);
        Proj_ChangeBtn.setEnabled(false);
        Proj_SaveBtn.setEnabled(true);
        Proj_CancelBtn.setEnabled(true);
        //this.Proj_ProjectAppTbl.setEnabled(true);
    }//GEN-LAST:event_Proj_NewBtnActionPerformed

    private void Proj_SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proj_SaveBtnActionPerformed
        int execFlag = 0;
        JFrame jFrame = new JFrame();
        
        String projcode = this.Proj_ProjectCodeTxt.getText();
        String projname = this.Proj_ProjectNameTxt.getText();
        //String projplatform = this.Proj_ProjectPlatformList.setSelectedValue(ABORT, rootPaneCheckingEnabled);
        String projplatform = this.Proj_ProjectPlatformList.getSelectedValue();
        
        ewb.qa.tdd.SQLObj sqlObj = new ewb.qa.tdd.SQLObj();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_ProjectApp_ByProj_Code(?)}");
            
            cStmt.setString(1, projcode);
            
            ResultSet rs = cStmt.executeQuery();
            if(rs.next() == true){
                //rs.close();
                
                int projid = rs.getInt("ID");
                
                cStmt = conn.prepareCall("{call Update_ProjectApp (?,?,?,?)}");
                
                cStmt.setInt(1, projid);
                cStmt.setString(2, projcode);
                cStmt.setString(3, projname);
                cStmt.setString(4, projplatform);
                execFlag = cStmt.executeUpdate();
                
            }
            else{
                cStmt = conn.prepareCall("{call Insert_ProjectApp(?,?,?)}");
                
                cStmt.setString(1, projcode);
                cStmt.setString(2, projname);
                cStmt.setString(3, projplatform);
                 execFlag = cStmt.executeUpdate();
            }
            
            
            if(execFlag < 0){
                        JOptionPane.showMessageDialog(jFrame, "Record has been successfully saved", "Maintenance", 0);
                        conn.commit();
                        cStmt.close();
                        conn.close();
             }

            
            Proj_ProjectAppTbl.setModel(new DefaultTableModel(null, new String[] {"Project ID","Project Code","Project Name","Project Platform"}));
            //Proj_ProjectAppTbl.repaint();
           
            loadProjectAppTbl_ProjectApp();
            
            Proj_NewBtn.setEnabled(true);
            Proj_ChangeBtn.setEnabled(false);
            Proj_SaveBtn.setEnabled(false);
            Proj_CancelBtn.setEnabled(false);
            
            Proj_ProjectIDLbl.setText("*");
            Proj_ProjectCodeTxt.setText("");
            Proj_ProjectNameTxt.setText("");
            Proj_ProjectPlatformList.setSelectedIndex(0);
            
            Proj_ProjectNameTxt.setEnabled(false);
            Proj_ProjectPlatformList.setEnabled(false);
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage);
                 
                 if(execFlag <= 0 ){
                        JOptionPane.showMessageDialog(jFrame,  "Saving Failed " + 
                                "\n" + errMessage, "Maintenance", 0);
                 }
        }
    }//GEN-LAST:event_Proj_SaveBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         MainGUI mainGui = new MainGUI();
         JFrame jFrame = new JFrame();
         try{
                String globalProjectCode = mainGui.getProjectCode();
                String globalProjectDesc = mainGui.getProjectDesc();
                
                   //JOptionPane.showMessageDialog(jFrame, "Project Code :" + globalProjectCode, "Maintenance", JOptionPane.INFORMATION_MESSAGE);
                   
                //MtProjCodeLbl.setText(globalProjectCode);
                //MtProjDescLbl.setText(globalProjectDesc);

                defaultdisabledobjects();
                
                //Module Maintenance
                loadModuleTbl_Module();

                
                //Project App - Maintenance
                loadProjectAppTbl_ProjectApp();
                //loadModule_ProjectList_Module();
                
                
                //User Maintenance
                //loadUser_ProjectLst_User();
                //loadUserTbl_User();
                
                /*
                //Menu Maintenance
                loadUserCodeLst_Menu();
                loadMenuTbl_Menu();
                */
                
                //Project Function
                loadProjFunctionTbl_ProjFunction();
                
                //Test Cases
                loadDeclaredTestCasesTbl(globalProjectCode);
               TestCasePanelDefaultSettings();
         }
         catch(Exception ex){
                 String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage);
                 
                 JOptionPane.showMessageDialog(jFrame,  "Saving Failed " + 
                                "\n" + errMessage, "Maintenance", 0);
                 
         }

    }//GEN-LAST:event_formWindowOpened

    private void Proj_SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proj_SearchBtnActionPerformed
        try{
            String projcodeSearch = "";
            projcodeSearch = Proj_ProjectCodeTxt.getText();
            if(projcodeSearch.equals("")){
               //JFrame frame = new JFrame("Maintenance");
               JOptionPane.showMessageDialog(this, "Project Code Inputbox is empty", "Maintenance", JOptionPane.ERROR_MESSAGE);
            }
            else{
               Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
               CallableStatement cStmt = conn.prepareCall("{call Search_ProjectApp_ByProj_Code(?)}");
               cStmt.setString(1, projcodeSearch);
               ResultSet rs = cStmt.executeQuery();
               
               if(rs.next() == true){
                        //Proj_ProjectCodeTxt.setText("");
                        Proj_ProjectNameTxt.setText("");
                        Proj_ProjectPlatformList.setSelectedIndex(0);
                        
                        int projid = 0;
                        String projcode = "";
                        String projname = "";
                        String projplatform = "";
                        
                        projid = rs.getInt("ID");
                        projcode = rs.getString("CODE");
                        projname = rs.getString("NAME");
                        projplatform = rs.getString("PLATFORM");
                        
                        Proj_ProjectIDLbl.setText(NumberToTextConverter.toText(projid));
                        Proj_ProjectNameTxt.setText(projname);
                        Proj_ProjectPlatformList.setSelectedValue(projplatform, true);
                        
                        /*
                        while(rs.next())
                        {
                                projid = rs.getInt("ID");
                                projcode = rs.getString("CODE");
                                projname = rs.getString("NAME");
                                projplatform = rs.getString("PLATFORM");                
                        }  
                        */
                        
                        Proj_NewBtn.setEnabled(false);
                        Proj_ChangeBtn.setEnabled(true);
                        Proj_SaveBtn.setEnabled(false);
                        Proj_CancelBtn.setEnabled(false);
               }

               
            }
        }
        catch(Exception ex){
            System.out.println("Error Message: " + ex.getMessage() + "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + "\n" + "Stack Trace: " + ex.getStackTrace() + "\n" + "Cause: " + ex.getCause());
        }
            
    }//GEN-LAST:event_Proj_SearchBtnActionPerformed

    private void Proj_ChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proj_ChangeBtnActionPerformed
       
        Proj_ProjectCodeTxt.setEnabled(true);
        Proj_ProjectNameTxt.setEnabled(true);
        Proj_ProjectPlatformList.setEnabled(true);
        
        Proj_NewBtn.setEnabled(false);
        Proj_ChangeBtn.setEnabled(false);
        Proj_SaveBtn.setEnabled(true);
        Proj_CancelBtn.setEnabled(true);
    }//GEN-LAST:event_Proj_ChangeBtnActionPerformed

    private void Proj_CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proj_CancelBtnActionPerformed
                
        Proj_NewBtn.setEnabled(true);
        Proj_ChangeBtn.setEnabled(false);
        Proj_SaveBtn.setEnabled(false);
        Proj_CancelBtn.setEnabled(false);
        
        Proj_ProjectIDLbl.setText("*");
        Proj_ProjectCodeTxt.setText("");
        Proj_ProjectNameTxt.setText("");
        
        Proj_ProjectCodeTxt.setEnabled(false);
        Proj_ProjectNameTxt.setEnabled(false);
        Proj_ProjectPlatformList.setEnabled(false);
        
    }//GEN-LAST:event_Proj_CancelBtnActionPerformed

    private void MenuCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCancelBtnActionPerformed
            String defaultValue = "";
            MenuMainCodeTxt.setText(defaultValue);
            MenuSubCodeTxt.setText(defaultValue);
            MenuPageModuleTxt.setText(defaultValue);
            MenuPageFieldTxt.setText(defaultValue);
            MenuElementIdTxt.setText(defaultValue);
            MenuElementXpathTxt.setText(defaultValue);
            MenuElementTypeLst.setSelectedIndex(0);
            MenuElementActionLst.setSelectedIndex(0);
        
            MenuSubCodeTxt.setEnabled(false);
            MenuPageModuleTxt.setEnabled(false);
            MenuPageFieldTxt.setEnabled(false);
            MenuElementIdTxt.setEnabled(false);
            MenuElementXpathTxt.setEnabled(false);
            MenuElementTypeLst.setEnabled(false);
            MenuElementActionLst.setEnabled(false);

            MenuNewBtn.setEnabled(true);
            MenuChangeBtn.setEnabled(false);
            MenuSaveBtn.setEnabled(false);
            MenuCancelBtn.setEnabled(false);
    }//GEN-LAST:event_MenuCancelBtnActionPerformed

    private void Proj_ProjectAppTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Proj_ProjectAppTblMouseClicked
        
    }//GEN-LAST:event_Proj_ProjectAppTblMouseClicked

    private void Proj_ProjectAppTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Proj_ProjectAppTblMousePressed
        if(evt.getClickCount() == 2){
                //JOptionPane.showMessageDialog(rootPane,"Double click has been done in Click Mouse Event"+getClass().getName());
                TableModel model = Proj_ProjectAppTbl.getModel();
                int index = Proj_ProjectAppTbl.getSelectedRow();
                
                String projid = model.getValueAt(index, 0).toString();
                String projcode = model.getValueAt(index, 1).toString();
                String projname = model.getValueAt(index, 2).toString();
                String projplatform = model.getValueAt(index, 3).toString();

                Proj_NewBtn.setEnabled(false);
                Proj_ChangeBtn.setEnabled(true);
                Proj_SaveBtn.setEnabled(false);
                Proj_CancelBtn.setEnabled(false);

                //Proj_ProjectIDLbl.setText("*");
                //Proj_ProjectCodeTxt.setText("");
                //Proj_ProjectNameTxt.setText("");

                Proj_ProjectCodeTxt.setEnabled(true);
                Proj_ProjectNameTxt.setEnabled(false);
                Proj_ProjectPlatformList.setEnabled(false);

                Proj_ProjectIDLbl.setText(projid);
                Proj_ProjectCodeTxt.setText(projcode);
                Proj_ProjectNameTxt.setText(projname);
                Proj_ProjectPlatformList.setSelectedValue(projplatform, true);
        }
    }//GEN-LAST:event_Proj_ProjectAppTblMousePressed

    private void Mod_SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mod_SearchBtnActionPerformed
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_ProjectModule_ByProjCodeModCode(?,?)}");
                
                //String projcode = Mod_ProjCodeLst.getSelectedValue();
                String projcode = Mod_ProjCodeTxt.getText();
                String modcode = Mod_ModuleCodeTxt.getText();
                
                cStmt.setString(1, projcode);
                cStmt.setString(2, modcode);
                
                ResultSet rs = cStmt.executeQuery();
                
                if(rs.next() == true){
                        String modid = NumberToTextConverter.toText(rs.getInt("ID"));
                        String modname = rs.getNString("MNAME");
                        
                        //Mod_ModuleIDLbl.setText(modid);
                        Mod_ModuleCodeTxt.setText(modid);
                        Mod_ModuleNameTxt.setText(modname);
                        
                        //Mod_ProjCodeLst.setEnabled(true);
                        //Mod_ModuleCodeTxt.setEnabled(true);
                        //Mod_ModuleNameTxt.setEnabled(false);

                        Mod_NewBtn.setEnabled(false);
                        Mod_ChangeBtn.setEnabled(true);
                        Mod_SaveBtn.setEnabled(false);
                        Mod_CancelBtn.setEnabled(false);
                }
                
                cStmt.close();
                conn.close();
    
        }
        catch(Exception ex){
                System.out.println("Error Message: " + ex.getMessage() + 
                        "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                        "\n" + "Stack Trace: " + ex.getStackTrace() + 
                        "\n" + "Cause: " + ex.getCause());
        }
        
    }//GEN-LAST:event_Mod_SearchBtnActionPerformed

    private void Mod_SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mod_SaveBtnActionPerformed
        int execFlag = 0;
        JFrame jFrame = new JFrame();
        
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_ProjectModule_ByProjCodeModCode (?,?)}");
                String strmodid = Mod_ModuleCodeTxt.getText();
                String projcode = Mod_ProjCodeTxt.getText();
                String modcode = Mod_ModuleCodeTxt.getText();
                String modname = Mod_ModuleNameTxt.getText();
                
                cStmt.setString(1, projcode);
                cStmt.setString(2, modcode);
                
                ResultSet rs = cStmt.executeQuery();
                if(rs.next() == true){
                        //Record does Exist in database - Update Mode
                        cStmt.close();
                        cStmt = conn.prepareCall("{call Update_ProjectModule (?,?,?,?)}");
                        
                        if(!strmodid.equals("*")){
                            int modid = Integer.parseInt(Mod_IdTxt.getText());
                            
                            cStmt.setInt(1, modid);
                            cStmt.setString(2, projcode);
                            cStmt.setString(3, modcode);
                            cStmt.setString(4, modname);
                            
                             execFlag = cStmt.executeUpdate();
                        }
                        
                }
                else {
                        //Record doesn't Exist in database - Insert Mode
                        cStmt = conn.prepareCall("{call Insert_ProjectModules (?,?,?)}");
                        
                        cStmt.setString(1, projcode);
                        cStmt.setString(2, modcode);
                        cStmt.setString(3, modname);
                        
                        execFlag = cStmt.executeUpdate();
                    
                }
                
                 if(execFlag < 0){
                        JOptionPane.showMessageDialog(jFrame, "Record has been successfully saved", "Maintenance", 0);
                        conn.commit();
                        cStmt.close();
                        conn.close();
                }
                
                loadModuleTbl_Module();
                
                Mod_ModuleCodeTxt.setText("*");
                Mod_ModuleCodeTxt.setText("");
                Mod_ModuleNameTxt.setText("");
                
                Mod_ProjCodeTxt.setEnabled(true);
                Mod_ModuleCodeTxt.setEnabled(true);
                Mod_ModuleNameTxt.setEnabled(false);

                Mod_NewBtn.setEnabled(true);
                Mod_ChangeBtn.setEnabled(false);
                Mod_SaveBtn.setEnabled(false);
                Mod_CancelBtn.setEnabled(false);
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage);
                 
                 if(execFlag <= 0 ){
                        JOptionPane.showMessageDialog(jFrame,  "Saving Failed " + 
                                "\n" + errMessage, "Maintenance", 0);
                 }
        }
    }//GEN-LAST:event_Mod_SaveBtnActionPerformed

    private void Mod_ChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mod_ChangeBtnActionPerformed
                Mod_ProjCodeTxt.setEnabled(false);
                Mod_ModuleCodeTxt.setEnabled(false);
                Mod_ModuleNameTxt.setEnabled(true);

                Mod_NewBtn.setEnabled(false);
                Mod_ChangeBtn.setEnabled(false);
                Mod_SaveBtn.setEnabled(true);
                Mod_CancelBtn.setEnabled(true);
    }//GEN-LAST:event_Mod_ChangeBtnActionPerformed

    private void Mod_CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mod_CancelBtnActionPerformed
                Mod_ModuleCodeTxt.setText("*");
                Mod_ModuleCodeTxt.setText("");
                Mod_ModuleNameTxt.setText("");
                
                Mod_ProjCodeTxt.setEnabled(true);
                Mod_ModuleCodeTxt.setEnabled(true);
                Mod_ModuleNameTxt.setEnabled(false);

                Mod_NewBtn.setEnabled(true);
                Mod_ChangeBtn.setEnabled(false);
                Mod_SaveBtn.setEnabled(false);
                Mod_CancelBtn.setEnabled(false);
    }//GEN-LAST:event_Mod_CancelBtnActionPerformed

    private void UserSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserSaveBtnActionPerformed
        int execFlag = 0;
        JFrame jFrame = new JFrame();
        
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                
                String userid = UserIdLbl.getText();
                //String projcode = UserProjCodeLst.getSelectedValue();
                String projcode = ProjCodeTxt.getText();
                String usercode = UserCodeTxt.getText();
                String username = UserNameTxt.getText();
//                String usertype = UserTypeLst.getSelectedValue();
                String usertype = UserTypeCmb.getSelectedItem().toString();
                String fieldlogin = FieldLoginTxt.getText();
                String login = UserLoginTxt.getText();
                String fieldpassword = FieldPasswordTxt.getText();
                String password = UserPasswordTxt.getText();
                
                CallableStatement cStmt = conn.prepareCall("{call Search_TDDUser_ByProjCodeUserCodeUserName(?,?,?)}");
                cStmt.setString(1, projcode);
                cStmt.setString(2, usercode);
                cStmt.setString(3, username);
                //cStmt.setString(4, usertype);
                ResultSet rs = cStmt.executeQuery();
                
                if(rs.next()){
                        cStmt.close();
                        //Update Mode
                        /*
                        @id int,
                        @project_code NVARCHAR(20),
                        @user_code NVARCHAR(20),
                        @user_name NVARCHAR(50),
                        @user_type NVARCHAR(20),
                        @field_login NVARCHAR(50),
                        @app_login NVARCHAR(50),
                        @field_password NVARCHAR(50),
                        @app_password NVARCHAR(50)
                        */
                        cStmt = conn.prepareCall("{call Update_TDDUser(?,?,?,?,?,?,?,?,?)}");
                        cStmt.setInt(1, Integer.parseInt(userid));
                        cStmt.setNString(2, projcode);
                        cStmt.setNString(3,usercode);
                        cStmt.setNString(4,username);
                        cStmt.setNString(5,usertype);
                        cStmt.setNString(6, fieldlogin);
                        cStmt.setNString(7, login);
                        cStmt.setNString(8, fieldpassword);
                        cStmt.setNString(9, password);
                        execFlag = cStmt.executeUpdate();
                    
                }
                else{
                        cStmt.close();
                        //Insert Mode
                        /*
                        @project_code NVARCHAR(20),
                        @user_code NVARCHAR(20),
                        @user_name NVARCHAR(50),
                        @user_type NVARCHAR(20),
                        @field_login NVARCHAR(50),
                        @app_login NVARCHAR(50),
                        @field_password NVARCHAR(50),
                        @app_password NVARCHAR(50)                        
                        */
                        cStmt = conn.prepareCall("{call Insert_TDDUser(?,?,?,?,?,?,?,?)}");
                        cStmt.setNString(1, projcode);
                        cStmt.setNString(2, usercode);
                        cStmt.setNString(3, username);
                        cStmt.setNString(4, usertype);
                        cStmt.setNString(5, fieldlogin);
                        cStmt.setNString(6, login);
                        cStmt.setNString(7, fieldpassword);
                        cStmt.setNString(8, password);
                        
                        execFlag = cStmt.executeUpdate();
                    
                }
                
                if(execFlag < 0){
                        JOptionPane.showMessageDialog(jFrame, "Record has been successfully saved", "Maintenance", JOptionPane.INFORMATION_MESSAGE);
                        conn.commit();
                        conn.close();
                }
                        
                loadUserTbl_User();
                
                UserCodeTxt.setText("");
                UserNameTxt.setText("");
                //UserTypeLst.setSelectedIndex(0);
                
                UserCodeTxt.setEnabled(true);
                UserNameTxt.setEnabled(false);
                //UserTypeLst.setEnabled(false);
                UserTypeCmb.setEnabled(false);
                
                UserSearchBtn.setEnabled(true);
                UserNewBtn.setEnabled(true);
                UserChangeBtn.setEnabled(false);
                UserSaveBtn.setEnabled(false);
                UserCancelBtn.setEnabled(false);
        }
        catch(Exception ex){
                 String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage);
                 
                  if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed " + 
                               "\n" + errMessage, "Maintenance", JOptionPane.ERROR_MESSAGE);
                }
        }
        
    }//GEN-LAST:event_UserSaveBtnActionPerformed

    private void UserTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTblMousePressed
            if(evt.getClickCount() == 2){
                TableModel model = UserTbl.getModel();
                int index = UserTbl.getSelectedRow();
                //{"User ID","Project Code","User Code","User Name", "User Type", "Field Login", "Login", "Field Password", "Password"}
                String userid = model.getValueAt(index, 0).toString();
                String projcode = model.getValueAt(index, 1).toString();
                String usercode = model.getValueAt(index, 2).toString();
                String username = model.getValueAt(index, 3).toString();
                String usertype = model.getValueAt(index, 4).toString();
                String fieldlogin = model.getValueAt(index, 5).toString();
                String login = model.getValueAt(index, 6).toString();
                String fieldpassword = model.getValueAt(index, 7).toString();
                String password = model.getValueAt(index, 8).toString();
                
                
                UserIdLbl.setText(userid);
                //UserProjCodeLst.setSelectedValue(projcode, true);
                UserCodeTxt.setText(usercode);
                UserNameTxt.setText(username);
                //UserTypeLst.setSelectedValue(usertype, true);
                UserTypeCmb.setSelectedItem(usertype);
                
                UserLoginTxt.setText(login);
                UserPasswordTxt.setText(password);
                FieldLoginTxt.setText(fieldlogin);
                FieldPasswordTxt.setText(fieldpassword);
                
                UserLoginTxt.setEnabled(false);
                UserPasswordTxt.setEnabled(false);
                FieldLoginTxt.setEnabled(false);
                FieldPasswordTxt.setEnabled(false);
                
                UserNewBtn.setEnabled(false);
                UserChangeBtn.setEnabled(true);
                UserSaveBtn.setEnabled(false);
                UserCancelBtn.setEnabled(true);
                
            }
    }//GEN-LAST:event_UserTblMousePressed

    private void UserNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNewBtnActionPerformed
        UserCodeTxt.setEnabled(true);
        UserNameTxt.setEnabled(true);
        //UserTypeLst.setEnabled(true);
        UserTypeCmb.setEnabled(true);
        
        UserSearchBtn.setEnabled(false);
        UserNewBtn.setEnabled(false);
        UserChangeBtn.setEnabled(false);
        UserSaveBtn.setEnabled(true);
        UserCancelBtn.setEnabled(true);
    }//GEN-LAST:event_UserNewBtnActionPerformed

    private void UserChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserChangeBtnActionPerformed
        UserCodeTxt.setEnabled(true);
        UserNameTxt.setEnabled(true);
        //UserTypeLst.setEnabled(true);
        UserTypeCmb.setEnabled(true);
        
        UserLoginTxt.setEnabled(true);
        UserPasswordTxt.setEnabled(true);
        FieldLoginTxt.setEnabled(true);
        FieldPasswordTxt.setEnabled(true);
        
        UserNewBtn.setEnabled(false);
        UserChangeBtn.setEnabled(false);
        UserSaveBtn.setEnabled(true);
        UserCancelBtn.setEnabled(true);
    }//GEN-LAST:event_UserChangeBtnActionPerformed

    private void UserCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserCancelBtnActionPerformed
         UserCodeTxt.setText("");
                UserNameTxt.setText("");
                //UserTypeLst.setSelectedIndex(0);
                UserTypeCmb.setSelectedIndex(0);
                
                UserCodeTxt.setEnabled(true);
                UserNameTxt.setEnabled(false);
                //UserTypeLst.setEnabled(false);
                UserTypeCmb.setEnabled(false);
                
                UserNewBtn.setEnabled(true);
                UserChangeBtn.setEnabled(false);
                UserSaveBtn.setEnabled(false);
                UserCancelBtn.setEnabled(false);
    }//GEN-LAST:event_UserCancelBtnActionPerformed

    private void UserSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserSearchBtnActionPerformed
       try{
             Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
             CallableStatement cStmt = conn.prepareCall("{call Search_TDDUser_ByProjCodeUserCode(?,?)}");
             String userid = "";
             //String projcode = UserProjCodeLst.getSelectedValue();
             String projcode = ProjCodeTxt.getText();
             
             String usercode = UserCodeTxt.getText();
             String username = "";
             String usertype = "";
             
             cStmt.setString(1, projcode);
             cStmt.setString(2, usercode);
             
             ResultSet rs = cStmt.executeQuery();
             if(rs.next()){
                    UserNameTxt.setEnabled(true);
                    //UserTypeLst.setEnabled(true);
                    UserTypeCmb.setEnabled(true);
                    
                    userid = NumberToTextConverter.toText(rs.getInt("ID"));
                    username = rs.getString("NAME");
                    usertype = rs.getNString("TYPE");
                    
                    UserIdLbl.setText(userid);
                    UserNameTxt.setText(username);
                    //UserTypeLst.setSelectedValue(usertype, true);    
                    UserTypeCmb.setSelectedItem(usertype);
                    
                     UserCodeTxt.setEnabled(true);
                    UserNameTxt.setEnabled(false);
                    //UserTypeLst.setEnabled(false);
                    UserTypeCmb.setEnabled(false);
                    
                    UserNewBtn.setEnabled(false);
                    UserChangeBtn.setEnabled(true);
                    UserSaveBtn.setEnabled(false);
                    UserCancelBtn.setEnabled(false);
             }
             
       }
       catch(Exception ex){
            System.out.println("Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause());
       }
    }//GEN-LAST:event_UserSearchBtnActionPerformed

    private void MenuSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSaveBtnActionPerformed
        JFrame jFrame = new JFrame();
        int execFlag = 0;
        /*
                  @user_code NVARCHAR(20),
	@main_code NVARCHAR(10),
	@sub_code NVARCHAR(10),
	@child_code NVARCHAR(10),
	@page_module NVARCHAR(50),
	@page_field NVARCHAR(50),
	@element_id NVARCHAR(200),
	@element_xpath NVARCHAR(200),
	@link_value NVARCHAR(50),
	@page_url NVARCHAR(200),
	@page_title NVARCHAR(100),
	@element_type NVARCHAR(50),
	@element_value NVARCHAR(100),
	@element_action NVARCHAR(50),
	@menu_reference NVARCHAR(50),
	@worksheet_reference NVARCHAR(50),
	@field_reference NVARCHAR(50),
	@element_message NVARCHAR(500),
	@element_result NVARCHAR(100)
                */
        String usercode = MenuUserCodeLst.getSelectedValue();
        String maincode = MenuMainCodeTxt.getText();
        String subcode = MenuMainCodeTxt.getText();
        String childcode = MenuChildCodeTxt.getText();
        String pagemodule = MenuPageModuleTxt.getText();
        String pagefield = MenuPageFieldTxt.getText();
        String elementid = MenuElementIdTxt.getText();
        String elementxpath = MenuElementXpathTxt.getText();
        String linkvalue = null;
        String pageurl = null;
        String pagetitle = null;
        String elementtype = MenuElementTypeLst.getSelectedValue();
        String elementvalue = null;
        String elementaction = MenuElementActionLst.getSelectedValue();
        String menureference = null;
        String worksheetreference = null;
        String fieldreference = null;
        String elementmessage = null;
        String elementresult = null;
        int validateFlag = 0;
        

        try{
            if(elementtype.equals("BLANK")){
                validateFlag = 1;
            }
            else if(elementaction.equals("BLANK")){
                validateFlag = 1;
            }

            switch(validateFlag){
                case 0 :
                        Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                        CallableStatement cStmt = null;
                        cStmt = conn.prepareCall("{call Search_UserMenuMap_UserCode(?,?)}");

                        cStmt.setNString(1, usercode);
                        cStmt.setNString(2, maincode);
                        ResultSet rs = cStmt.executeQuery();

                        if(rs.next()){
                            //Update Mode
                                cStmt = conn.prepareCall("{call Update_Menumap(?,?,?,?,?,?,?,?,?,?)}");
                                /*
                                @user_code NVARCHAR(20),
                                @main_code NVARCHAR(10),
                                @sub_code NVARCHAR(10),
                                @child_code NVARCHAR(10),
                                @page_module NVARCHAR(50),
                                @page_field NVARCHAR(50),
                                @element_id NVARCHAR(200),
                                @element_xpath NVARCHAR(200),
                                @element_type NVARCHAR(50),
                                @element_action NVARCHAR(50)
                                */
                                cStmt.setString(1, usercode);
                                cStmt.setString(2, maincode);
                                cStmt.setString(3, subcode);
                                cStmt.setString(4, childcode);
                                cStmt.setString(5, pagemodule);
                                cStmt.setString(6, pagefield);
                                cStmt.setString(7, elementid);
                                cStmt.setString(8, elementxpath);
                                cStmt.setString(9, elementtype);
                                cStmt.setString(10, elementaction);

                                execFlag = cStmt.executeUpdate();
                        }
                        else{
                            //Insert Mode
                            cStmt = conn.prepareCall("{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
                            /*
                                @user_code NVARCHAR(20),
                                @main_code NVARCHAR(10),
                                @sub_code NVARCHAR(10),
                                @child_code NVARCHAR(10),
                                @page_module NVARCHAR(50),
                                @page_field NVARCHAR(50),
                                @element_id NVARCHAR(200),
                                @element_xpath NVARCHAR(200),
                                @link_value NVARCHAR(50),
                                @page_url NVARCHAR(200),
                                @page_title NVARCHAR(100),
                                @element_type NVARCHAR(50),
                                @element_value NVARCHAR(100),
                                @element_action NVARCHAR(50),
                                @menu_reference NVARCHAR(50),
                                @worksheet_reference NVARCHAR(50),
                                @field_reference NVARCHAR(50),
                                @element_message NVARCHAR(500),
                                @element_result NVARCHAR(100)
                            */

                            cStmt.setNString(1, usercode);
                            cStmt.setNString(2, maincode);
                            cStmt.setNString(3, subcode);
                            cStmt.setNString(4, pagemodule);
                            cStmt.setNString(5, pagefield);
                            cStmt.setNString(6, elementid);
                            cStmt.setNString(7, elementxpath);
                            cStmt.setNString(8, linkvalue);
                            cStmt.setNString(9, pageurl);
                            cStmt.setNString(10, pagetitle);
                            cStmt.setNString(11, elementtype);
                            cStmt.setNString(12, elementvalue);
                            cStmt.setNString(13, elementaction);
                            cStmt.setNString(14, menureference);
                            cStmt.setNString(15, worksheetreference);
                            cStmt.setNString(16, fieldreference);
                            cStmt.setNString(17, elementmessage);
                            cStmt.setNString(18, elementresult);

                            execFlag = cStmt.executeUpdate();
                        }

                        if(execFlag < 0){
                            JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed ", "Maintenance - Menu", JOptionPane.INFORMATION_MESSAGE);
                            conn.commit();
                            cStmt.close();
                            conn.close();
                        }
                    break;

                default:
                    JOptionPane.showMessageDialog(jFrame,  "Invalid value on Element Type and Element Action ", "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed " + 
                               "\n" + errMessage, "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                }
        }
    }//GEN-LAST:event_MenuSaveBtnActionPerformed

    private void MenuUserCodeLstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_MenuUserCodeLstValueChanged
        JFrame jFrame = new JFrame();
        
        try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_TDDUser_ByProjCodeUserCode(?,?)}");
                    
                    //String projcode = MtProjCodeLbl.getText();
                    String projcode = ProjCodeTxt.getText();
                    String usercode = MenuUserCodeLst.getSelectedValue();
                    
                    cStmt.setString(1, projcode);
                    cStmt.setString(2, usercode);
                    
                    ResultSet rs = cStmt.executeQuery();
                    
                    if(rs.next()){
                            String id = NumberToTextConverter.toText(rs.getInt("ID"));
                            String pcode = rs.getNString("PROJ_CODE");
                            String code = rs.getString("CODE");
                            String name = rs.getString("NAME");
                            String type = rs.getString("TYPE");
                            
                            MenuUserNameLbl.setText(name + " - " + type);
                            
                    }
                    
                    cStmt.close();
                    conn.close();
                    
            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Selecting from list Failed " + 
                               "\n" + errMessage, "Maintenance", 0);
            }
    }//GEN-LAST:event_MenuUserCodeLstValueChanged

    private void MenuTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuTblMousePressed
        if(evt.getClickCount() == 2){
                TableModel model = MenuTbl.getModel();
                int index = MenuTbl.getSelectedRow();
                
                String id = model.getValueAt(index, 0).toString();
                String usercode = model.getValueAt(index, 1).toString();
                String maincode = model.getValueAt(index, 2).toString();
                String subcode = model.getValueAt(index, 3).toString();
                String childcode = model.getValueAt(index,4).toString();
                String pagemodule = model.getValueAt(index,5).toString();
                String pagefield = model.getValueAt(index, 6).toString();
                String elementid = model.getValueAt(index,7).toString();
                String elementxpath = model.getValueAt(index,8).toString();
                String elementtype = model.getValueAt(index,9).toString();
                String elementaction = model.getValueAt(index,10).toString();
                
                MenuUserCodeLst.setSelectedValue(usercode, true);
                MenuMainCodeTxt.setText(maincode);
                MenuSubCodeTxt.setText(subcode);
                MenuChildCodeTxt.setText(childcode);
                MenuPageModuleTxt.setText(pagemodule);
                MenuPageFieldTxt.setText(pagefield);
                MenuElementIdTxt.setText(elementid);
                MenuElementXpathTxt.setText(elementxpath);
                MenuElementTypeLst.setSelectedValue(elementtype, true);
                MenuElementActionLst.setSelectedValue(elementaction, true);
                
                MenuNewBtn.setEnabled(false);
                MenuChangeBtn.setEnabled(true);
                MenuSaveBtn.setEnabled(false);
                MenuCancelBtn.setEnabled(false);
        }
    }//GEN-LAST:event_MenuTblMousePressed

    private void MenuSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSearchBtnActionPerformed
        JFrame jFrame = new JFrame();
        int validateFlag = 0;
        try{
                String usercode = MenuUserCodeLst.getSelectedValue();
                String maincode = MenuMainCodeTxt.getText();

                if(usercode == null){
                    JOptionPane.showMessageDialog(jFrame, "No User Code has been selected", "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                    validateFlag = 1;
                }
                
                if(maincode.equals("")){
                    JOptionPane.showMessageDialog(jFrame, "No Main Code has been selected", "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                    validateFlag = 1;
                }
                    
                switch(validateFlag){
                    case 0:
                            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                            CallableStatement cStmt = conn.prepareCall("{call Search_UserMenuMap_UserCode(?,?)}");

                            cStmt.setNString(1, usercode);
                            cStmt.setNString(2, maincode);

                            ResultSet rs = cStmt.executeQuery();
                            if(rs.next()){
                                    String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                    //String usercode = rs.getNString("USERCODE");
                                    //String maincode = rs.getNString("MAINCODE");
                                    String subcode = rs.getNString("SUBCODE");
                                    String childcode = rs.getNString("CHILDCODE");
                                    String module = rs.getNString("MODULE");
                                    String field = rs.getNString("FIELD");
                                    String elementid = rs.getNString("ELEMENTID");
                                    String elementxpath = rs.getNString("ELEMENTXPATH");
                                    String link = rs.getNString("LINK");
                                    String url = rs.getNString("URL");
                                    String title = rs.getNString("TITLE");
                                    String elementtype = rs.getNString("ELEMENTTYPE");
                                    String elementvalue = rs.getNString("ELEMENTVALUE");
                                    String elementaction = rs.getNString("ELEMENTACTION");
                                    String menuref = rs.getNString("MENUREF");
                                    String worksheetref = rs.getNString("WORKSHEETREF");
                                    String fieldref = rs.getNString("FIELDREF");
                                    String elementmsg = rs.getNString("ELEMENTMSG");
                                    String elementresult = rs.getNString("ELEMENTRESULT");

                                    MenuSubCodeTxt.setText(subcode);
                                    MenuChildCodeTxt.setText(childcode);
                                    MenuPageModuleTxt.setText(module);
                                    MenuPageFieldTxt.setText(field);
                                    MenuElementIdTxt.setText(elementid);
                                    MenuElementXpathTxt.setText(elementxpath);
                                    MenuElementTypeLst.setSelectedValue(elementtype, true);
                                    MenuElementActionLst.setSelectedValue(elementaction, true);
                                    
                                    MenuNewBtn.setEnabled(false);
                                    MenuChangeBtn.setEnabled(true);
                                    MenuSaveBtn.setEnabled(false);
                                    MenuCancelBtn.setEnabled(false);
                            }

                            cStmt.close();
                            conn.close();                        
                        break;
                        
                    default:
                        break;  
                }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                JOptionPane.showMessageDialog(jFrame,  "Search Record Failed " + 
                               "\n" + errMessage, "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_MenuSearchBtnActionPerformed

    private void MenuChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuChangeBtnActionPerformed
            MenuSubCodeTxt.setEnabled(true);
            MenuPageModuleTxt.setEnabled(true);
            MenuPageFieldTxt.setEnabled(true);
            MenuElementIdTxt.setEnabled(true);
            MenuElementXpathTxt.setEnabled(true);
            MenuElementTypeLst.setEnabled(true);
            MenuElementActionLst.setEnabled(true);

            MenuNewBtn.setEnabled(false);
            MenuChangeBtn.setEnabled(false);
            MenuSaveBtn.setEnabled(true);
            MenuCancelBtn.setEnabled(true);
            
    }//GEN-LAST:event_MenuChangeBtnActionPerformed

    private void PFuncSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFuncSaveBtnActionPerformed
            JFrame jFrame = new JFrame();
            int execFlag = 0;
            
            try{
                    int id = 0;
                    String getId = PFIdLbl.getText();
                    if(getId.equals("") || getId == "" || getId == "*"){
                        id = 0;
                    }
                    else{
                        id = Integer.parseInt(getId);
                    }
                    
                    //String projcode = MtProjCodeLbl.getText();
                    String projcode = ProjCodeTxt.getText();
                    String funccode = PFuncCodeTxt.getText();
                    String funcname = PFuncNameTxt.getText();
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    //CallableStatement cStmt = conn.prepareCall("{call Search_ProjectFunction_ByIdProjCode(?,?)}");
                    CallableStatement cStmt = conn.prepareCall("{call Search_ProjectFunction_ByProjCodeFuncCode(?,?)}");
                    
                    //cStmt.setInt(1, id);
                    //cStmt.setNString(2, projcode);
                    
                    cStmt.setNString(1, projcode);
                    cStmt.setNString(2, funccode);
                    
                    ResultSet rs = cStmt.executeQuery();
                    
                    if(rs.next()){
                        cStmt.close();
                        //Update Mode
                        cStmt = conn.prepareCall("{call Update_ProjectFunction(?,?,?,?)}");
                        
                        cStmt.setInt(1, id);
                        cStmt.setNString(2, projcode);
                        cStmt.setNString(3, funccode);
                        cStmt.setNString(4, funcname);
                        execFlag = cStmt.executeUpdate();
                        
                    }
                    else {
                        cStmt.close();
                        //Insert Mode
                        cStmt = conn.prepareCall("{call Insert_ProjectFunction(?,?,?)}");
                        /*
                        @project_code NVARCHAR(20),
                        @function_code NVARCHAR(20),
                        @function_name NVARCHAR(100)                        
                        */
                        cStmt.setNString(1, projcode);
                        cStmt.setNString(2, funccode);
                        cStmt.setNString(3, funcname);
                        execFlag = cStmt.executeUpdate();
                        
                    }
                    
                    if(execFlag < 0){
                           JOptionPane.showMessageDialog(jFrame,  "Record Saving Successful ", "Maintenance - Project Function", JOptionPane.INFORMATION_MESSAGE);
                           conn.commit();
                           cStmt.close();
                           conn.close();
                           
                           PFuncCodeTxt.setText("");
                           PFuncNameTxt.setText("");

                            PFuncNameTxt.setEnabled(false);

                            PFuncNewBtn.setEnabled(true);
                            PFuncChangeBtn.setEnabled(false);
                            PFuncSaveBtn.setEnabled(false);
                            PFuncCancelBtn.setEnabled(false);
                           
                           loadProjFunctionTbl_ProjFunction();
                    }

            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed " + 
                                   "\n" + errMessage, "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                    }
            }
    }//GEN-LAST:event_PFuncSaveBtnActionPerformed

    private void PFuncNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFuncNewBtnActionPerformed
        PFuncCodeTxt.setEnabled(true);
        PFuncNameTxt.setEnabled(true);
        
        PFuncNewBtn.setEnabled(false);
        PFuncChangeBtn.setEnabled(false);
        PFuncSaveBtn.setEnabled(true);
        PFuncCancelBtn.setEnabled(true);
    }//GEN-LAST:event_PFuncNewBtnActionPerformed

    private void PFuncChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFuncChangeBtnActionPerformed
        PFuncCodeTxt.setEnabled(true);
        PFuncNameTxt.setEnabled(true);
        
        PFuncNewBtn.setEnabled(false);
        PFuncChangeBtn.setEnabled(false);
        PFuncSaveBtn.setEnabled(true);
        PFuncCancelBtn.setEnabled(true);
    }//GEN-LAST:event_PFuncChangeBtnActionPerformed

    private void PFuncCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFuncCancelBtnActionPerformed
        PFuncCodeTxt.setText("");
        PFuncNameTxt.setText("");
        PFuncCodeTxt.setFocusable(true);
        PFuncNameTxt.setEnabled(false);
       
        PFuncNewBtn.setEnabled(true);
        PFuncChangeBtn.setEnabled(false);
        PFuncSaveBtn.setEnabled(false);
        PFuncCancelBtn.setEnabled(false);
    }//GEN-LAST:event_PFuncCancelBtnActionPerformed

    private void PFuncTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PFuncTblMousePressed
            if(evt.getClickCount() == 2){
                    TableModel model = PFuncTbl.getModel();
                    int index = PFuncTbl.getSelectedRow();
                    
                    String id = model.getValueAt(index, 0).toString();
                    String fcode = model.getValueAt(index,1).toString();
                    String fname = model.getValueAt(index, 2).toString();
                    
                    PFIdLbl.setText(id);
                    PFuncCodeTxt.setText(fcode);
                    PFuncNameTxt.setText(fname);
                    
                    PFuncCodeTxt.setFocusable(true);
                    PFuncCodeTxt.setEnabled(false);
                    PFuncNameTxt.setEnabled(false);

                    PFuncNewBtn.setEnabled(false);
                    PFuncChangeBtn.setEnabled(true);
                    PFuncSaveBtn.setEnabled(false);
                    PFuncCancelBtn.setEnabled(true);
            }
    }//GEN-LAST:event_PFuncTblMousePressed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        //Module Maintenance
                //loadModuleTbl_Module();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        //Menu Maintenance
                //loadUserCodeLst_Menu();
                //loadMenuTbl_Menu();
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
            //Project App - Maintenance
            //loadProjectAppTbl_ProjectApp();
            //loadModule_ProjectList_Module();
    }//GEN-LAST:event_jPanel4MouseClicked

    private void MaintenanceTabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaintenanceTabsMouseClicked
            
        JFrame jFrame = new JFrame();
        SingleSelectionModel selectedTabbed = MaintenanceTabs.getModel();
          
        int selectedIndex = selectedTabbed.getSelectedIndex();
        
       switch(selectedIndex){
           case 0:
               //Modules
               loadModuleTbl_Module();
               break;
               
           case 1:
               //Field Mapping
               loadFieldMapTbl_FieldMapping();
               loadFunctionCodeLst_FieldMapping();
               loadModuleCodeLst_FieldMapping();
               break;
               
           case 2:
               //Menu
                loadUserCodeLst_Menu();
                loadMenuTbl_Menu();
                break;
               
           case 3:
               //Project Apps
                loadProjectAppTbl_ProjectApp();
                loadModule_ProjectList_Module();
                break;
               
           case 4:
                //User
                loadUser_ProjectLst_User();
                loadUserTbl_User();
                break;
                
           case 5:
                //Project Function 
                loadProjFunctionTbl_ProjFunction();
               break;
               
           case 6:
               //Urls
               loadProjectLocationTbl_ProjectLocation();
               break;
       }
    }//GEN-LAST:event_MaintenanceTabsMouseClicked

    private void Mod_ModuleTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mod_ModuleTblMousePressed
        if(evt.getClickCount() == 2){
                TableModel tblmodel = (TableModel)Mod_ModuleTbl.getModel();
                int indexRow = Mod_ModuleTbl.getSelectedRow();
                
                Mod_IdTxt.setText(tblmodel.getValueAt(indexRow, 0).toString());
                Mod_ProjCodeTxt.setText(tblmodel.getValueAt(indexRow,1).toString());
                Mod_ModuleCodeTxt.setText(tblmodel.getValueAt(indexRow, 2).toString());
                Mod_ModuleNameTxt.setText(tblmodel.getValueAt(indexRow,3).toString());
                
                Mod_ChangeEnabled();
        }
    }//GEN-LAST:event_Mod_ModuleTblMousePressed

    private void FMConsolidateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMConsolidateBtnActionPerformed
        String filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\FieldMapping.xlsx";
        ExcelObject excelObj = new ExcelObject();
        JFrame jFrame = new JFrame();
        
        try{
                excelObj.getExcelFieldMapping(filename);
                
        }
        catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed " + 
                                   "\n" + errMessage, "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                    
        }

    }//GEN-LAST:event_FMConsolidateBtnActionPerformed

    private void FieldMappingTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FieldMappingTblMousePressed
            if(evt.getClickCount() == 2){
                    TableModel model = FieldMappingTbl.getModel();
                    int index = FieldMappingTbl.getSelectedRow();
                    
                    String id = model.getValueAt(index, 0).toString();
                    String fcode = model.getValueAt(index, 1).toString();
                    String module = model.getValueAt(index, 2).toString();
                    String submodule = model.getValueAt(index, 3).toString();
                    String fieldid = model.getValueAt(index, 4).toString();
                    String fieldname = model.getValueAt(index, 5).toString();
                    String elementid = model.getValueAt(index, 6).toString();
                    String elementxpath = model.getValueAt(index, 7).toString();
                    String elementtype = model.getValueAt(index, 8).toString();
                    String elementaction = model.getValueAt(index, 9).toString();
                    
                    FMFunctionCodeLst.setSelectedValue(fcode, true);
                    FMModuleCodeLst.setSelectedValue(module, true);
                    FMSubmoduleCodeLst.setSelectedValue(submodule, true);
                    FMFieldIdTxt.setText(fieldid);
                    FMFieldNameTxt.setText(fieldname);
                    FMElementIdTxt.setText(elementid);
                    FMElementXpathTxt.setText(elementxpath);
                    FMElementTypeLst.setSelectedValue(elementtype, true);
                    FMElementActionLst.setSelectedValue(elementaction, true);

            }
            
    }//GEN-LAST:event_FieldMappingTblMousePressed

    private void FMFunctionCodeLstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_FMFunctionCodeLstValueChanged
            JFrame jFrame = new JFrame();
            
            if(evt.getValueIsAdjusting() == true){
                    String funccode = FMFunctionCodeLst.getSelectedValue();
                    
                    try{
                            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                            CallableStatement cStmt = conn.prepareCall("{call Search_ProjectFunction_ByProjCodeFuncCode(?,?)}");
                            //String projcode = MtProjCodeLbl.getText();
                            String projcode = ProjCodeTxt.getText();
                            //String fcode = FMFunctionCodeLst.getSelectedValue();
                            
                            cStmt.setNString(1, projcode);
                            cStmt.setNString(2, funccode);
                            
                            ResultSet rs = cStmt.executeQuery();
                            if(rs.next()){
                                /*
                                    [ID] = ID,
                                    [PCODE] = PROJECT_CODE,
                                    [FCODE] = FUNCTION_CODE,
                                    [FNAME] = FUNCTION_NAME
                                */
                                String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                String pcode = rs.getNString("PCODE");
                                String fcode = rs.getNString("FCODE");
                                String fname = rs.getNString("FNAME");
                                
                                FMFunctionNameLbl.setText(fname);
                                
                            }
                            
                            cStmt.close();
                            conn.close();
                            
                    }
                    catch(Exception ex){
                            String errMessage = null;

                            errMessage = "Error Message: " + ex.getMessage() + 
                               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                               "\n" + "Stack Trace: " + ex.getStackTrace() + 
                               "\n" + "Cause: " + ex.getCause();

                            System.out.println(errMessage);

                            //if(execFlag <= 0 ){
                            JOptionPane.showMessageDialog(jFrame,  "Selecting from Function Failed " + 
                                           "\n" + errMessage, "Maintenance - Field Map", 0);
                    }
            }
            else{
                    //JOptionPane.showMessageDialog(jFrame,  "Selected via Programmatic selection", "Maintenance - Field Map", JOptionPane.INFORMATION_MESSAGE);
                    String funccode = FMFunctionCodeLst.getSelectedValue();
                    
                    try{
                            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                            CallableStatement cStmt = conn.prepareCall("{call Search_ProjectFunction_ByProjCodeFuncCode(?,?)}");
                            //String projcode = MtProjCodeLbl.getText();
                            String projcode = ProjCodeTxt.getText();
                            //String fcode = FMFunctionCodeLst.getSelectedValue();
                            
                            cStmt.setNString(1, projcode);
                            cStmt.setNString(2, funccode);
                            
                            ResultSet rs = cStmt.executeQuery();
                            if(rs.next()){
                                /*
                                    [ID] = ID,
                                    [PCODE] = PROJECT_CODE,
                                    [FCODE] = FUNCTION_CODE,
                                    [FNAME] = FUNCTION_NAME
                                */
                                String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                String pcode = rs.getNString("PCODE");
                                String fcode = rs.getNString("FCODE");
                                String fname = rs.getNString("FNAME");
                                
                                FMFunctionNameLbl.setText(fname);
                                
                            }
                            
                            cStmt.close();
                            conn.close();
                            
                    }
                    catch(Exception ex){
                            String errMessage = null;

                            errMessage = "Error Message: " + ex.getMessage() + 
                               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                               "\n" + "Stack Trace: " + ex.getStackTrace() + 
                               "\n" + "Cause: " + ex.getCause();

                            System.out.println(errMessage);

                            //if(execFlag <= 0 ){
                            JOptionPane.showMessageDialog(jFrame,  "Selecting from Function Failed " + 
                                           "\n" + errMessage, "Maintenance - Field Map", 0);
                    }
            
            }
    }//GEN-LAST:event_FMFunctionCodeLstValueChanged

    private void FMModuleCodeLstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_FMModuleCodeLstValueChanged
            JFrame jFrame = new JFrame();
            if(evt.getValueIsAdjusting() == true){        
                    try{
                            String projcode = ProjCodeTxt.getText();
                           //String projcode = MtProjCodeLbl.getText();
                           String modcode = FMModuleCodeLst.getSelectedValue();
                           
                           Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                           CallableStatement cStmt = conn.prepareCall("{call Search_ProjectModule_ByProjCodeModCode (?,?)}");
                           cStmt.setNString(1, projcode);
                           cStmt.setNString(2, modcode);
                           
                           ResultSet rs = cStmt.executeQuery();
                           if(rs.next()){
                                String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                String pcode = rs.getNString("PCODE");
                                String mcode = rs.getNString("MCODE");
                                String mname = rs.getNString("MNAME");
                                
                                FMModuleNameLbl.setText(mname);
                                
                                loadSubModuleLst_FieldMapping(mcode);
                                
                           }
                           cStmt.close();
                           conn.close();
                           
                    }
                    catch(Exception ex){
                            String errMessage = null;

                            errMessage = "Error Message: " + ex.getMessage() + 
                               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                               "\n" + "Stack Trace: " + ex.getStackTrace() + 
                               "\n" + "Cause: " + ex.getCause();

                            System.out.println(errMessage);

                            //if(execFlag <= 0 ){
                            JOptionPane.showMessageDialog(jFrame,  "Selecting from Module Failed " + 
                                           "\n" + errMessage, "Maintenance - Field Map", 0);
                    }
            }
            else{
                    try{
                            String projcode = ProjCodeTxt.getText();
                           //String projcode = MtProjCodeLbl.getText();
                           String modcode = FMModuleCodeLst.getSelectedValue();
                           
                           Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                           CallableStatement cStmt = conn.prepareCall("{call Search_ProjectModule_ByProjCodeModCode (?,?)}");
                           cStmt.setNString(1, projcode);
                           cStmt.setNString(2, modcode);
                           
                           ResultSet rs = cStmt.executeQuery();
                           if(rs.next()){
                                String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                String pcode = rs.getNString("PCODE");
                                String mcode = rs.getNString("MCODE");
                                String mname = rs.getNString("MNAME");
                                
                                FMModuleNameLbl.setText(mname);
                                
                                loadSubModuleLst_FieldMapping(mcode);
                                
                           }
                           cStmt.close();
                           conn.close();
                           
                    }
                    catch(Exception ex){
                            String errMessage = null;

                            errMessage = "Error Message: " + ex.getMessage() + 
                               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                               "\n" + "Stack Trace: " + ex.getStackTrace() + 
                               "\n" + "Cause: " + ex.getCause();

                            System.out.println(errMessage);

                            //if(execFlag <= 0 ){
                            JOptionPane.showMessageDialog(jFrame,  "Selecting from Module Failed " + 
                                           "\n" + errMessage, "Maintenance - Field Map", 0);
                    }                
            }
        

    }//GEN-LAST:event_FMModuleCodeLstValueChanged

    private void FMSubmoduleCodeLstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_FMSubmoduleCodeLstValueChanged
            JFrame jFrame = new JFrame();
            String modcode = FMModuleCodeLst.getSelectedValue();
            String subode = FMSubmoduleCodeLst.getSelectedValue();
            
            if(evt.getValueIsAdjusting() == true){
                    try{
                            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                            CallableStatement cStmt = conn.prepareCall("{call Search_ProjectSubmodules_ByModuleCodeSubCode(?,?)}");

                            cStmt.setNString(1, modcode);    
                            cStmt.setNString(2, subode);
                            
                            ResultSet rs = cStmt.executeQuery();
                            if(rs.next()){
                                    String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                    String mcode = rs.getNString("MCODE");
                                    String scode = rs.getNString("SCODE");
                                    String sname = rs.getNString("SNAME");
                                    
                                    FMSubmoduleNameLbl.setText(sname);
                            }
                            cStmt.close();
                            conn.close();
                            
                            
                    }
                    catch(Exception ex){
                            String errMessage = null;

                            errMessage = "Error Message: " + ex.getMessage() + 
                               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                               "\n" + "Stack Trace: " + ex.getStackTrace() + 
                               "\n" + "Cause: " + ex.getCause();

                            System.out.println(errMessage);

                            //if(execFlag <= 0 ){
                            JOptionPane.showMessageDialog(jFrame,  "Selecting from Sub Module Failed " + 
                                           "\n" + errMessage, "Maintenance - Field Map", 0);
                    }
            }
            else{
                    try{
                            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                            CallableStatement cStmt = conn.prepareCall("{call Search_ProjectSubmodules_ByModuleCodeSubCode(?,?)}");

                            cStmt.setNString(1, modcode);    
                            cStmt.setNString(2, subode);
                            
                            ResultSet rs = cStmt.executeQuery();
                            if(rs.next()){
                                    String id = NumberToTextConverter.toText(rs.getInt("ID"));
                                    String mcode = rs.getNString("MCODE");
                                    String scode = rs.getNString("SCODE");
                                    String sname = rs.getNString("SNAME");
                                    
                                    FMSubmoduleNameLbl.setText(sname);
                            }
                            cStmt.close();
                            conn.close();
                            
                            
                    }
                    catch(Exception ex){
                            String errMessage = null;

                            errMessage = "Error Message: " + ex.getMessage() + 
                               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                               "\n" + "Stack Trace: " + ex.getStackTrace() + 
                               "\n" + "Cause: " + ex.getCause();

                            System.out.println(errMessage);

                            //if(execFlag <= 0 ){
                            JOptionPane.showMessageDialog(jFrame,  "Selecting from Sub Module Failed " + 
                                           "\n" + errMessage, "Maintenance - Field Map", 0);
                    }                
            }
    }//GEN-LAST:event_FMSubmoduleCodeLstValueChanged

    private void FMNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMNewBtnActionPerformed
        FMFunctionCodeLst.setEnabled(true);
        FMModuleCodeLst.setEnabled(true);
        FMSubmoduleCodeLst.setEnabled(true);
        FMFieldIdTxt.setEnabled(true);
        FMFieldNameTxt.setEnabled(true);
        FMElementIdTxt.setEnabled(true);
        FMElementXpathTxt.setEnabled(true);
        FMElementTypeLst.setEnabled(true);
        FMElementActionLst.setEnabled(true);
        
        FMNewBtn.setEnabled(false);
        FMChangeBtn.setEnabled(false);
        FMSaveBtn.setEnabled(true);
        FMCancelBtn.setEnabled(true);
    }//GEN-LAST:event_FMNewBtnActionPerformed

    private void FMChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMChangeBtnActionPerformed
        FMFunctionCodeLst.setEnabled(true);
        FMModuleCodeLst.setEnabled(true);
        FMSubmoduleCodeLst.setEnabled(true);
        FMFieldIdTxt.setEnabled(true);
        FMFieldNameTxt.setEnabled(true);
        FMElementIdTxt.setEnabled(true);
        FMElementXpathTxt.setEnabled(true);
        FMElementTypeLst.setEnabled(true);
        FMElementActionLst.setEnabled(true);
        
        FMNewBtn.setEnabled(false);
        FMChangeBtn.setEnabled(false);
        FMSaveBtn.setEnabled(true);
        FMCancelBtn.setEnabled(true);
    }//GEN-LAST:event_FMChangeBtnActionPerformed

    private void FMCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMCancelBtnActionPerformed
        FMFunctionCodeLst.setEnabled(false);
        FMModuleCodeLst.setEnabled(false);
        FMSubmoduleCodeLst.setEnabled(false);
        FMFieldIdTxt.setEnabled(false);
        FMFieldNameTxt.setEnabled(false);
        FMElementIdTxt.setEnabled(false);
        FMElementXpathTxt.setEnabled(false);
        FMElementTypeLst.setEnabled(false);
        FMElementActionLst.setEnabled(false);
        
        FMNewBtn.setEnabled(true);
        FMChangeBtn.setEnabled(false);
        FMSaveBtn.setEnabled(false);
        FMCancelBtn.setEnabled(false);
    }//GEN-LAST:event_FMCancelBtnActionPerformed

    private void FMSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMSaveBtnActionPerformed
        JFrame jFrame = new JFrame();
        int execFlag = 0;
        
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmtQuery = conn.prepareCall("{call Search_FieldMapping_ByFuncModSubCode(?,?,?)}");
                CallableStatement cStmt = null;
                
                String fcode = FMFunctionCodeLst.getSelectedValue();
                String mcode = FMModuleCodeLst.getSelectedValue();
                String scode = FMSubmoduleCodeLst.getSelectedValue();
                String fid = FMFieldIdTxt.getText();
                String fname = FMFieldNameTxt.getText();
                String elemid = FMElementIdTxt.getText();
                String elemxpath = FMElementXpathTxt.getText();
                String elemtype = FMElementTypeLst.getSelectedValue();
                String elemaction = FMElementActionLst.getSelectedValue();
                
                cStmtQuery.setNString(1, fcode);
                cStmtQuery.setNString(2, mcode);
                cStmtQuery.setNString(3, scode);
                ResultSet rs = cStmtQuery.executeQuery();
                if(rs.next()){
                    cStmtQuery.close();
                    //Update Mode
                   cStmt = conn.prepareCall("{call Update_FieldMap(?,?,?,?,?,?,?,?,?)}");
                   cStmt.setNString(1, fcode);
                   cStmt.setNString(2, mcode);
                   cStmt.setNString(3, scode);
                   cStmt.setNString(4, fid);
                   cStmt.setNString(5, fname);
                   cStmt.setNString(6, elemid);
                   cStmt.setNString(7, elemxpath);
                   cStmt.setNString(8, elemtype);
                   cStmt.setNString(9, elemaction);
                   
                   execFlag = cStmt.executeUpdate();
                }
                else{
                    cStmtQuery.close();
                    //Insert Mode
                   cStmt = conn.prepareCall("{call Insert_FieldMap(?,?,?,?,?,?,?,?,?)}");
                   cStmt.setNString(1, fcode);
                   cStmt.setNString(2, mcode);
                   cStmt.setNString(3, scode);
                   cStmt.setNString(4, fid);
                   cStmt.setNString(5, fname);
                   cStmt.setNString(6, elemid);
                   cStmt.setNString(7, elemxpath);
                   cStmt.setNString(8, elemtype);
                   cStmt.setNString(9, elemaction);
                   
                   execFlag = cStmt.executeUpdate();
                }
                
                if(execFlag < 0){
                        JOptionPane.showMessageDialog(jFrame,  "Record Saving Successful ", "Maintenance - Field Mapping", JOptionPane.INFORMATION_MESSAGE);
                        conn.commit();
                        cStmt.close();
                        conn.close();

                        FMFunctionCodeLst.setEnabled(false);
                        FMModuleCodeLst.setEnabled(false);
                        FMSubmoduleCodeLst.setEnabled(false);
                        FMFieldIdTxt.setEnabled(false);
                        FMFieldNameTxt.setEnabled(false);
                        FMElementIdTxt.setEnabled(false);
                        FMElementXpathTxt.setEnabled(false);
                        FMElementTypeLst.setEnabled(false);
                        FMElementActionLst.setEnabled(false);

                        FMNewBtn.setEnabled(true);
                        FMChangeBtn.setEnabled(false);
                        FMSaveBtn.setEnabled(false);
                        FMCancelBtn.setEnabled(false);
                }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed " + 
                               "\n" + errMessage, "Maintenance - Menu", JOptionPane.ERROR_MESSAGE);
                }
        }
        
    }//GEN-LAST:event_FMSaveBtnActionPerformed

    private void PLSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PLSaveBtnActionPerformed
            JFrame jFrame = new JFrame();
            int execFlag = 0;
            
            try{
                
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmtQuery = conn.prepareCall("{call Search_ProjectLocation_ByProjCodeEnv(?,?)}");
                    CallableStatement cStmt = null;
                    
                    //String pcode = MtProjCodeLbl.getText();
                    String projcode = ProjCodeTxt.getText();
                    String path = PLPathTxt.getText();
                    String env = PLEnvironmentLst.getSelectedValue();
                    String browser = PLBrowserLst.getSelectedValue();
                    
                    cStmtQuery.setNString(1, projcode);
                    cStmtQuery.setNString(2, env);
                    
                    ResultSet rs = cStmtQuery.executeQuery();
                    if(rs.next()){
                            //Update mode
                            cStmt = conn.prepareCall("{call Update_ProjectionLocation(?,?,?,?)}");
                            cStmt.setNString(1, projcode);
                            cStmt.setNString(2, path);
                            cStmt.setNString(3, env);
                            cStmt.setNString(4, browser);
                            
                            execFlag = cStmt.executeUpdate();
                    }
                    else{
                            //Insert mode
                            cStmt = conn.prepareCall("{call Insert_ProjectLocation(?,?,?,?)}");
                            cStmt.setNString(1, projcode);
                            cStmt.setNString(2, path);
                            cStmt.setNString(3, env);
                            cStmt.setNString(4, browser);
                            
                            execFlag = cStmt.executeUpdate();
                            
                    }
                    
                    if(execFlag < 0){
                            JOptionPane.showMessageDialog(jFrame,  "Record Saving Successful ", "Maintenance - Project Location", JOptionPane.INFORMATION_MESSAGE);
                            conn.commit();
                            cStmt.close();
                            conn.close();

                            PLEnvironmentLst.setEnabled(true);
                            PLPathTxt.setEnabled(false);
                            PLBrowserLst.setEnabled(false);
                            
                            PLNewBtn.setEnabled(true);
                            PLChangeBtn.setEnabled(false);
                            PLSaveBtn.setEnabled(false);
                            PLCancelBtn.setEnabled(false);
                    }
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Record Saving Failed " + 
                                   "\n" + errMessage, "Maintenance - Project Location", JOptionPane.ERROR_MESSAGE);
                    }
            }
    }//GEN-LAST:event_PLSaveBtnActionPerformed

    private void PLSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PLSearchBtnActionPerformed
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_ProjectLocation_ByProjCodeEnv(?,?)}");
                    //String pcode = MtProjCodeLbl.getText();
                    String projcode = ProjCodeTxt.getText();
                    String env = PLEnvironmentLst.getSelectedValue();
                    
                    cStmt.setNString(1, projcode);
                    cStmt.setNString(2, env);
                    
                    ResultSet rs = cStmt.executeQuery();

                    if(rs.next()){
                        /*
                        [ID] = PL.ID,
                        [PCODE] = PL.PROJECT_CODE,
                        [APATH] = PL.APP_PATH,
                        [ENV] = PL.ENVIRONMENT,
                        [BROWSER] = PL.BROWSER
                        */
                        String apath = rs.getNString("APATH");
                        String browser = rs.getNString("BROWSER");
                        
                        PLPathTxt.setText(apath);
                        PLBrowserLst.setSelectedValue(browser, true);
                        
                        PLEnvironmentLst.setEnabled(true);
                        PLPathTxt.setEnabled(false);
                        PLBrowserLst.setEnabled(false);

                        PLNewBtn.setEnabled(false);
                        PLChangeBtn.setEnabled(true);
                        PLSaveBtn.setEnabled(false);
                        PLCancelBtn.setEnabled(false);
                        
                    }
                    cStmt.close();
                    conn.close();
                           
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Project Apps Table Failed " + 
                                   "\n" + errMessage, "Maintenance - Project Apps", 0);
            }
    }//GEN-LAST:event_PLSearchBtnActionPerformed

    private void PLChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PLChangeBtnActionPerformed
            PLEnvironmentLst.setEnabled(true);
            PLPathTxt.setEnabled(true);
            PLBrowserLst.setEnabled(true);

            PLNewBtn.setEnabled(false);
            PLChangeBtn.setEnabled(false);
            PLSaveBtn.setEnabled(true);
            PLCancelBtn.setEnabled(true);
    }//GEN-LAST:event_PLChangeBtnActionPerformed

    private void PLNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PLNewBtnActionPerformed
            PLPathTxt.setText("");
        
            PLEnvironmentLst.setEnabled(true);
            PLPathTxt.setEnabled(true);
            PLBrowserLst.setEnabled(true);

            PLNewBtn.setEnabled(false);
            PLChangeBtn.setEnabled(false);
            PLSaveBtn.setEnabled(true);
            PLCancelBtn.setEnabled(true);
    }//GEN-LAST:event_PLNewBtnActionPerformed

    private void PLCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PLCancelBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PLCancelBtnActionPerformed

    private void CatModuleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatModuleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CatModuleTxtActionPerformed

    private void ProdUploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdUploadBtnActionPerformed
        // TODO add your handling code here:
        /*
        JFrame jFrame = new JFrame();
        ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

        String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTeller_ProductMenu.xlsx";
        String UserCode = "";
        String projcode = MainGUI.getProjectCode();
        String WorkSheetName = "";
        String TblName = "PRODUCT_MENUMAP";
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_All_TDDUser_ByProjCode(?)}");
            cStmt.setNString(1, projcode);
            ResultSet rs = cStmt.executeQuery();
            
            while(rs.next()){
                
                //[ID] = TU.ID,
                //[PROJ_CODE] = TU.PROJECT_CODE,
                //[CODE] = TU.USER_CODE,
                //[NAME] = TU.USER_NAME,
                //[TYPE] = TU.USER_TYPE,
                //[FIELD_LOGIN] = TU.FIELD_LOGIN,
                //[LOGIN] = TU.APP_LOGIN,
                //[FIELD_PASSWORD] = TU.FIELD_PASSWORD,
                //[PASSWORD] = TU.APP_PASSWORD                
                
                String ProjCode = rs.getNString("PROJ_CODE");
                UserCode = rs.getNString("CODE");
                WorkSheetName = UserCode;
                
                excelObj.UploadProductMenuMap(FileName, WorkSheetName, UserCode, ProjCode, TblName);                            
            }
           
            cStmt.close();
            conn.close();
            JOptionPane.showConfirmDialog(jFrame, "Product Menu Map - Upload Complete", "Maintenance - Product Menu Map", JOptionPane.OK_OPTION);
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage); 
                 JOptionPane.showConfirmDialog(jFrame, errMessage, "Maintenance - Product Menu Map", JOptionPane.ERROR_MESSAGE);
        }
        */
        
        JFrame jFrame = new JFrame();
        ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

        //String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTeller_ProductMenu.xlsx";
        
        String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\CBGMaker_ProductMenu.xlsx";
        String projcode = MainGUI.getProjectCode();
        String worksheetname = "";
        String TblName = "PRODUCT_MENUMAP";        
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Select_TDDUserCatMenuMapGrpMenuMap_ByProjCode(?)}");
            
            cStmt.setNString(1, projcode);
            ResultSet rs = cStmt.executeQuery();
            
            while(rs.next()){
                //[PROJCODE] = PM.PROJ_CODE,
                //[USERCODE] = PM.USER_CODE,
                //[GROUPID] = CM.GROUP_ID          

                //String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(1);
                String UserCode = rs.getNString(2);
                String GroupId = rs.getNString(3);
                
                excelObj.UploadProductMenuMap(FileName, GroupId, UserCode, ProjCode, TblName);    
                
            }
            cStmt.close();
            conn.close();
            
            JOptionPane.showConfirmDialog(jFrame, "Product Menu Map - Upload Complete", "Maintenance - Product Menu Map", JOptionPane.OK_OPTION);            
            
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage); 
                 JOptionPane.showConfirmDialog(jFrame, errMessage, "Maintenance - Product Menu Map", JOptionPane.ERROR_MESSAGE);                   
        }        

    }//GEN-LAST:event_ProdUploadBtnActionPerformed

    private void CatUploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatUploadBtnActionPerformed
        // TODO add your handling code here:
        /*
        JFrame jFrame = new JFrame();
        ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

        String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTeller_ProductMenu.xlsx";
        String projcode = MainGUI.getProjectCode();
        String worksheetname = "";
        String TblName = "CATEGORY_MENUMAP";
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Select_TDDUserProductMenuMap_ByProjCode(?)}");
            
            cStmt.setNString(1, projcode);
            ResultSet rs = cStmt.executeQuery();
            
            while(rs.next()){
                //[ID]
                //[PROJCODE] = TU.PROJECT_CODE,
                //[USERCODE] = TU.USER_CODE,
                //[CATEGORYID] = PM.CATEGORY_ID                
                
                String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(2);
                String UserCode = rs.getNString(3);
                String CategoryId = rs.getNString(4);
                
                excelObj.UploadProductMenuMap(FileName, CategoryId, UserCode, ProjCode, TblName);    
                
            }
            cStmt.close();
            conn.close();
            
            JOptionPane.showConfirmDialog(jFrame, "Category Menu Map - Upload Complete", "Maintenance - Category Menu Map", JOptionPane.OK_OPTION);
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage); 
                 JOptionPane.showConfirmDialog(jFrame, errMessage, "Maintenance - Product Menu Map", JOptionPane.ERROR_MESSAGE);            
        }
        */

        JFrame jFrame = new JFrame();
        ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

        //String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTeller_ProductMenu.xlsx";
        String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\CBGMaker_ProductMenu.xlsx";
        String UserCode = "";
        String projcode = MainGUI.getProjectCode();
        String WorkSheetName = "";
        String TblName = "CATEGORY_MENUMAP";
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_All_TDDUser_ByProjCode(?)}");
            cStmt.setNString(1, projcode);
            ResultSet rs = cStmt.executeQuery();
            
            while(rs.next()){
                
                //[ID] = TU.ID,
                //[PROJ_CODE] = TU.PROJECT_CODE,
                //[CODE] = TU.USER_CODE,
                //[NAME] = TU.USER_NAME,
                //[TYPE] = TU.USER_TYPE,
                //[FIELD_LOGIN] = TU.FIELD_LOGIN,
                //[LOGIN] = TU.APP_LOGIN,
                //[FIELD_PASSWORD] = TU.FIELD_PASSWORD,
                //[PASSWORD] = TU.APP_PASSWORD                
                
                String ProjCode = rs.getNString("PROJ_CODE");
                UserCode = rs.getNString("CODE");
                WorkSheetName = UserCode;
                
                excelObj.UploadProductMenuMap(FileName, WorkSheetName, UserCode, ProjCode, TblName);                            
            }
           
            cStmt.close();
            conn.close();
            JOptionPane.showConfirmDialog(jFrame, "Category Menu Map - Upload Complete", "Maintenance - Category Menu Map", JOptionPane.OK_OPTION);
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage); 
                 JOptionPane.showConfirmDialog(jFrame, errMessage, "Maintenance - Category Menu Map", JOptionPane.ERROR_MESSAGE);
        }        
        
        
        
    }//GEN-LAST:event_CatUploadBtnActionPerformed

    private void GrpUploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrpUploadBtnActionPerformed
        // TODO add your handling code here:
        /*
        JFrame jFrame = new JFrame();
        ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

        String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTeller_ProductMenu.xlsx";
        String projcode = MainGUI.getProjectCode();
        String worksheetname = "";
        String TblName = "GROUP_MENUMAP";        
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Select_TDDUserProductMenuMapCategoryMap_ByProjCode(?)}");
            
            cStmt.setNString(1, projcode);
            ResultSet rs = cStmt.executeQuery();
            
            while(rs.next()){
                //[PROJCODE] = PM.PROJ_CODE,
                //[USERCODE] = PM.USER_CODE,
                //[GROUPID] = CM.GROUP_ID          

                //String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(1);
                String UserCode = rs.getNString(2);
                String GroupId = rs.getNString(3);
                
                excelObj.UploadProductMenuMap(FileName, GroupId, UserCode, ProjCode, TblName);    
                
            }
            cStmt.close();
            conn.close();
            
            JOptionPane.showConfirmDialog(jFrame, "Group Menu Map - Upload Complete", "Maintenance - Group Menu Map", JOptionPane.OK_OPTION);            
            
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage); 
                 JOptionPane.showConfirmDialog(jFrame, errMessage, "Maintenance - Product Menu Map", JOptionPane.ERROR_MESSAGE);                   
        }
        */

        JFrame jFrame = new JFrame();
        ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

        //String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTeller_ProductMenu.xlsx";
        String FileName = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\CBGMaker_ProductMenu.xlsx";
        String projcode = MainGUI.getProjectCode();
        String worksheetname = "";
        String TblName = "GROUP_MENUMAP";
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Select_TDDUserCatMenuMap_ByProjCode(?)}");
            
            cStmt.setNString(1, projcode);
            ResultSet rs = cStmt.executeQuery();
            
            while(rs.next()){
                //[ID]
                //[PROJCODE] = TU.PROJECT_CODE,
                //[USERCODE] = TU.USER_CODE,
                //[CATEGORYID] = PM.CATEGORY_ID                
                
                //String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(1);
                String UserCode = rs.getNString(2);
                String CategoryId = rs.getNString(3);
                
                excelObj.UploadProductMenuMap(FileName, CategoryId, UserCode, ProjCode, TblName);    
                
            }
            cStmt.close();
            conn.close();
            
            JOptionPane.showConfirmDialog(jFrame, "Group Menu Map - Upload Complete", "Maintenance - Group Menu Map", JOptionPane.OK_OPTION);
        }
        catch(Exception ex){
                String errMessage = null;

                 errMessage = "Error Message: " + ex.getMessage() + 
                    "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                    "\n" + "Stack Trace: " + ex.getStackTrace() + 
                    "\n" + "Cause: " + ex.getCause();
                 
                 System.out.println(errMessage); 
                 JOptionPane.showConfirmDialog(jFrame, errMessage, "Maintenance - Group Menu Map", JOptionPane.ERROR_MESSAGE);            
        }
        
    }//GEN-LAST:event_GrpUploadBtnActionPerformed

    private void tcNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcNewBtnActionPerformed
        // TODO add your handling code here:
        TestCaseIdTxt.setEnabled(true);
        TestCaseDescTxt.setEnabled(true);
        StatusCodeCmb.setEnabled(true);
        
        TestCaseIdTxt.setText("null");
        TestCaseDescTxt.setText("null");
        
        tcNewBtn.setEnabled(false);
        //tcDeleteBtn.setEnabled(false);
        tcChangeBtn.setEnabled(false);
        tcSaveBtn.setEnabled(true);
        tcCancelBtn.setEnabled(true);
               
    }//GEN-LAST:event_tcNewBtnActionPerformed

    private void tcSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcSaveBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        int RecordId = 0;
        String ProjCode = ProjCodeTxt.getText();
        String TestCaseId = TestCaseIdTxt.getText();
        String TestCaseDesc = TestCaseDescTxt.getText();
        String IterationFlag = "N";
        String ExecuteFlag = "N";
        String ResultFlag = "null";
        int TestCycle = 0;
        int TestRun = 0;
        String Remarks = "null";
        String RCA = "null";
        String UserId = "null";
        String Status = StatusCodeCmb.getSelectedItem().toString();
        
        boolean resultflag = false;
        boolean recordflag = validateDeclaredTestCase(ProjCode, TestCaseId);
        if(recordflag == false){
            //Insert Mode
            /*
            @proj_code NVARCHAR(20),
            @testcaseid NVARCHAR(12),
            @testcasedescription NVARCHAR(100),
            @iteration NVARCHAR(1),
            @executeflag NVARCHAR(1),
            @resultflag NVARCHAR(6),
            @test_cycle INT,
            @test_run INT,
            @remarks TEXT,
            @rca TEXT,
            @userid NVARCHAR(8)            
            */
            resultflag = InsertNewTestCase(ProjCode, TestCaseId, TestCaseDesc, IterationFlag, ExecuteFlag, ResultFlag, TestCycle, TestRun, Remarks, RCA, UserId, Status);
        }
        else{
            //Update Mode
            /*
            @id INT,
            @proj_code NVARCHAR(20),
            @testcaseid NVARCHAR(12),
            @testcasedescription NVARCHAR(100),
            @iteration NVARCHAR(1),
            @executeflag NVARCHAR(1),
            @resultflag NVARCHAR(6),
            @test_cycle INT,
            @test_run INT,
            @remarks TEXT,
            @rca TEXT            
            */
            RecordId = Integer.parseInt(tcRecordIdTxt.getText());
            resultflag = UpdateExistingTestCase(RecordId, ProjCode, TestCaseId, TestCaseDesc, IterationFlag, ExecuteFlag, ResultFlag, TestCycle, TestRun, Remarks, RCA, Status);
            
        }
        
        if(resultflag){
            JOptionPane.showMessageDialog(jFrame, "Test Case has been successfully saved", "Declared Test Case - Maintenance", JOptionPane.INFORMATION_MESSAGE);
            loadDeclaredTestCasesTbl(ProjCode);
            TestCasePanelDefaultSettings();
        }
        else{
            JOptionPane.showMessageDialog(jFrame, "Test Case saving failed", "Declared Test Case - Maintenance", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_tcSaveBtnActionPerformed

    private void StatusCodeCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusCodeCmbActionPerformed
        // TODO add your handling code here:
        String StatusCode = StatusCodeCmb.getSelectedItem().toString();
        switch (StatusCode){
            case "A":
                StatusDescTxt.setText("Active");
                break;
                
            case "I":
                StatusDescTxt.setText("Inactive");
                break;
        }
    }//GEN-LAST:event_StatusCodeCmbActionPerformed

    private void DeclaredTestCaseTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeclaredTestCaseTblMousePressed
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            JFrame jFrame = new JFrame();
            int indexRow = DeclaredTestCaseTbl.getSelectedRow();
            DefaultTableModel tblmodel = (DefaultTableModel)DeclaredTestCaseTbl.getModel();
            //{"ID","Test Case ID", "Test Case Description", "Iteration", "Execute", "Result", "Test Cycle", "Test Run", "Remarks", "RCA", "Status"}
            String RecordId = tblmodel.getValueAt(indexRow, 0).toString();
            String TestCaseId = tblmodel.getValueAt(indexRow, 1).toString();
            String TestCaseDesc = tblmodel.getValueAt(indexRow, 2).toString();
            String StatusCode = tblmodel.getValueAt(indexRow, 10).toString();
            
            tcRecordIdTxt.setText(RecordId);
            TestCaseIdTxt.setText(TestCaseId);
            TestCaseDescTxt.setText(TestCaseDesc);
            StatusCodeCmb.setSelectedItem(StatusCode);
            
            tcNewBtn.setEnabled(false);
            tcChangeBtn.setEnabled(true);
            tcSaveBtn.setEnabled(false);
            tcCancelBtn.setEnabled(true);
            
        }
    }//GEN-LAST:event_DeclaredTestCaseTblMousePressed

    private void tcChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcChangeBtnActionPerformed
        // TODO add your handling code here:
            //tcRecordIdTxt.setText(RecordId);
            TestCaseIdTxt.setEnabled(false);
            TestCaseDescTxt.setEnabled(true);
            StatusCodeCmb.setEnabled(true);
            
            tcNewBtn.setEnabled(false);
            tcChangeBtn.setEnabled(false);
            tcSaveBtn.setEnabled(true);
            tcCancelBtn.setEnabled(true);
    }//GEN-LAST:event_tcChangeBtnActionPerformed

    private void tcCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcCancelBtnActionPerformed
        // TODO add your handling code here:
        TestCasePanelDefaultSettings();
    }//GEN-LAST:event_tcCancelBtnActionPerformed

    private void TestCaseDescTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestCaseDescTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TestCaseDescTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MaintenanceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MaintenanceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MaintenanceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MaintenanceGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MaintenanceGUI().setVisible(true);
            }
        });
        
        //new MaintenanceGUI().defaultdisabledobjects();
        //new MaintenanceGUI().loadProjectAppTbl();
        
    }

    public void defaultdisabledobjects(){
        ProjCodeTxt.setEnabled(false);
        ProjDescTxt.setEnabled(false);
        
        Proj_ProjectCodeTxt.setEnabled(true);
        Proj_ProjectNameTxt.setEnabled(false);
        Proj_ProjectPlatformList.setEnabled(false);
        
        Proj_NewBtn.setEnabled(true);
        Proj_ChangeBtn.setEnabled(false);
        Proj_SaveBtn.setEnabled(false);
        Proj_CancelBtn.setEnabled(false);
        //Proj_ProjectAppTbl.setEnabled(false);       
        
        Mod_IdTxt.setEnabled(false);
        Mod_ProjCodeTxt.setEnabled(true);
        Mod_ModuleCodeTxt.setEnabled(true);
        Mod_ModuleNameTxt.setEnabled(false);
        
        Mod_NewBtn.setEnabled(true);
        Mod_ChangeBtn.setEnabled(false);
        Mod_SaveBtn.setEnabled(false);
        Mod_CancelBtn.setEnabled(false);
        
        UserCodeTxt.setEnabled(true);
        UserNameTxt.setEnabled(false);
        //UserTypeLst.setEnabled(false);
        UserTypeCmb.setEnabled(false);
        
        UserNewBtn.setEnabled(true);
        UserChangeBtn.setEnabled(false);
        UserSaveBtn.setEnabled(false);
        UserCancelBtn.setEnabled(false);
        
        MenuUserCodeLst.setEnabled(true);
        MenuMainCodeTxt.setEnabled(true);
        MenuSubCodeTxt.setEnabled(false);
        MenuChildCodeTxt.setEnabled(false);
        MenuPageModuleTxt.setEnabled(false);
        MenuPageFieldTxt.setEnabled(false);
        MenuElementIdTxt.setEnabled(false);
        MenuElementXpathTxt.setEnabled(false);
        MenuElementTypeLst.setEnabled(false);
        MenuElementActionLst.setEnabled(false);
        
        MenuNewBtn.setEnabled(true);
        MenuChangeBtn.setEnabled(false);
        MenuSaveBtn.setEnabled(false);
        MenuCancelBtn.setEnabled(false);
        
        //Project Function
        PFIdLbl.setVisible(false);
        PFuncCodeTxt.setEnabled(false);
        PFuncNameTxt.setEnabled(false);
        PFuncCodeTxt.setText("");
        PFuncNameTxt.setText("");

        PFuncNameTxt.setEnabled(false);
        
        PFuncNewBtn.setEnabled(true);
        PFuncChangeBtn.setEnabled(false);
        PFuncSaveBtn.setEnabled(false);
        PFuncCancelBtn.setEnabled(false);
        
        
        //Field Mapping
        FMFunctionCodeLst.setEnabled(false);
        FMModuleCodeLst.setEnabled(false);
        FMSubmoduleCodeLst.setEnabled(false);
        FMFieldIdTxt.setEnabled(false);
        FMFieldNameTxt.setEnabled(false);
        FMElementIdTxt.setEnabled(false);
        FMElementXpathTxt.setEnabled(false);
        FMElementTypeLst.setEnabled(false);
        FMElementActionLst.setEnabled(false);
        
        FMNewBtn.setEnabled(true);
        FMChangeBtn.setEnabled(false);
        FMSaveBtn.setEnabled(false);
        FMCancelBtn.setEnabled(false);
        
        //Project Location
        PLEnvironmentLst.setEnabled(true);
        PLPathTxt.setEnabled(false);
        PLBrowserLst.setEnabled(false);

        PLNewBtn.setEnabled(true);
        PLChangeBtn.setEnabled(false);
        PLSaveBtn.setEnabled(false);
        PLCancelBtn.setEnabled(false);
        
        //Test Cases
        TestCaseIdTxt.setEnabled(false);
        TestCaseDescTxt.setEnabled(false);
        StatusCodeCmb.setEnabled(false);
        
    }
    
    public void loadProjectAppTbl_ProjectApp(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectApp()}");
            ResultSet rs = cStmt.executeQuery();
            
            //Initialize
            Proj_ProjectAppTbl.setModel(new DefaultTableModel(null, new String[] {"Project ID", "Project Code", "Project Name", "Project Platform" }));
            
            while(rs.next())
            {
                //int ProjID = rs.getInt("ID");
                String ProjID = NumberToTextConverter.toText(rs.getInt("ID"));
                String ProjCode = rs.getString("CODE");
                String ProjName = rs.getString("Name");
                String ProjPlatform = rs.getString("PLATFORM");

               //ArrayList<String> tbData = {ProjID, ProjCode, ProjName, ProjPlatform};
                
               String[] tbData = {ProjID, ProjCode, ProjName, ProjPlatform};
               DefaultTableModel tblModel = (DefaultTableModel)Proj_ProjectAppTbl.getModel();
               
               tblModel.addRow(tbData); 
            }
             cStmt.close();
             conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Project Apps Table Failed " + 
                               "\n" + errMessage, "Maintenance - Project Apps", 0);
        }
    }
    
    public void loadModule_ProjectList_Module() {
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectApp()}");
            ResultSet rs = cStmt.executeQuery();
            
            //DefaultListModel listModel = (DefaultListModel)Mod_ProjCodeLst.getModel();
            DefaultListModel model = new DefaultListModel();
            
            while(rs.next()){
                String projid = NumberToTextConverter.toText(rs.getInt("ID"));
                String projcode = rs.getString("CODE");
                String projname = rs.getString("NAME");
                
                model.addElement(projcode);
            }
            
           //Mod_ProjCodeLst.setModel(model);
            cStmt.close();
            conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Project List Failed " + 
                               "\n" + errMessage, "Maintenance - Module", 0);
        }
    }
    
    public void loadModuleTbl_Module() {
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectModules()}");
                ResultSet rs =  cStmt.executeQuery();
                
                //Initialize
                Mod_ModuleTbl.setModel(new DefaultTableModel(null, new String[] {"Module ID","Project Code","Module Code","Module Name"}));

                while(rs.next()){
                        String modid = NumberToTextConverter.toText(rs.getInt("ID"));
                        String projcode = rs.getNString("PCODE");
                        String modcode = rs.getNString("MCODE");
                        String modname = rs.getNString("MNAME");
                 
                        String[] tblArray = {modid, projcode, modcode, modname};
                        DefaultTableModel tblmodel = (DefaultTableModel)Mod_ModuleTbl.getModel();
                        
                        tblmodel.addRow(tblArray);
                }
                cStmt.close();
                conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Module Table Failed " + 
                               "\n" + errMessage, "Maintenance - Module", 0);
        }
        
    }
    
    public void loadUser_ProjectLst_User() {
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectApp()}");
                ResultSet rs = cStmt.executeQuery();
                
                DefaultListModel model = new DefaultListModel();

                while(rs.next()){
                    String projid = NumberToTextConverter.toText(rs.getInt("ID"));
                    String projcode = rs.getString("CODE");
                    String projname = rs.getString("NAME");

                    model.addElement(projcode);
                }

               //Mod_ProjCodeLst.setModel(model);
               //UserProjCodeLst.setModel(model);
                cStmt.close();
                conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading User list Failed " + 
                               "\n" + errMessage, "Maintenance - User", 0);
        }

    }

    public void loadUserTbl_User(){
        JFrame jFrame = new JFrame();
         try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_All_TDDUser()}");
                ResultSet rs =  cStmt.executeQuery();
                
                //Initialize
                UserTbl.setModel(new DefaultTableModel(null, new String[] {"User ID","Project Code","User Code","User Name", "User Type", "Field Login", "Login", "Field Password", "Password"}));
               
                while(rs.next()){
                    
                    /*
                    [ID] = TU.ID,
                    [PROJ_CODE] = TU.PROJECT_CODE,
                    [CODE] = TU.USER_CODE,
                    [NAME] = TU.USER_NAME,
                    [TYPE] = TU.USER_TYPE,
                    [FIELD_LOGIN] = TU.FIELD_LOGIN,
                    [LOGIN] = TU.APP_LOGIN,
                    [FIELD_PASSWORD] = TU.FIELD_PASSWORD,
                    [PASSWORD] = TU.APP_PASSWORD
                    */
                        String userid = NumberToTextConverter.toText(rs.getInt("ID"));
                        String projcode = rs.getNString("PROJ_CODE");
                        String usercode = rs.getNString("CODE");
                        String username = rs.getNString("NAME");
                        String usertype = rs.getNString("TYPE");
                        String fieldlogin = rs.getNString("FIELD_LOGIN");
                        String login = rs.getNString("LOGIN");
                        String fieldpassword = rs.getNString("FIELD_PASSWORD");
                        String password = rs.getNString("PASSWORD");
                        
                        String[] tblArray = {userid, projcode, usercode, username, usertype, fieldlogin, login, fieldpassword, password};
                        DefaultTableModel tblmodel = (DefaultTableModel)UserTbl.getModel();
                        
                        tblmodel.addRow(tblArray);
                }
                cStmt.close();
                conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading User list Failed " + 
                               "\n" + errMessage, "Maintenance - User", 0);
        }

    }
    
    public void loadMenuTbl_Menu(){
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_UserMenuMap_All()}");
                MenuTbl.setModel(new DefaultTableModel(null, new String[] {"ID", "User Code", "Main Code", "Sub Code", "Child Code","Page Module","Page Field","Element ID", "Element Xpath", "Element Type", "Element Action"}));
                
                ResultSet rs = cStmt.executeQuery();
                while(rs.next()){
                        /*
                            [ID] = MAP.ID,
                            [USERCODE] = MAP.USER_CODE,
                            [MAINCODE] = MAP.MAIN_CODE,
                            [SUBCODE] = MAP.SUB_CODE,
                            [CHILDCODE] = MAP.CHILD_CODE,
                            [MODULE] = MAP.PAGE_MODULE,
                            [FIELD] = MAP.PAGE_FIELD,
                            [ELEMENTID] = MAP.ELEMENT_ID,
                            [ELEMENTXPATH] = MAP.ELEMENT_XPATH,
                            --[LINK] = MAP.LINK_VALUE,
                            --[URL] = MAP.PAGE_URL,
                            --[TITLE] = MAP.PAGE_TITLE,
                            [ELEMENTTYPE] = MAP.ELEMENT_TYPE,
                            --[ELEMENTVALUE] = MAP.ELEMENT_VALUE,
                            [ELEMENTACTION] = MAP.ELEMENT_ACTION,
                            --[MENUREF] = MAP.MENU_REFERENCE,
                            --[WORKSHEETREF] = MAP.WORKSHEET_REFERENCE,
                            --[FIELDREF] = MAP.FIELD_REFERENCE,
                            --[ELEMENTMSG] = MAP.ELEMENT_MESSAGE,
                            --[ELEMENTRESULT] = MAP.ELEMENT_RESULT
                        */
                        
                        String id = NumberToTextConverter.toText(rs.getInt("ID"));
                        String usercode = rs.getNString("USERCODE");
                        String maincode = rs.getNString("MAINCODE");
                        String subcode = rs.getNString("SUBCODE");
                        String childcode = rs.getNString("CHILDCODE");
                        String module = rs.getNString("MODULE");
                        String field = rs.getNString("FIELD");
                        String elementid = rs.getNString("ELEMENTID");
                        String elementxpath = rs.getNString("ELEMENTXPATH");
                        String link = rs.getNString("LINK");
                        String url = rs.getNString("URL");
                        String title = rs.getNString("TITLE");
                        String elementtype = rs.getNString("ELEMENTTYPE");
                        String elementvalue = rs.getNString("ELEMENTVALUE");
                        String elementaction = rs.getNString("ELEMENTACTION");
                        String menuref = rs.getNString("MENUREF");
                        String worksheetref = rs.getNString("WORKSHEETREF");
                        String fieldref = rs.getNString("FIELDREF");
                        String elementmsg = rs.getNString("ELEMENTMSG");
                        String elementresult = rs.getNString("ELEMENTRESULT");
                        
                        String[] tblArray = {id, usercode, maincode, subcode, childcode, module, field, elementid, elementxpath, elementtype, elementaction};
                        DefaultTableModel tblmodel = (DefaultTableModel)MenuTbl.getModel();
                        tblmodel.addRow(tblArray);
                        
                }
                cStmt.close();
                conn.close();
                
        }
        catch(Exception ex){
                 String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading User list Failed " + 
                               "\n" + errMessage, "Maintenance - Menu", 0);
        }
    }
    
    public void loadUserCodeLst_Menu(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_All_TDDUser()}");
            ResultSet rs = cStmt.executeQuery();
            
            //DefaultListModel listModel = (DefaultListModel)Mod_ProjCodeLst.getModel();
            DefaultListModel model = new DefaultListModel();
            
            while(rs.next()){
                /*
                    [ID] = TU.ID,
                    [PROJ_CODE] = TU.PROJECT_CODE,
                    [CODE] = TU.USER_CODE,
                    [NAME] = TU.USER_NAME,
                    [TYPE] = TU.USER_TYPE
                */
                String projid = NumberToTextConverter.toText(rs.getInt("ID"));
                String projcode = rs.getString("PROJ_CODE");
                String usercode = rs.getString("CODE");
                String username = rs.getNString("NAME");
                String usertype = rs.getNString("TYPE");
                
                model.addElement(usercode);
            }
            MenuUserCodeLst.setModel(model);
            cStmt.close();
            conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading User list Failed " + 
                               "\n" + errMessage, "Maintenance - Menu", 0);
        }
    }
    
    public void loadProjModuleLst_FieldMap(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_ProjectModule_ByProjCode(?)}");
            //String globalProjectCode = MtProjCodeLbl.getText();
            String globalProjectCode = ProjCodeTxt.getText();
            
            cStmt.setNString(1, globalProjectCode);
            ResultSet rs = cStmt.executeQuery();
            DefaultListModel model = new DefaultListModel();
            while(rs.next()){
                /*
                    [ID] = PM.ID,
                    [PCODE] = PM.PROJECT_CODE,
                    [MCODE] = PM.MODULE_CODE,
                    [MNAME] = PM.MODULE_NAME
                */
                String modcode = rs.getNString("MCODE");
                model.addElement(modcode);
            }
            FMModuleCodeLst.setModel(model);
            cStmt.close();
            conn.close();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Project Module list Failed " + 
                               "\n" + errMessage, "Maintenance - Field Map", 0);
        }
    }
    
    public void loadProjFunctionTbl_ProjFunction(){
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectFunction()}");
                    /*
                    [ID] = PF.ID,
                    [PCODE] = PF.PROJECT_CODE,
                    [FCODE] = PF.FUNCTION_CODE,
                    [FNAME] = PF.FUNCTION_NAME
                    */
                    ResultSet rs = cStmt.executeQuery();
                    DefaultTableModel model = new DefaultTableModel();
                    
                    PFuncTbl.setModel(new DefaultTableModel(null, new String[]{"ID", "FUNCTION CODE", "FUNCITON NAME"}));
                    
                    while(rs.next()){
                            String id = NumberToTextConverter.toText(rs.getInt("ID"));
                            String pcode = rs.getNString("PCODE");
                            String fcode = rs.getNString("FCODE");
                            String fname = rs.getNString("FNAME");
                            
                            String[] tblArray = {id, fcode, fname};
                            DefaultTableModel tblmodel = (DefaultTableModel)PFuncTbl.getModel();
                            tblmodel.addRow(tblArray);
                    }
                    
                    cStmt.close();
                    conn.close();
                    
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Project Module list Failed " + 
                                   "\n" + errMessage, "Maintenance - Field Map", 0);
            }
    }
    
    public void loadFieldMapTbl_FieldMapping(){
            JFrame jFrame = new JFrame();
            try{
                    /*
                    TableColumnModel tcm = FieldMappingTbl.getColumnModel();
                    tcm.getColumn(0).setPreferredWidth(5); //ID
                    tcm.getColumn(1).setPreferredWidth(10); //FCODE
                    tcm.getColumn(2).setPreferredWidth(50); //MODULE
                    tcm.getColumn(3).setPreferredWidth(50); //SUBMODULE
                    tcm.getColumn(4).setPreferredWidth(10); //FIELDID
                    tcm.getColumn(5).setPreferredWidth(30); //FIELDNAME
                    tcm.getColumn(6).setPreferredWidth(50); //ELEMENTID
                    tcm.getColumn(7).setPreferredWidth(50); //ELEMENTXPATH
                    tcm.getColumn(8).setPreferredWidth(30); //ELEMENTTYPE
                    tcm.getColumn(9).setPreferredWidth(30); //ELEMENTXPATH
                    */
                    
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_AllFieldMap()}");
                    ResultSet rs = cStmt.executeQuery();
                    
                    DefaultTableModel model = new DefaultTableModel();
                    FieldMappingTbl.setModel(new DefaultTableModel(null, new String[]{"ID", "Function", "Module", "Sub module", "Field ID", "Field Name","Element ID","Element XPath", "Element Type", "Element Action"}));

                    /*
                    [ID] = FM.ID,
                    [FCODE] = FM.FUNCTION_CODE,
                    [MODULE] = FM.MODULE,
                    [SUBMODULE] = FM.SUBMODULE,
                    [FIELDID] = FM.FIELD_ID,
                    [FIELDNAME] = FM.FIELD_NAME,
                    [ELEMENTID] = FM.FIELD_ELEMENTID,
                    [ELEMENTXPATH] = FM.FIELD_ELEMENTXPATH,
                    [ELEMENTTYPE] = FM.ELEMENT_TYPE,
                    [ELEMENTACTION] = FM.ELEMENT_ACTION
                    */
                    
                    String id = "";
                    String fcode = "";
                    String module = "";
                    String submodule = "";
                    String fieldid = "";
                    String fieldname = "";
                    String elementid = "";
                    String elementxpath = "";
                    String elementtype = "";
                    String elementaction = "";
                    
                    while(rs.next()){
                        id = NumberToTextConverter.toText(rs.getInt("ID"));
                        fcode = rs.getNString("FCODE");
                        module = rs.getNString("MODULE");
                        submodule = rs.getNString("SUBMODULE");
                        fieldid = rs.getNString("FIELDID");
                        fieldname = rs.getNString("FIELDNAME");
                        elementid = rs.getNString("ELEMENTID");
                        elementxpath = rs.getNString("ELEMENTXPATH");
                        elementtype = rs.getNString("ELEMENTTYPE");
                        elementaction = rs.getNString("ELEMENTACTION");
                        
                        String[] tblArray = {id, fcode, module, submodule, fieldid, fieldname, elementid, elementxpath, elementtype, elementaction};
                        DefaultTableModel tblModel = (DefaultTableModel)FieldMappingTbl.getModel();
                        tblModel.addRow(tblArray);
                    }
                    cStmt.close();
                    
                    /*
                    TableColumnModel cModel = FieldMappingTbl.getColumnModel();
                    cModel.getColumn(0).setWidth(5);
                    cModel.getColumn(1).setWidth(10);
                    cModel.getColumn(2).setWidth(50);
                    cModel.getColumn(3).setWidth(50);
                    cModel.getColumn(4).setWidth(10);
                    cModel.getColumn(5).setWidth(30);
                    cModel.getColumn(6).setWidth(50);
                    cModel.getColumn(7).setWidth(50);
                    cModel.getColumn(8).setWidth(30);
                    cModel.getColumn(9).setWidth(30);
                    */
                    
                    //FieldMappingTbl.setEnabled(false);
                    //FieldMappingTbl.setEnabled(false);
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Field Mapping  list Failed " + 
                                   "\n" + errMessage, "Maintenance - Field Map", 0);
            }
    }
    
    public void loadFunctionCodeLst_FieldMapping() {
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_ProjectFunction_ByProjectCode(?)}");
                    //String projcode = MtProjCodeLbl.getText();
                    String projcode = ProjCodeTxt.getText();
                    
                    cStmt.setNString(1, projcode);
                    
                    ResultSet rs = cStmt.executeQuery();
                    DefaultListModel model = new DefaultListModel();        
                    while(rs.next()){
                            /*
         
                            */
                            String id = NumberToTextConverter.toText((rs.getInt("ID")));
                            String  pcode = rs.getNString("PCODE");
                            String fcode = rs.getNString("FCODE");
                            String fname = rs.getNString("FNAME");
                            
                            model.addElement(fcode);
                    }
                    FMFunctionCodeLst.setModel(model);
                    cStmt.close();
                    conn.close();
                    
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Function list Failed " + 
                                   "\n" + errMessage, "Maintenance - Field Map", 0);
            }
    }
            
    public void loadModuleCodeLst_FieldMapping() {
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_ProjectModule_ByProjCode(?)}");
                    //String projcode = MtProjCodeLbl.getText();
                    String projcode = ProjCodeTxt.getText();
                    
                    cStmt.setNString(1, projcode);
                    ResultSet rs = cStmt.executeQuery();
                    DefaultListModel model = new DefaultListModel();
                    while(rs.next()){
                            String id = NumberToTextConverter.toText((rs.getInt("ID")));
                            String pcode = rs.getNString("PCODE");
                            String mcode = rs.getNString("MCODE");
                            String mname = rs.getNString("MNAME");
                            
                            model.addElement(mcode);
                    }
                    FMModuleCodeLst.setModel(model);
                    cStmt.close();
                    conn.close();
                    
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Project Module list Failed " + 
                                   "\n" + errMessage, "Maintenance - Field Map", 0);
            }
            
    }
    
    public void loadSubModuleLst_FieldMapping(String modcode){
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_ProjectSubmodule_ByModuleCode(?)}");
                    //String modcode = FMModuleCodeLst.getSelectedValue();
                    
                    cStmt.setNString(1, modcode);
                    ResultSet rs = cStmt.executeQuery();
                    DefaultListModel model = new DefaultListModel();
                    
                    while(rs.next()){
                            String id = NumberToTextConverter.toText((rs.getInt("ID")));
                            String mcode = rs.getNString("MCODE");
                            String scode = rs.getNString("SCODE");
                            String sname = rs.getNString("SNAME");
                            
                            model.addElement(scode);
                    }
                    FMSubmoduleCodeLst.setModel(model);
                    cStmt.close();
                    conn.close();
                            
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Project Module list Failed " + 
                                   "\n" + errMessage, "Maintenance - Field Map", 0);
            }
    }
    
    public void loadProjectLocationTbl_ProjectLocation(){
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectLocation()}");
                    ResultSet rs = cStmt.executeQuery();
                    
                    DefaultTableModel model = new DefaultTableModel();
                    ProjectLocationTbl.setModel(new DefaultTableModel(null, new String[] {"ID", "Environment", "Path", "Browser" }));
                    
                    while(rs.next()){
                            /*
                            [ID] = PL.ID,
                            [PCODE] = PL.PROJECT_CODE,
                            [ENV] = PL.ENVIRONMENT,
                            [APATH] = PL.APP_PATH,
                            [BROWSER] = PL.BROWSER
                            */
                            String id = NumberToTextConverter.toText(rs.getInt("ID"));
                            String pcode = rs.getNString("PCODE");
                            String env = rs.getNString("ENV");
                            String apath = rs.getNString("APATH");
                            String browser = rs.getNString("BROWSER");
                            
                            String[] arrayTbl = {id, env, apath, browser};
                            DefaultTableModel tblmodel = (DefaultTableModel)ProjectLocationTbl.getModel();
                            tblmodel.addRow(arrayTbl);
                            
                    }
                    cStmt.close();
                    conn.close();
            }
            catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Project Location table Failed " + 
                                   "\n" + errMessage, "Maintenance - Project Location", JOptionPane.ERROR_MESSAGE);
            }
    }
   
    public void loadProductMenuTbl(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_ProductMenuMap_ByProjCode(?)}");
            /*
            @proj_code NVARCHAR(20),
            --@user_code NVARCHAR(20),
            --@category_id NVARCHAR(20)            
            */
            String projcode = "";
            String usercode = "";
            String categoryid = "";
            
            cStmt.setNString(1, projcode);
            //cStmt.setNString(2, usercode);
            //cStmt.setNString(3, categoryid);
            
            ResultSet rs = cStmt.executeQuery();
            
            //DefaultTableModel tblmodel = new DefaultTableModel();
            ProductMenuTbl.setModel(new DefaultTableModel(null, new String[] {"ID", "Project Code", "User Code", "Category ID", "Sub Menu", "Child Menu", "Module", "Field ID", "Element ID", "Element Xpath", "Element Type", "Element Action" }));
            
            while(rs.next()){
                /*
                PM.ID,
                PM.PROJ_CODE,
                PM.USER_CODE,
                PM.CATEGORY_ID,
                PM.SUB_MENUCODE,
                PM.CHILD_MENUCODE,
                PM.MODULE,
                PM.FIELD_ID,
                PM.ELEMENT_ID,
                PM.ELEMENT_XPATH,
                PM.ELEMENT_TYPE,
                PM.ELEMENT_ACTION                
                */
                String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(2);
                String UserCode = rs.getNString(3);
                String CategoryId = rs.getNString(4);
                String SubMenu = rs.getNString(5);
                String ChildMenu = rs.getNString(6);
                String Module = rs.getNString(7);
                String FieldId = rs.getNString(8);
                String ElementId = rs.getNString(9);
                String ElementXpath = rs.getNString(10);
                String ElementType = rs.getNString(11);
                String ElementAction = rs.getNString(12);
                
                String[] arrTbl = {Id, ProjCode, UserCode, CategoryId, SubMenu, ChildMenu, Module, FieldId, ElementId, ElementXpath, ElementType, ElementAction};
                DefaultTableModel model = (DefaultTableModel)ProductMenuTbl.getModel();
                model.addRow(arrTbl);
                
            }
            
            cStmt.close();
            conn.close();
            
        }
        catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Loading Product table Failed " + 
                                   "\n" + errMessage, "Maintenance - Product", 0);            
        }
    }
    
    public void loadCategoryMenuTbl(){
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_CategoryMenuMap_ByProjCode(?)}");
                /*
                @proj_code NVARCHAR(20),
                --@user_code NVARCHAR(20),
                --@category_id NVARCHAR(20),
                --@group_id NVARCHAR(20)                
                */
                
                String projcode = MainGUI.getProjectCode();
                //String usercode = 
                
                CategoryMenuTbl.setModel(new DefaultTableModel(null, new String[] {"ID", "Project Code", "User Code", "Category ID", "Group ID", "Module", "Field ID", "Element ID", "Element Xpath", "Element Type", "Element Action"}));
                ResultSet rs = cStmt.executeQuery();
                /*
                CM.ID,
                CM.PROJ_CODE,
                CM.USER_CODE,
                CM.CATEGORY_ID,
                CM.GROUP_ID,
                CM.MODULE,
                CM.FIELD_ID,
                CM.ELEMENT_ID,
                CM.ELEMENT_XPATH,
                CM.ELEMENT_TYPE,
                CM.ELEMENT_ACTION                
                */
                while(rs.next()){
                    String Id = NumberToTextConverter.toText(rs.getInt(1));
                    String ProjCode = rs.getNString(2);
                    String UserCode = rs.getNString(3);
                    String CategoryId = rs.getNString(4);
                    String GroupId = rs.getNString(5);
                    String Module = rs.getNString(6);
                    String FieldId = rs.getNString(7);
                    String ElementId = rs.getNString(8);
                    String ElementXpath = rs.getNString(9);
                    String ElementType = rs.getNString(10);
                    String ElementAction = rs.getNString(11);
                    
                    String[] arrTbl = {Id, ProjCode, UserCode, CategoryId, GroupId, Module, FieldId, ElementId, ElementXpath, ElementType, ElementAction};
                    DefaultTableModel model = (DefaultTableModel)CategoryMenuTbl.getModel();
                    model.addRow(arrTbl);
                }

                cStmt.close();
                conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Product Category table Failed " + 
                               "\n" + errMessage, "Maintenance - Product Category", 0);            
        }
        
    }
    
    public void loadGroupMenuTbl(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_GroupMenuMap_ByProjCode(?)}");
            String projcode = MainGUI.getProjectCode();
            cStmt.setNString(1, projcode);
            
            GroupMenuTbl.setModel(new DefaultTableModel(null, new String[] {"ID", "Project Code", "User Code", "Group ID", "Menu Code", "Module", "Field ID", "Element ID", "Element Xpath","Element Type", "Element Action"}));
            
            ResultSet rs = cStmt.executeQuery();
            /*
            ID
            PROJ_CODE,
            USER_CODE,
            GROUP_ID,
            GRPMENU_CODE,
            MODULE,
            FIELD_ID,
            ELEMENT_ID,
            ELEMENT_XPATH,
            ELEMENT_TYPE,
            ELEMENT_ACTION
            */
            
            while(rs.next()){
                String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(2);
                String UserCode = rs.getNString(3);
                String GroupId = rs.getNString(4);
                String GrpMenuCode = rs.getNString(5);
                String Module = rs.getNString(6);
                String FieldId = rs.getNString(7);
                String ElementId = rs.getNString(8);
                String ElementXpath = rs.getNString(9);
                String ElementType = rs.getNString(10);
                String ElementAction = rs.getNString(11);
                
                String[] arrTbl = {Id, ProjCode, UserCode, GroupId, GrpMenuCode, Module, FieldId, ElementId, ElementXpath, ElementType, ElementAction};
                DefaultTableModel model = (DefaultTableModel)GroupMenuTbl.getModel();
                model.addRow(arrTbl);
                
            }
            cStmt.close();
            conn.close();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Product Group table Failed " + 
                               "\n" + errMessage, "Maintenance - Product Group", 0);            
        }
    }
    
    public void Mod_ChangeEnabled(){
        Mod_NewBtn.setEnabled(false);
        Mod_ChangeBtn.setEnabled(true);
        Mod_SaveBtn.setEnabled(false);
        Mod_CancelBtn.setEnabled(true);
    }
    
    public void loadDeclaredTestCasesTbl(String givenProjCode){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_AllTestCases_ByUserIdNull(?)}");
            cs.setNString(1, givenProjCode);
            
            DeclaredTestCaseTbl.setModel(new DefaultTableModel(null, new String[] {"ID","Test Case ID", "Test Case Description", "Iteration", "Execute", "Result", "Test Cycle", "Test Run", "Remarks", "RCA", "Status"}));
            ResultSet rs = cs.executeQuery();
            while(rs.next()){
                            String id = NumberToTextConverter.toText(rs.getInt("ID"));
                            String tcid = rs.getNString("TCID");
                            String tcdesc = rs.getNString("TCDESC");
                            String iteration = rs.getNString("ITERATION");
                            String execute = rs.getNString("EXECUTE");
                            String result = rs.getNString("RESULT");
                            String cycle = NumberToTextConverter.toText(rs.getInt("TESTCYCLE"));
                            String run = NumberToTextConverter.toText(rs.getInt("TESTRUN"));
                            String remarks = "null";
                            if(rs.getString("REMARKS") != null){
                               remarks =  rs.getString("REMARKS");
                            }
                            
                            String rca = "null";
                            if(rs.getString("RCA") != null){
                                rca = rs.getString("RCA");
                            };
                            
                            String statuscode = rs.getNString("STATUSCODE");

                            String[] tbldata = {id,tcid, tcdesc, iteration, execute, result, cycle, run, remarks, rca, statuscode};
                            DefaultTableModel tblmodel = (DefaultTableModel)DeclaredTestCaseTbl.getModel();
                            tblmodel.addRow(tbldata);
                    }
                    
                    rs.close();
                    cs.close();
                    conn.close();
                    
                    DeclaredTestCaseTbl.getColumnModel().getColumn(0).setPreferredWidth(40);
                    DeclaredTestCaseTbl.getColumnModel().getColumn(1).setPreferredWidth(100);
                    DeclaredTestCaseTbl.getColumnModel().getColumn(2).setPreferredWidth(200);          
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Declared Test Cases Failed " + 
                               "\n" + errMessage, "Maintenance - Test Cases", JOptionPane.ERROR_MESSAGE);                  
        }
    }
    
    public void TestCasePanelDefaultSettings(){
        TestCaseIdTxt.setText("null");
        TestCaseDescTxt.setText("null");
        StatusDescTxt.setText("null");
        
        TestCaseIdTxt.setEnabled(false);
        TestCaseDescTxt.setEnabled(false);
        StatusCodeCmb.setEnabled(false);
        tcRecordIdTxt.setEnabled(false);
        StatusDescTxt.setEnabled(false);
        
        tcNewBtn.setEnabled(true);
        //tcDeleteBtn.setEnabled(false);
        tcChangeBtn.setEnabled(false);
        tcSaveBtn.setEnabled(false);
        tcCancelBtn.setEnabled(false);
        
    }
    
    public static boolean validateDeclaredTestCase(String givenProjCode, String givenTestCaseId){
        JFrame jFrame = new JFrame();
        boolean validateresult = false; //true - record exist; false - record doesn't exist
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Search_DeclaredTestCases_ByProjCodeTestCaseId(?,?)}");
            cs.setNString(1, givenProjCode);
            cs.setNString(2, givenTestCaseId);
            
            ResultSet rs = cs.executeQuery();
            if(rs.next()){
                validateresult = true;
            }
            else{
                validateresult = false;
            }
            rs.close();
            cs.close();
            conn.close();
            
            return validateresult;
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Declared Test Cases Failed " + 
                               "\n" + errMessage, "Maintenance - Test Cases", JOptionPane.ERROR_MESSAGE);       
                
                return validateresult;
        }
    }
    
    public static boolean InsertNewTestCase(String givenProjCode, String givenTestCaseId, String givenTestCaseDesc, String givenIterationFlag, String givenExecuteFlag,
            String givenResultFlag, int givenTestCycle, int givenTestRun, String givenRemarks, String givenRCA, String givenUserId, String givenStatus){
        boolean result = false;
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Insert_TestCases(?,?,?,?,?,?,?,?,?,?,?,?)}");
            
            /*
            @proj_code NVARCHAR(20),
            @testcaseid NVARCHAR(12),
            @testcasedescription NVARCHAR(100),
            @iteration NVARCHAR(1),
            @executeflag NVARCHAR(1),
            @resultflag NVARCHAR(6),
            @test_cycle INT,
            @test_run INT,
            @remarks TEXT,
            @rca TEXT,
            @userid NVARCHAR(8),
            @tc_status NVARCHAR(2)         
            */
            cs.setNString(1, givenProjCode);
            cs.setNString(2, givenTestCaseId);
            cs.setNString(3, givenTestCaseDesc);
            cs.setNString(4, givenIterationFlag);
            cs.setNString(5, givenExecuteFlag);
            cs.setNString(6, givenResultFlag);
            cs.setInt(7,givenTestCycle);
            cs.setInt(8, givenTestRun);
            cs.setString(9, givenRemarks);
            cs.setString(10, givenRCA);
            cs.setNString(11, givenUserId);
            cs.setNString(12, givenStatus);
            
            int executeflag = cs.executeUpdate();
            if(executeflag < 0){
                result = true;
            }
            else{
                result = false;
            }
            cs.close();
            conn.commit();
            conn.close();
            
            return result;
        }
        catch(Exception ex){
            result = false;
            String errMessage = null;

            errMessage = "Error Message: " + ex.getMessage() + 
               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
               "\n" + "Stack Trace: " + ex.getStackTrace() + 
               "\n" + "Cause: " + ex.getCause();

            System.out.println(errMessage);

            //if(execFlag <= 0 ){
            JOptionPane.showMessageDialog(jFrame,  "Saving New Declared Test Cases Failed " + 
                           "\n" + errMessage, "Maintenance - Test Cases", JOptionPane.ERROR_MESSAGE);                   
            return result;
        }

    }
    
    public static boolean UpdateExistingTestCase(int givenRecordId, String givenProjCode, String givenTestCaseId, String givenTestCaseDesc, String givenIterationFlag,
            String givenExecuteFlag, String givenResultFlag, int givenTestCycle, int givenTestRun, String givenRemarks, String givenRCA, String givenStatus){
        boolean result = false;
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cs = conn.prepareCall("{call Update_TestCases_WithStatus(?,?,?,?,?)}");
            
            /*
            1@id INT,
            2@proj_code NVARCHAR(20),
            3@testcaseid NVARCHAR(12),
            4@testcasedescription NVARCHAR(100),
            --@iteration NVARCHAR(1),
            --@executeflag NVARCHAR(1),
            --@resultflag NVARCHAR(6),
            --@test_cycle INT,
            --@test_run INT,
            --@remarks TEXT,
            --@rca TEXT,
            5@tc_status NVARCHAR(2)         
            */
            cs.setInt(1, givenRecordId);
            cs.setNString(2, givenProjCode);
            cs.setNString(3, givenTestCaseId);
            cs.setNString(4, givenTestCaseDesc);
            //cs.setNString(5, givenIterationFlag);
            //cs.setNString(6, givenExecuteFlag);
            //cs.setNString(7, givenResultFlag);
            //cs.setInt(8, givenTestCycle);
            //cs.setInt(9, givenTestRun);
            //cs.setString(10, givenRemarks);
            //cs.setString(11, givenRCA);
            cs.setNString(5, givenStatus);
            
            int executeflag = cs.executeUpdate();
            if(executeflag < 0){
                result = true;
            }
            else{
                result = false;
            }
            cs.close();
            conn.commit();
            conn.close();
            
            return result;
        }
        catch(Exception ex){
            result = false;
            String errMessage = null;

            errMessage = "Error Message: " + ex.getMessage() + 
               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
               "\n" + "Stack Trace: " + ex.getStackTrace() + 
               "\n" + "Cause: " + ex.getCause();

            System.out.println(errMessage);

            //if(execFlag <= 0 ){
            JOptionPane.showMessageDialog(jFrame,  "Saving Existing Declared Test Cases Failed " + 
                           "\n" + errMessage, "Maintenance - Test Cases", JOptionPane.ERROR_MESSAGE);                
            return result;
        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton CatCancelBtn;
    private javax.swing.JButton CatChangeBtn;
    private javax.swing.JList<String> CatElementActionLst;
    private javax.swing.JTextField CatElementIdTxt;
    private javax.swing.JList<String> CatElementTypeLst;
    private javax.swing.JTextField CatElementXpathTxt;
    private javax.swing.JTextField CatFieldIdTxt;
    private javax.swing.JTextField CatGroupIdTxt;
    private javax.swing.JTextField CatModuleTxt;
    private javax.swing.JButton CatNewBtn;
    private javax.swing.JButton CatSaveBtn;
    private javax.swing.JButton CatUploadBtn;
    private javax.swing.JTextField CatUserCodeTxt;
    private javax.swing.JTextField CategoryIdTxt;
    private javax.swing.JTable CategoryMenuTbl;
    private javax.swing.JTable DeclaredTestCaseTbl;
    private javax.swing.JButton FMCancelBtn;
    private javax.swing.JButton FMChangeBtn;
    private javax.swing.JButton FMConsolidateBtn;
    private javax.swing.JList<String> FMElementActionLst;
    private javax.swing.JTextField FMElementIdTxt;
    private javax.swing.JList<String> FMElementTypeLst;
    private javax.swing.JTextField FMElementXpathTxt;
    private javax.swing.JTextField FMFieldIdTxt;
    private javax.swing.JTextField FMFieldNameTxt;
    private javax.swing.JList<String> FMFunctionCodeLst;
    private javax.swing.JLabel FMFunctionNameLbl;
    private javax.swing.JList<String> FMModuleCodeLst;
    private javax.swing.JLabel FMModuleNameLbl;
    private javax.swing.JButton FMNewBtn;
    private javax.swing.JButton FMSaveBtn;
    private javax.swing.JList<String> FMSubmoduleCodeLst;
    private javax.swing.JLabel FMSubmoduleNameLbl;
    private javax.swing.JTextField FieldLoginTxt;
    private javax.swing.JTable FieldMappingTbl;
    private javax.swing.JTextField FieldPasswordTxt;
    private javax.swing.JTable GroupMenuTbl;
    private javax.swing.JButton GrpCancelBtn;
    private javax.swing.JButton GrpChangeBtn;
    private javax.swing.JList<String> GrpElementActionLst;
    private javax.swing.JList<String> GrpElementTypeLst;
    private javax.swing.JButton GrpNewBtn;
    private javax.swing.JButton GrpSaveBtn;
    private javax.swing.JButton GrpUploadBtn;
    private javax.swing.JTabbedPane MaintenanceTabs;
    private javax.swing.JButton MenuCancelBtn;
    private javax.swing.JButton MenuChangeBtn;
    private javax.swing.JTextField MenuChildCodeTxt;
    private javax.swing.JList<String> MenuElementActionLst;
    private javax.swing.JTextField MenuElementIdTxt;
    private javax.swing.JList<String> MenuElementTypeLst;
    private javax.swing.JTextField MenuElementXpathTxt;
    private javax.swing.JLabel MenuIdLbl;
    private javax.swing.JTextField MenuMainCodeTxt;
    private javax.swing.JButton MenuNewBtn;
    private javax.swing.JTextField MenuPageFieldTxt;
    private javax.swing.JTextField MenuPageModuleTxt;
    private javax.swing.JButton MenuSaveBtn;
    private javax.swing.JButton MenuSearchBtn;
    private javax.swing.JTextField MenuSubCodeTxt;
    private javax.swing.JTable MenuTbl;
    private javax.swing.JList<String> MenuUserCodeLst;
    private javax.swing.JLabel MenuUserNameLbl;
    private javax.swing.JButton Mod_CancelBtn;
    private javax.swing.JButton Mod_ChangeBtn;
    private javax.swing.JTextField Mod_IdTxt;
    private javax.swing.JTextField Mod_ModuleCodeTxt;
    private javax.swing.JTextField Mod_ModuleNameTxt;
    private javax.swing.JTable Mod_ModuleTbl;
    private javax.swing.JButton Mod_NewBtn;
    private javax.swing.JTextField Mod_ProjCodeTxt;
    private javax.swing.JLabel Mod_ProjNameLbl;
    private javax.swing.JButton Mod_SaveBtn;
    private javax.swing.JButton Mod_SearchBtn;
    private javax.swing.JLabel PFIdLbl;
    private javax.swing.JButton PFuncCancelBtn;
    private javax.swing.JButton PFuncChangeBtn;
    private javax.swing.JTextField PFuncCodeTxt;
    private javax.swing.JTextField PFuncNameTxt;
    private javax.swing.JButton PFuncNewBtn;
    private javax.swing.JButton PFuncSaveBtn;
    private javax.swing.JTable PFuncTbl;
    private javax.swing.JList<String> PLBrowserLst;
    private javax.swing.JButton PLCancelBtn;
    private javax.swing.JButton PLChangeBtn;
    private javax.swing.JList<String> PLEnvironmentLst;
    private javax.swing.JLabel PLIdLbl;
    private javax.swing.JButton PLNewBtn;
    private javax.swing.JTextField PLPathTxt;
    private javax.swing.JButton PLSaveBtn;
    private javax.swing.JButton PLSearchBtn;
    private javax.swing.JButton ProdCancelBtn;
    private javax.swing.JTextField ProdCategoryTxt;
    private javax.swing.JButton ProdChangeBtn;
    private javax.swing.JTextField ProdChildMenuTxt;
    private javax.swing.JList<String> ProdElementActionLst;
    private javax.swing.JTextField ProdElementId;
    private javax.swing.JList<String> ProdElementTypeLst;
    private javax.swing.JTextField ProdElementXpathTxt;
    private javax.swing.JTextField ProdFieldTxt;
    private javax.swing.JTextField ProdModuleTxt;
    private javax.swing.JButton ProdNewBtn;
    private javax.swing.JButton ProdSaveBtn;
    private javax.swing.JTextField ProdSubMenuTxt;
    private javax.swing.JButton ProdUploadBtn;
    private javax.swing.JTextField ProdUserCodeTxt;
    private javax.swing.JTable ProductMenuTbl;
    private javax.swing.JTextField ProjCodeTxt;
    private javax.swing.JTextField ProjDescTxt;
    private javax.swing.JButton Proj_CancelBtn;
    private javax.swing.JButton Proj_ChangeBtn;
    private javax.swing.JButton Proj_NewBtn;
    private javax.swing.JTable Proj_ProjectAppTbl;
    private javax.swing.JTextField Proj_ProjectCodeTxt;
    private javax.swing.JLabel Proj_ProjectIDLbl;
    private javax.swing.JTextField Proj_ProjectNameTxt;
    private javax.swing.JList<String> Proj_ProjectPlatformList;
    private javax.swing.JButton Proj_SaveBtn;
    private javax.swing.JButton Proj_SearchBtn;
    private javax.swing.JTable ProjectLocationTbl;
    private javax.swing.JComboBox<String> StatusCodeCmb;
    private javax.swing.JTextField StatusDescTxt;
    private javax.swing.JTextField TestCaseDescTxt;
    private javax.swing.JTextField TestCaseIdTxt;
    private javax.swing.JButton UserCancelBtn;
    private javax.swing.JButton UserChangeBtn;
    private javax.swing.JTextField UserCodeTxt;
    private javax.swing.JLabel UserIdLbl;
    private javax.swing.JTextField UserLoginTxt;
    private javax.swing.JTextField UserNameTxt;
    private javax.swing.JButton UserNewBtn;
    private javax.swing.JTextField UserPasswordTxt;
    private javax.swing.JButton UserSaveBtn;
    private javax.swing.JButton UserSearchBtn;
    private javax.swing.JTable UserTbl;
    private javax.swing.JComboBox<String> UserTypeCmb;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane30;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JButton tcCancelBtn;
    private javax.swing.JButton tcChangeBtn;
    private javax.swing.JButton tcNewBtn;
    private javax.swing.JTextField tcRecordIdTxt;
    private javax.swing.JButton tcSaveBtn;
    // End of variables declaration//GEN-END:variables

    private static JPanel makePanel(String text) {
        JPanel panel = new JPanel();
        panel.add(new Label(text));
        panel.setLayout(new GridLayout(1,1));
        return panel;
    }
}
