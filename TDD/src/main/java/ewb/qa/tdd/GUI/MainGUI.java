/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ewb.qa.tdd.GUI;

import ewb.qa.tdd.SQLObj;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import org.apache.poi.ss.util.NumberToTextConverter;
/**
 *
 * @author JPE61800
 */
public class MainGUI extends javax.swing.JFrame {

    private static MainGUI alreadyOpened = null;
    private static int globalUserType = LoginGUI.getUserType();
    private static String globalUserId = LoginGUI.getLoginId();
    private static String globalVersionRelease;
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        //JFrame jFrame = new JFrame();
        String LoginId = LoginGUI.getLoginId();
        String DBName = ewb.qa.tdd.SQLObj.getDBConnName();
        String versionNo = "1.24.0";
        String version = "version :" + versionNo; 
        
        setVersionRelease(version);
        String VersionRelease = getVersionRelease();
        //jFrame.setTitle("TDD Dashboard -" + LoginId );
        MainGUI.this.setTitle("TDD Dashboard - " + LoginId + " (" + DBName + ")"  + "\t " + "\t " + "\t " + "\t " + "\t " + VersionRelease);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_exitbutton = new javax.swing.JButton();
        SettingsBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProjAppTbl = new javax.swing.JTable();
        RunBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MainProjectList = new javax.swing.JList<>();
        ReportBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        MainConsolidateBtn = new javax.swing.JButton();
        MainProjectDesc = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        UserProfileBtn = new javax.swing.JButton();

        setTitle("TDD Dashboard");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        main_exitbutton.setText("Exit");
        main_exitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_exitbuttonActionPerformed(evt);
            }
        });

        SettingsBtn.setText("Maintenance");
        SettingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsBtnActionPerformed(evt);
            }
        });

        ProjAppTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        ProjAppTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        )
    );
    ProjAppTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mousePressed(java.awt.event.MouseEvent evt) {
            ProjAppTblMousePressed(evt);
        }
    });
    jScrollPane1.setViewportView(ProjAppTbl);

    RunBtn.setText("Run Test");
    RunBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            RunBtnActionPerformed(evt);
        }
    });

    jLabel1.setText("Project :");

    MainProjectList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            MainProjectListValueChanged(evt);
        }
    });
    jScrollPane2.setViewportView(MainProjectList);

    ReportBtn.setText("Reports");

    SearchBtn.setText("Search");

    MainConsolidateBtn.setText("Consolidate");
    MainConsolidateBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            MainConsolidateBtnActionPerformed(evt);
        }
    });

    MainProjectDesc.setText("*");

    jLabel3.setText("Project Name :");

    UserProfileBtn.setText("User Profile");
    UserProfileBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            UserProfileBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(RunBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(SettingsBtn)
                    .addGap(18, 18, 18)
                    .addComponent(ReportBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(MainConsolidateBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserProfileBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(main_exitbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SearchBtn))
                        .addComponent(MainProjectDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(SearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(MainProjectDesc, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(main_exitbutton)
                .addComponent(SettingsBtn)
                .addComponent(RunBtn)
                .addComponent(ReportBtn)
                .addComponent(MainConsolidateBtn)
                .addComponent(UserProfileBtn))
            .addGap(22, 22, 22))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void main_exitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_exitbuttonActionPerformed
        JFrame frame = new JFrame("EXIT");
        if(JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit this App?", "EXIT", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        } 
        
    }//GEN-LAST:event_main_exitbuttonActionPerformed

    private void SettingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsBtnActionPerformed
        //close();
        String globalProjectCode = null;
        globalProjectCode = getProjectCode();
        JFrame jFrame = new JFrame();
        
        if("null".equals(globalProjectCode)){
            JOptionPane.showMessageDialog(jFrame, "No selected Project Code", "Main - TDD Automation",JOptionPane.ERROR_MESSAGE);
            MainProjectList.setFocusable(true);
        }
        else{
            setVisible(false);
            MaintenanceGUI setframe = new MaintenanceGUI();
            setframe.setVisible(true);            
        } 

    }//GEN-LAST:event_SettingsBtnActionPerformed

    private void MainConsolidateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainConsolidateBtnActionPerformed
            String globalProjectCode = null;
            globalProjectCode = getProjectCode();
            JFrame jFrame = new JFrame();

            if("null".equals(globalProjectCode)){
                JOptionPane.showMessageDialog(jFrame, "No selected Project Code", "Main - TDD Automation",JOptionPane.ERROR_MESSAGE);
                MainProjectList.setFocusable(true);
            }
            else{
                setVisible(false);
                UploadTemplates setframe = new UploadTemplates();
                setframe.setVisible(true);            
            } 
        
        
            /*
            String filename = "";
            String worksheetname = "";
            String spcommand = "";
            String qcommand = "";
            String sequenceflag = "";
            int lastcolumn = 0;

            ExcelObject excelObj = new ewb.qa.tdd.GUI.ExcelObject();

            JFrame jFrame = new JFrame();
            */  
                //getSpecificWorksheet_Excel(String filename, String worksheetname, int lastcolumn, String spcommand, String qcommand, String sequenceflag)
               //try{
                        
                        //*******************************************************************************************************************************************************************************************************
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\T24 Architecture Layout.xlsx";
                        worksheetname = "Automation App DataSource";
                        //lastcolumn = 14;
                        //spcommand = "{call Insert_AppDataSource(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        spcommand = "{call Insert_AppDataSource(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        qcommand = "TRUNCATE TABLE dbo.APP_DATASOURCE";
                        //qcommand = "";
                        excelObj.getArchDataSource(filename, worksheetname, spcommand, qcommand);
                        //excelObj.getSpecificWorksheet_Excel(filename, worksheetname, lastcolumn, spcommand, qcommand);
                        System.out.println("Successfully Insert data to dbo.APP_DATASOURCE");
                        */
                        //*******************************************************************************************************************************************************************************************************
                        
                        //***************************************************************************************************************
                        //Consolidate and Insert to dbo.PAGE_TESTSCRIPT - MAKER
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\TDD_FunctionalityMaker.xlsx";
                        spcommand = "{call Insert_PageTestscript(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        lastcolumn = 15;
                        worksheetname = "";
                        //getGetWorksheetList_Excel(String filename, String spcommand, int lastcolumn)
                        excelObj.getGetWorksheetList_Excel(filename, worksheetname, spcommand, lastcolumn);
                        System.out.println("Successfully Insert data to dbo.PAGE_TESTSCRIPT - MAKER");
                        */
                        //***************************************************************************************************************

                        //readArchDataSource(testcaseid);
                        
                        //***************************************************************************************************************
                        //Consolidate and Insert to dbo.PAGE_TESTSCRIPT - AUTHORISER
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\TDD_FunctionalityAuthoriser.xlsx";
                        spcommand = "{call Insert_PageTestscript(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        lastcolumn = 15;
                        worksheetname = "";
                        //getGetWorksheetList_Excel(String filename, String spcommand, int lastcolumn)
                        excelObj.getGetWorksheetList_Excel(filename, worksheetname, spcommand, lastcolumn);
                        System.out.println("Successfully Insert data to dbo.PAGE_TESTSCRIPT - AUTHORISER");
                        */
                        //***************************************************************************************************************                        

                        //***************************************************************************************************************
                        //Consolidate and Insert to dbo.PAGE_TESTSCRIPT - Loans
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\TDD_LoansFunctionality.xlsx";
                        spcommand = "{call Insert_PageTestscript(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        lastcolumn = 15;
                        worksheetname = "";
                        //getGetWorksheetList_Excel(String filename, String spcommand, int lastcolumn)
                        excelObj.getGetWorksheetList_Excel(filename, worksheetname, spcommand, lastcolumn);
                        System.out.println("Successfully Insert data to dbo.PAGE_TESTSCRIPT - LOANS");
                        */
                        //***************************************************************************************************************                              
                        
                        //*******************************************************************************************************************************************************************************************************
                        //dbo.USER_MENUMAP
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\UniversalTellerMenu.xlsx";
                         worksheetname = "User0001";
                         spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                         //lastcolumn = 17;
                         qcommand = "";
                         sequenceflag = "N";
                         excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                         System.out.println("Successfully Insert data to dbo.USER_MENUMAP - MAKER");
                         */
                        //*******************************************************************************************************************************************************************************************************

                        //*******************************************************************************************************************************************************************************************************
                        //dbo.USER_MENUMAP
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\ServiceManagerMenu.xlsx";
                        worksheetname = "User0002";
                        //lastcolumn = 17;
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        //getSpecificWorksheet_Excel(String filename, String worksheetname, int lastcolumn, String command)
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - AUTHORISER");
                        */
                        //*******************************************************************************************************************************************************************************************************

                        //*******************************************************************************************************************************************************************************************************
                        // LOANS - MAKER
                        //*******************************************************************************************************************************************************************************************************
                        //dbo.USER_MENUMAP
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0001 - CBG Maker Menu.xlsx";
                        worksheetname = "LendingUser0001";
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        //lastcolumn = 17;
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0001");
                        */
                        //*******************************************************************************************************************************************************************************************************

                        //*******************************************************************************************************************************************************************************************************
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0002 - Approver 348 Menu.xlsx";
                        worksheetname = "LendingUser0002";
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        //lastcolumn = 17;
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0002");
                        */
                        //*******************************************************************************************************************************************************************************************************
                        
                        
                        //*******************************************************************************************************************************************************************************************************
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0003 - Approver 310 Menu.xlsx";
                        worksheetname = "LendingUser0003";
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        //lastcolumn = 17;
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0003");                        
                        */
                        //*******************************************************************************************************************************************************************************************************

                        //*******************************************************************************************************************************************************************************************************
                         // LOANS - AUTHORISER
                        //*******************************************************************************************************************************************************************************************************
                        //dbo.USER_MENUMAP
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0004 - Approver 367 Menu.xlsx";
                        worksheetname = "LendingUser0004";
                        //lastcolumn = 17;
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        //getSpecificWorksheet_Excel(String filename, String worksheetname, int lastcolumn, String command)
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0004");
                        */
                        //*******************************************************************************************************************************************************************************************************                        

                        //*******************************************************************************************************************************************************************************************************  
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0005 - Retail Credit Manager Menu.xlsx";
                        worksheetname = "LendingUser0005";
                        //lastcolumn = 17;
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        //getSpecificWorksheet_Excel(String filename, String worksheetname, int lastcolumn, String command)
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0005");                        
                        */
                        //*******************************************************************************************************************************************************************************************************  
                        
                        //*******************************************************************************************************************************************************************************************************  
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0006 - Approver 368 Menu.xlsx";
                        worksheetname = "LendingUser0006";
                        //lastcolumn = 17;
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        //getSpecificWorksheet_Excel(String filename, String worksheetname, int lastcolumn, String command)
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0005");                        
                        */
                        //*******************************************************************************************************************************************************************************************************                          
                        
                        //*******************************************************************************************************************************************************************************************************  
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\LendingUser0007 - Corporate Lending Supervisor.xlsx";
                        worksheetname = "LendingUser0007";
                        //lastcolumn = 17;
                        spcommand = "{call Insert_Menumap(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}";
                        qcommand = "";
                        sequenceflag = "N";
                        excelObj.getSpecificWorksheet_Excel(filename, worksheetname, spcommand, qcommand, sequenceflag);
                        //getSpecificWorksheet_Excel(String filename, String worksheetname, int lastcolumn, String command)
                        System.out.println("Successfully Insert data to dbo.USER_MENUMAP - CBG MAKER LendingUser0005");                        
                        */
                        //*******************************************************************************************************************************************************************************************************                          


                        
                        
                        //***************************************************************************************************************
                        //TEST DATA
                        //***************************************************************************************************************
                        /*
                        filename = "D:\\QA\\Projects\\Test Automation\\Java_SeleniumWebDriver_Demo\\templates\\TestDataTemplate.xlsx";
                        spcommand = "{call Insert_Testdata(?,?,?,?,?,?)}";
                        excelObj.setTestData(filename);
                        System.out.println("Successfully Insert data to dbo.TESTDATA");
                        */
                        //***************************************************************************************************************
                   
                        //***************************************************************************************************************
                        //dbo.MENU_TESTSCRIPT
                        /*
                        excelObj.readUserMenuMap();
                        System.out.println("Successfully Insert data to dbo.MENU_TESTSCRIPT");
                        */
                        //***************************************************************************************************************
                        
                        //JOptionPane.showMessageDialog(jFrame,  "Excel Consolidated Completed" , "Main - Consolidation", JOptionPane.INFORMATION_MESSAGE);
               //}
               /*
               catch(Exception ex){
                    String errMessage = null;

                    errMessage = "File Name: " + filename + "\n" + 
                        "Error Message: " + ex.getMessage() + 
                        "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                        "\n" + "Stack Trace: " + ex.getStackTrace() + 
                        "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);
                    
                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Consolidation with Excel Failed " + 
                                   "\n" + errMessage, "Maintenance", 0);
                    //}
               }
                */
        
    }//GEN-LAST:event_MainConsolidateBtnActionPerformed

    private void MainProjectListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_MainProjectListValueChanged
        JFrame jFrame = new JFrame();
        try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_ProjectApp_ByProj_Code(?)}");

                String projcode = MainProjectList.getSelectedValue();
                cStmt.setString(1, projcode);
                ResultSet rs = cStmt.executeQuery();

                if(rs.next()){
                        String id = NumberToTextConverter.toText(rs.getInt("ID"));
                        String code = rs.getNString("CODE");
                        String name = rs.getNString("NAME");
                        String platform = rs.getNString("PLATFORM");

                        MainProjectDesc.setText(name + " - " + platform);
                        setProjectCode(code);
                        setProjectDesc(name + " - " + platform);
                }

                cStmt.close();
                conn.close();
                    
        }
        catch(Exception ex){
            String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);
                    
                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Saving Failed " + 
                                   "\n" + errMessage, "Maintenance", 0);
        }
    }//GEN-LAST:event_MainProjectListValueChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        JFrame jFrame = new JFrame();
        PopulateProjectList();
        loadProjAppTbl();
        try{
            String globalProjCode = MainGUI.globalProjectCode;        
            MainProjectList.setSelectedValue(globalProjCode, true);
            
            DefaultSettings();
        }
        catch(Exception ex){
             String errMessage = null;

             errMessage = "Error Message: " + ex.getMessage() + 
                "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                "\n" + "Stack Trace: " + ex.getStackTrace() + 
                "\n" + "Cause: " + ex.getCause();

             System.out.println(errMessage);
             JOptionPane.showMessageDialog(jFrame,  errMessage, "Main", JOptionPane.INFORMATION_MESSAGE);           
        }
       
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        /*
        JFrame jFrame = new JFrame();
        try{
                String globalProjectCode = getProjectCode();
                if(globalProjectCode == null){
                    JOptionPane.showConfirmDialog(jFrame, "No Project Code has been selected", "Main - TDD Automation", JOptionPane.ERROR_MESSAGE);
                }
                else if(globalProjectCode.equals("null"))
                    JOptionPane.showConfirmDialog(jFrame, "No Project Code has been selected", "Main - TDD Automation", JOptionPane.ERROR_MESSAGE);
                else{
                    //String globalProjectDesc = getProjectDesc();
                    MainProjectList.setSelectedValue(globalProjectCode, true);
                }
        }
        catch(Exception ex){
            
        }
        */
        /*
        JFrame jFrame = new JFrame();
        jFrame.addWindowStateListener(new WindowStateListener() {
            public void windowStateChanged(WindowEvent arg0) {
                frame_windowStateChanged(arg0);
            }
        }
        */
 
    }//GEN-LAST:event_formWindowActivated

    public void frame_windowStateChanged(WindowEvent e){
        String globalProjCode = MainGUI.getProjectCode();
        JFrame jFrame = new JFrame();
        
        if ((e.getNewState() & Frame.ICONIFIED) == Frame.ICONIFIED){
            //_print("minimized");
            //nothing to do
         }
         // maximized
         else if ((e.getNewState() & Frame.MAXIMIZED_BOTH) == Frame.MAXIMIZED_BOTH){
            //_print("maximized");
                if(globalProjCode == "" || globalProjCode.equals("") || globalProjCode.equalsIgnoreCase("")){
                        JOptionPane.showConfirmDialog(jFrame, "Invalid Project selected", "Main", JOptionPane.ERROR_MESSAGE);
                }
         }
    }
    
    private void RunBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunBtnActionPerformed
            String globalProjectCode = null;
            globalProjectCode = getProjectCode();
            JFrame jFrame = new JFrame();

            if("null".equals(globalProjectCode)){
                JOptionPane.showMessageDialog(jFrame, "No selected Project Code", "Main - TDD Automation",JOptionPane.ERROR_MESSAGE);
                MainProjectList.setFocusable(true);
            }
            else{
                setVisible(false);
                ExecutePage setframe = new ExecutePage();
                setframe.setVisible(true);            
            } 
    }//GEN-LAST:event_RunBtnActionPerformed

    private void ProjAppTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjAppTblMousePressed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{
            TableModel tblmodel = ProjAppTbl.getModel();
            int indexRow = ProjAppTbl.getSelectedRow();
            /*
            [ID] = PA.ID,
            [CODE] = PA.PROJECT_CODE,
            [NAME] = PA.PROJECT_NAME,
            [PLATFORM] = PA.PROJECT_PLATFORM                   
            */
            String ProjID = tblmodel.getValueAt(indexRow, 0).toString();
            String ProjCode = tblmodel.getValueAt(indexRow, 1).toString();
            String ProjName = tblmodel.getValueAt(indexRow, 2).toString();
            String ProjPlatform = tblmodel.getValueAt(indexRow,3).toString();
            
            MainProjectList.setSelectedValue(ProjCode, true);
            MainProjectDesc.setText(ProjName + " - " + ProjPlatform);
            
            boolean a = ProjAppTbl.isEditing();
//            if(a == false){
//                JOptionPane.showMessageDialog(jFrame, "This cell is not editable", "TDD Main Dashboard", JOptionPane.INFORMATION_MESSAGE);
//            }
            ActivateSettings();
            
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Product Group table Failed " + 
                               "\n" + errMessage, "Maintenance - Product Group", JOptionPane.ERROR_MESSAGE);              
        }
    }//GEN-LAST:event_ProjAppTblMousePressed

    private void UserProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserProfileBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        AdmnistratorGUI setframe = new AdmnistratorGUI();
        setframe.setVisible(true);              
    }//GEN-LAST:event_UserProfileBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }
    
    public void PopulateProjectList(){
        //ewb.qa.tdd.SQLObj sqlObj = new ewb.qa.tdd.SQLObj();
        JFrame jFrame = new JFrame();
        
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectApp()}");
            ResultSet rs = cStmt.executeQuery();
            
            DefaultListModel model = new DefaultListModel();
            
            while(rs.next()){
                String id = NumberToTextConverter.toText(rs.getInt("ID"));
                String code = rs.getNString("CODE");
                String name = rs.getNString("NAME");
                String platform = rs.getNString("PLATFORM");
                
                model.addElement(code);
            }
            
            MainProjectList.setModel(model);
            cStmt.close();
            conn.close();
            
        }
        catch(Exception ex)
        {
            String errMessage = null;

            errMessage = "Error Message: " + ex.getMessage() + 
               "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
               "\n" + "Stack Trace: " + ex.getStackTrace() + 
               "\n" + "Cause: " + ex.getCause();

            System.out.println(errMessage);
            JOptionPane.showMessageDialog(jFrame,  errMessage, "Main", JOptionPane.INFORMATION_MESSAGE);

        }
        
    }

    public void PopulateTable(){
        try{
            
        }
        catch(Exception ex){
          
        }
    }
    
    private static String globalProjectCode;
    private static String globalProjectDesc;
    
    public static void setProjectCode(String givenValue){
        globalProjectCode = givenValue;
    }
    
    public static String getProjectCode(){
        String ProjectCode = globalProjectCode;
        if(ProjectCode == null){
            return "null";
        }
        else{
            return globalProjectCode;            
        }

    }
    
    public static void setProjectDesc(String givenValue){
        globalProjectDesc = givenValue;
    }
    
    public static String getProjectDesc(){
        return globalProjectDesc;
    }
    
    public void loadProjAppTbl(){
        JFrame jFrame = new JFrame();
        try{
            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
            CallableStatement cStmt = conn.prepareCall("{call Search_AllProjectApp()}");
            ResultSet rs = cStmt.executeQuery();
            
            ProjAppTbl.setModel(new DefaultTableModel(null, new String[] {"ID", "Project Code", "Project Name", "Platform"}));
            int iRow = 0;
            
            while(rs.next()){
                /*
                [ID] = PA.ID,
                [CODE] = PA.PROJECT_CODE,
                [NAME] = PA.PROJECT_NAME,
                [PLATFORM] = PA.PROJECT_PLATFORM            
                */                
                String Id = NumberToTextConverter.toText(rs.getInt(1));
                String ProjCode = rs.getNString(2);
                String ProjName = rs.getNString(3);
                String Platform = rs.getNString(4);
                
                String[] arrTbl = {Id, ProjCode, ProjName, ProjName, Platform}; 
                DefaultTableModel model = (DefaultTableModel)ProjAppTbl.getModel();
                model.addRow(arrTbl);
                
                iRow++;
                
            }
            
            ProjAppTbl.getColumnModel().getColumn(0).setPreferredWidth(20);
            ProjAppTbl.getColumnModel().getColumn(1).setPreferredWidth(70);
            ProjAppTbl.getColumnModel().getColumn(2).setPreferredWidth(150);
            
            cStmt.close();
            conn.close();
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Loading Product Group table Failed " + 
                               "\n" + errMessage, "Maintenance - Product Group", JOptionPane.ERROR_MESSAGE);                     
        }
    }
    
    public void DefaultSettings(){
        RunBtn.setEnabled(false);
        SettingsBtn.setEnabled(false);
        ReportBtn.setEnabled(false);
        
        
        if(globalUserType == 0){
            UserProfileBtn.setEnabled(true);
            MainConsolidateBtn.setEnabled(true);
            
            UserProfileBtn.setVisible(true);
            MainConsolidateBtn.setVisible(true);
        }
        else{
            UserProfileBtn.setVisible(false);
            MainConsolidateBtn.setVisible(false);            
        }
    }
    
    public void ActivateSettings(){
        RunBtn.setEnabled(true);
        SettingsBtn.setEnabled(true);
        ReportBtn.setEnabled(true);
        MainConsolidateBtn.setEnabled(true);
    }
    
    public void ValidateLoginId(String givenLoginId){
        
    }
    
    public void ValidateUserType(int givenUserType){
        
    }
    
        public static void setVersionRelease(String givenVersion){
        globalVersionRelease = givenVersion;
    }
    
    public static String getVersionRelease(){
        return globalVersionRelease;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MainConsolidateBtn;
    private javax.swing.JLabel MainProjectDesc;
    private javax.swing.JList<String> MainProjectList;
    private javax.swing.JTable ProjAppTbl;
    private javax.swing.JButton ReportBtn;
    private javax.swing.JButton RunBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton SettingsBtn;
    private javax.swing.JButton UserProfileBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton main_exitbutton;
    // End of variables declaration//GEN-END:variables
}
