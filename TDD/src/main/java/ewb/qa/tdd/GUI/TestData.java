/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ewb.qa.tdd.GUI;

import ewb.qa.tdd.SQLObj;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import java.awt.*;
import java.awt.event.*;
import org.apache.poi.ss.util.NumberToTextConverter;
import ewb.qa.tdd.GUI.MainGUI.*;
import ewb.qa.tdd.SeleniumObj;
import javax.swing.table.TableColumnModel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.*;

import org.apache.commons.io.FileUtils;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.chrome.ChromeDriver;

/**
 *
 * @author JPE61800
 */
public class TestData extends javax.swing.JFrame {

    /**
     * Creates new form TestData
     */
    public TestData() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ProjCodeTxt = new javax.swing.JTextField();
        ProjDescTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        FieldValueTxt = new javax.swing.JTextField();
        TestCaseDescTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        FunctionTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        FieldIdTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TestDataTbl = new javax.swing.JTable();
        CancelBtn = new javax.swing.JButton();
        SaveBtn = new javax.swing.JButton();
        ChangeBtn = new javax.swing.JButton();
        NewBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        IdTxt = new javax.swing.JTextField();
        TestCaseCmb = new javax.swing.JComboBox<>();
        FunctionCodeCmb = new javax.swing.JComboBox<>();
        DeleteBtn = new javax.swing.JButton();
        IterationFlagCmb = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Data");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Project Code :");

        jLabel2.setText("Test Case ID :");

        FieldValueTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldValueTxtActionPerformed(evt);
            }
        });

        jLabel3.setText("Function Code :");

        jLabel4.setText("Iteration :");

        jLabel5.setText("Field ID :");

        jLabel6.setText("Value :");

        TestDataTbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        TestDataTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TestDataTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TestDataTblMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(TestDataTbl);

        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        ChangeBtn.setText("Change");
        ChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeBtnActionPerformed(evt);
            }
        });

        NewBtn.setText("New");
        NewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewBtnActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        TestCaseCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestCaseCmbActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        IterationFlagCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TestCaseCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3)
                                        .addComponent(TestCaseDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FunctionCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(FunctionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FieldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FieldValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IterationFlagCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 243, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChangeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ProjCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ProjDescTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(IdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TestCaseDescTxt)
                                    .addComponent(TestCaseCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FunctionCodeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FunctionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(IterationFlagCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FieldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FieldValueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelBtn)
                    .addComponent(SaveBtn)
                    .addComponent(ChangeBtn)
                    .addComponent(NewBtn)
                    .addComponent(BackBtn)
                    .addComponent(DeleteBtn))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TestDataTblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TestDataTblMousePressed
            JFrame jFrame = new JFrame();
            if(evt.getClickCount() == 2){
                try{
                    TableModel model = TestDataTbl.getModel();
                    int index = TestDataTbl.getSelectedRow();

                    /*
                    [ID] = TD.ID,
                    [PROJCODE] = TD.PROJ_CODE,
                    [TESTCASEID] = TD.TESTCASEID,
                    [FUNCCODE] = TD.FUNCTION_CODE,
                    [FIELDID] = TD.FIELD_ID,Birt
                    [FIELDVALUE] = TD.FIELD_VALUE,
                    [ITERATION] = TD.ITERATION                
                    */    

                    String id = model.getValueAt(index, 0).toString(); //ID
                    String projcode = model.getValueAt(index, 1).toString(); //PROJCODE
                    String testcaseid = model.getValueAt(index, 2).toString(); //TESTCASEID
                    String funccode = model.getValueAt(index, 3).toString(); //FUNCCODE
                    String fieldid = model.getValueAt(index,4).toString(); //FIELDID
                    String fieldvalue = model.getValueAt(index, 5).toString(); //FIELDVALUE
                    String iteration = model.getValueAt(index, 6).toString(); //ITERATION

                    IdTxt.setText(id);
                    //FunctionCodeLst.setSelectedValue(funccode, true);
                    TestCaseCmb.setSelectedItem(testcaseid);
                    FunctionCodeCmb.setSelectedItem(funccode);
                    FieldIdTxt.setText(fieldid);
                    FieldValueTxt.setText(fieldvalue);
                    //IterationLst.setSelectedValue(iteration, true);
                    //IterationCmb.setSelectedItem(iteration);
                    IterationFlagCmb.setSelectedItem(iteration);

                    ChangeMode();

                }
                catch(Exception ex){
                    String errMessage = null;

                    errMessage = "Error Message: " + ex.getMessage() + 
                       "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                       "\n" + "Stack Trace: " + ex.getStackTrace() + 
                       "\n" + "Cause: " + ex.getCause();

                    System.out.println(errMessage);

                    //if(execFlag <= 0 ){
                    JOptionPane.showMessageDialog(jFrame,  "Test Data  selecting failed " + 
                                   "\n" + errMessage, "Test Script - Maintenance", 0);                         
                }
            }
    }//GEN-LAST:event_TestDataTblMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            String ProjCode = MainGUI.getProjectCode();
            String ProjDesc = MainGUI.getProjectDesc();
            
            IdTxt.setText("0");
            ProjCodeTxt.setText(ProjCode);
            ProjDescTxt.setText(ProjDesc);
        
            //loadTestDataTbl();
            loadTestCaseLst();
            loadFunctionCodeLst();
            DefaultMode();
    }//GEN-LAST:event_formWindowOpened

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        this.setVisible(false);
        ExecutePage execPage = new ExecutePage();
        execPage.setVisible(true);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_TestData_SpecificFieldIdIterationLoginId(?,?,?,?,?,?)}");
                    
                    String Id = IdTxt.getText();
                    String ProjCode = ProjCodeTxt.getText();
                    //String TestCaseId = TestCaseIdLst.getSelectedValue();
                    String TestCaseId = TestCaseCmb.getSelectedItem().toString();
                    //String FuncCode = FunctionCodeLst.getSelectedValue();
                    String FuncCode = FunctionCodeCmb.getSelectedItem().toString();
                    //String Iteration = IterationLst.getSelectedValue();
                    //String Iteration = IterationCmb.getSelectedItem().toString();
                    String Iteration = IterationFlagCmb.getSelectedItem().toString();
                    String FieldId = FieldIdTxt.getText();
                    String FieldValue = FieldValueTxt.getText();
                    String LoginId = LoginGUI.getLoginId();
                    
                    int execflag = 0;
                    /*
	@proj_code NVARCHAR(20),
	@testcaseid  NVARCHAR(12),
	@function_code NVARCHAR(20),
	@field_id NVARCHAR(50),
	@iteration INT                    
                    */
                    
                    cStmt.setNString(1, ProjCode);
                    cStmt.setNString(2, TestCaseId);
                    cStmt.setNString(3, FuncCode);
                    cStmt.setNString(4, FieldId);
                    cStmt.setInt(5, Integer.parseInt(Iteration));
                    cStmt.setNString(6, LoginId);
                    
                    ResultSet rs = cStmt.executeQuery();
                    
                    if(rs.next()){
                        //Update Mode
                        cStmt.close();
                        cStmt = conn.prepareCall("{call Update_TestData(?,?,?,?,?,?,?)}");
                        /*
                        @id INT,
                        @proj_code NVARCHAR(20),
                        @testcaseid  NVARCHAR(12),
                        @function_code NVARCHAR(20),
                        @field_id NVARCHAR(50),
                        @field_value NVARCHAR(100),
                        @iteration INT                        
                        */
                        cStmt.setInt(1, Integer.parseInt(Id));
                        cStmt.setNString(2, ProjCode);
                        cStmt.setNString(3, TestCaseId);
                        cStmt.setNString(4, FuncCode);
                        cStmt.setNString(5, FieldId);
                        cStmt.setNString(6, FieldValue);
                        cStmt.setInt(7, Integer.parseInt(Iteration));
                        
                        execflag = cStmt.executeUpdate();
                        
                    }
                    else{
                        //Insert Mode
                        cStmt.close();
                        cStmt = conn.prepareCall("{call Insert_Testdata_ByLoginId(?,?,?,?,?,?,?)}");
                        
                        /*
                        @proj_code NVARCHAR(20),
                        @testcaseid NVARCHAR(12),
                        @function_code  NVARCHAR(20),
                        @field_id NVARCHAR(50),
                        @field_value NVARCHAR(100),
                        @iteration INT,
                        @loginid NVARCHAR(8)                      
                        */
                        
                        cStmt.setNString(1, ProjCode);
                        cStmt.setNString(2, TestCaseId);
                        cStmt.setNString(3, FuncCode);
                        cStmt.setNString(4, FieldId);
                        cStmt.setNString(5, FieldValue);
                        cStmt.setInt(6, Integer.parseInt(Iteration));
                        cStmt.setNString(7, LoginId);
                        
                        execflag = cStmt.executeUpdate();
                    }
                    
                    if(execflag < 0){
                        JOptionPane.showMessageDialog(jFrame,  "Record Saving Successful ", "Test Data - Maintenance", JOptionPane.INFORMATION_MESSAGE);
                        conn.commit();
                        cStmt.close();
                        conn.close();
                        //DefaultSettings();
                        //loadTestScriptTbl();     
                        loadTestDataTbl();
                        DefaultMode();
                    }
            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Test Data  selecting failed " + 
                               "\n" + errMessage, "Test Script - Maintenance", 0);                   
            }
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void TestCaseCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestCaseCmbActionPerformed
        // TODO add your handling code here:
            //loadIterationLst();
            loadTestDataTbl();
    }//GEN-LAST:event_TestCaseCmbActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        try{

            int id = Integer.parseInt(IdTxt.getText());
            if(id > 0){
                String projcode = ProjCodeTxt.getText();
                String testcaseid = TestCaseCmb.getSelectedItem().toString();
                String funccode = FunctionCodeCmb.getSelectedItem().toString();
                String fieldid = FieldIdTxt.getText();
                //int iteration = Integer.parseInt(IterationCmb.getSelectedItem().toString());
                int iteration = Integer.parseInt(IterationFlagCmb.getSelectedItem().toString());
                int response = 0;


                response = JOptionPane.showConfirmDialog(jFrame, "Are you sure you want to delete the following record?" + "\n" + 
                        "Record ID: " + id + "\n" +
                        "Project Code: " + projcode + "\n" + 
                        "Test Case ID: " + testcaseid + "\n" +
                        "Function Code: " + funccode + "\n" + 
                        "Field ID: " + fieldid + "\n" +
                        "Iteration Number: " + iteration, "Test Script - Maintenance", JOptionPane.YES_NO_OPTION);

                    if(response == 0){
                            Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                            CallableStatement cs = conn.prepareCall("{call Delete_TestData(?,?,?,?,?,?)}");

                            /*
                            @id INT,
                            @proj_code NVARCHAR(20),
                            @testcaseid  NVARCHAR(12),
                            @function_code NVARCHAR(20),
                            @field_id NVARCHAR(50),
                            @iteration INT            
                            */

                            cs.setInt(1, id);
                            cs.setNString(2, projcode);
                            cs.setNString(3, testcaseid);
                            cs.setNString(4, funccode);
                            cs.setNString(5, fieldid);
                            cs.setInt(6, iteration);

                            int executeflag = cs.executeUpdate();
                            if(executeflag < 0){
                                JOptionPane.showMessageDialog(jFrame,  "Record Deleted Successful ", "Test Data - Maintenance", JOptionPane.INFORMATION_MESSAGE);

                                //loadIterationLst();
                                loadTestDataTbl();
                                DefaultMode();
                            }                
                    }                
            }
            else{
                JOptionPane.showMessageDialog(jFrame, "No record has been selected for deletion" + "\n" + "To select an item double click on the table on the desired record, then click on Delete button",
                        "Test Data - Maintenance", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "App DataSource Load Failed " + 
                               "\n" + errMessage, "App DataSource - Maintenance", 0);                       
        }
            
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void NewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewBtnActionPerformed
        // TODO add your handling code here:
        FieldIdTxt.setText("null");
        FieldValueTxt.setText("null");
        
        FunctionCodeCmb.setEnabled(true);
        //IterationCmb.setEnabled(true);
        IterationFlagCmb.setEnabled(true);
        FieldIdTxt.setEnabled(true);
        FieldValueTxt.setEnabled(true);
        
        NewBtn.setEnabled(false);
        DeleteBtn.setEnabled(false);
        ChangeBtn.setEnabled(false);
        SaveBtn.setEnabled(true);
        CancelBtn.setEnabled(true);
        
    }//GEN-LAST:event_NewBtnActionPerformed

    private void FieldValueTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldValueTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldValueTxtActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        DefaultMode();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void ChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeBtnActionPerformed
        // TODO add your handling code here:
        SaveMode();
    }//GEN-LAST:event_ChangeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestData().setVisible(true);
            }
        });
    }

    public void loadTestDataTbl(){
            JFrame jFrame = new JFrame();
            try{
                Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                CallableStatement cStmt = conn.prepareCall("{call Search_AllTestData_ByProjCodeTestCaseId(?,?,?)}");
                
                String ProjCode = MainGUI.getProjectCode();
                //String TestCaseId = TestCaseIdLst.getSelectedValue();
                String TestCaseId = TestCaseCmb.getSelectedItem().toString();
                String LoginId = LoginGUI.getLoginId();
                /*
	@proj_code NVARCHAR(20),
	@testcaseid  NVARCHAR(12),
	@loginid NVARCHAR(8)                
                */
                cStmt.setNString(1, ProjCode);
                cStmt.setNString(2, TestCaseId);
                cStmt.setNString(3, LoginId);
                
                ResultSet rs = cStmt.executeQuery();
                
                TestDataTbl.setModel(new DefaultTableModel(null, new String[] {"ID","PROJ CODE","TEST CASE ID", "FUNC CODE", "FIELD ID", "FIELD VALUE", "ITERATION"}));

                /*
                [ID] = TD.ID,
                [PROJCODE] = TD.PROJ_CODE,
                [TESTCASEID] = TD.TESTCASEID,
                [FUNCCODE] = TD.FUNCTION_CODE,
                [FIELDID] = TD.FIELD_ID,
                [FIELDVALUE] = TD.FIELD_VALUE,
                [ITERATION] = TD.ITERATION                
                */                
                while(rs.next()){
                    String id = NumberToTextConverter.toText(rs.getInt(1));
                    String projcode = rs.getNString(2);
                    String testcaseid = rs.getNString(3);
                    String funccode = rs.getNString(4);
                    String fieldid = rs.getNString(5);
                    String fieldvalue = rs.getNString(6);
                    String iteration = NumberToTextConverter.toText(rs.getInt(7));
                    
                    String[] tblData = {id, projcode, testcaseid, funccode, fieldid, fieldvalue, iteration};
                    DefaultTableModel tblmodel = (DefaultTableModel)TestDataTbl.getModel();
                    tblmodel.addRow(tblData);

                    TestDataTbl.getColumnModel().getColumn(0).setPreferredWidth(5);
                    TestDataTbl.getColumnModel().getColumn(3).setPreferredWidth(100);
                    TestDataTbl.getColumnModel().getColumn(4).setPreferredWidth(150);
                    TestDataTbl.getColumnModel().getColumn(5).setPreferredWidth(150);
                    TestDataTbl.getColumnModel().getColumn(6).setPreferredWidth(5);                    
                }
                
                TestDataTbl.getColumnModel().getColumn(1).setMinWidth(0);
                TestDataTbl.getColumnModel().getColumn(1).setMaxWidth(0);
                TestDataTbl.getColumnModel().getColumn(2).setMinWidth(0);
                TestDataTbl.getColumnModel().getColumn(2).setMaxWidth(0);
                cStmt.close();
                conn.close();

            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Test Data  loading failed " + 
                               "\n" + errMessage, "Test Script - Maintenance", 0);                
            }
    }
    
    public void loadTestCaseLst(){
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call  Search_AllTestCases(?)}");
                    
                    String ProjCode = MainGUI.getProjectCode();
                    cStmt.setNString(1, ProjCode);
                    
                    ResultSet rs = cStmt.executeQuery();
           
                    DefaultListModel lstmodel = new DefaultListModel();
                    TestCaseCmb.removeAllItems();
                    
                    while(rs.next()){
                            String testcaseid = rs.getNString(1);
                            TestCaseCmb.addItem(testcaseid);
                            //lstmodel.addElement(testcaseid);
                    }
                    
                    //TestCaseIdLst.setModel(lstmodel);
                    
                    cStmt.close();
                    conn.close();
            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Test Data - Test Case ID List loading failed " + 
                               "\n" + errMessage, "Test Script - Maintenance", 0);                        
            }
    }
    
    public void loadFunctionCodeLst(){
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call Search_ProjectFunction_ByProjectCode(?)}");
                    
                    String ProjCode = MainGUI.getProjectCode();
                    cStmt.setNString(1, ProjCode);
                    
                    ResultSet rs = cStmt.executeQuery();
                    
                    DefaultListModel listmodel = new DefaultListModel();
                    
                    FunctionCodeCmb.removeAllItems();
                    while(rs.next()){
                            String fcode = rs.getNString("FCODE");
                            //listmodel.addElement(fcode);
                            FunctionCodeCmb.addItem(fcode);
                    }
                    
                    //FunctionCodeLst.setModel(listmodel);
                    cStmt.close();
                    conn.close();

            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Test Data - Function Code List  loading failed " + 
                               "\n" + errMessage, "Test Script - Maintenance", 0);                             
            }
    }
    
    /*
    public void loadIterationLst(){
            JFrame jFrame = new JFrame();
            try{
                    Connection conn = ewb.qa.tdd.SQLObj.ConnToDB();
                    CallableStatement cStmt = conn.prepareCall("{call  Search_AllTestDataIteration_ByProjCodeTestCaseId(?,?)}");
                    
                    String ProjCode = MainGUI.getProjectCode();
                    //String TestCaseId = TestCaseIdLst.getSelectedValue();
                    String TestCaseId = TestCaseCmb.getSelectedItem().toString();
                    
                    cStmt.setNString(1, ProjCode);
                    cStmt.setNString(2, TestCaseId);
                    DefaultListModel listmodel = new DefaultListModel();
                    ResultSet rs = cStmt.executeQuery();
                    
                    IterationCmb.removeAllItems();
                    
                    while(rs.next()){
                            String iteration = NumberToTextConverter.toText(rs.getInt("ITERATION"));
                            //listmodel.addElement(iteration);
                            IterationCmb.addItem(iteration);
                    }

                    //IterationLst.setModel(listmodel);
                    cStmt.close();
                    conn.close();
                    
            }
            catch(Exception ex){
                String errMessage = null;

                errMessage = "Error Message: " + ex.getMessage() + 
                   "\n" + "Error Localize Message: " + ex.getLocalizedMessage() + 
                   "\n" + "Stack Trace: " + ex.getStackTrace() + 
                   "\n" + "Cause: " + ex.getCause();

                System.out.println(errMessage);

                //if(execFlag <= 0 ){
                JOptionPane.showMessageDialog(jFrame,  "Test Data - Iteration List  loading failed " + 
                               "\n" + errMessage, "Test Script - Maintenance", 0);                    
            }
    }
    */
    
    public void DefaultMode(){
            IdTxt.setEnabled(false);
            ProjCodeTxt.setEnabled(false);
            ProjDescTxt.setEnabled(false);
            //TestCaseIdLst.setEnabled(true);
            TestCaseCmb.setEnabled(true);
            TestCaseDescTxt.setEnabled(false);
            //FunctionCodeLst.setEnabled(false);
            FunctionCodeCmb.setEnabled(false);
            FunctionTxt.setEnabled(false);
            //IterationLst.setEnabled(false);
            //IterationCmb.setEnabled(false);
            IterationFlagCmb.setEnabled(false);
            FieldIdTxt.setEnabled(false);
            FieldValueTxt.setEnabled(false);
            
            IdTxt.setText("0");
            //TestCaseIdLst.clearSelection();
            //FunctionCodeLst.clearSelection();
            FieldIdTxt.setText("");
            FieldValueTxt.setText("");
            //IterationLst.clearSelection();
            //IterationCmb.removeAllItems();
            
            NewBtn.setEnabled(true);
            DeleteBtn.setEnabled(false);
            ChangeBtn.setEnabled(false);
            SaveBtn.setEnabled(false);
            CancelBtn.setEnabled(false);
            
            BackBtn.setEnabled(true);
    }
    
    public void NewMode(){
            IdTxt.setEnabled(false);
            ProjCodeTxt.setEnabled(false);
            ProjDescTxt.setEnabled(false);
            //TestCaseIdLst.setEnabled(true);
            TestCaseCmb.setEnabled(true);
            TestCaseDescTxt.setEnabled(false);
            //FunctionCodeLst.setEnabled(true);
            FunctionCodeCmb.setEnabled(true);
            FunctionTxt.setEnabled(false);
            //IterationLst.setEnabled(true);
            //IterationCmb.setEnabled(true);
            IterationFlagCmb.setEnabled(true);
            FieldIdTxt.setEnabled(true);
            FieldValueTxt.setEnabled(true);
            
            IdTxt.setText("");
            //TestCaseIdLst.clearSelection();
            //FunctionCodeLst.clearSelection();
            FieldIdTxt.setText("");
            FieldValueTxt.setText("");
            //IterationLst.clearSelection();
            //IterationCmb.removeAllItems();
            
            NewBtn.setEnabled(false);
            ChangeBtn.setEnabled(false);
            SaveBtn.setEnabled(true);
            CancelBtn.setEnabled(true);
            
            BackBtn.setEnabled(true);        
    }
    
    public void ChangeMode(){
            IdTxt.setEditable(false);
            ProjCodeTxt.setEnabled(false);
            ProjDescTxt.setEnabled(false);
            //TestCaseIdLst.setEnabled(true);
            TestCaseCmb.setEnabled(true);
            TestCaseDescTxt.setEnabled(false);
            //FunctionCodeLst.setEnabled(true);
            FunctionCodeCmb.setEnabled(true);
            FunctionTxt.setEnabled(false);
            //IterationLst.setEnabled(true);
            //IterationCmb.setEnabled(true);
            IterationFlagCmb.setEnabled(false);
            FieldIdTxt.setEnabled(false);
            FieldValueTxt.setEnabled(false);
            
            NewBtn.setEnabled(false);
            DeleteBtn.setEnabled(true);
            ChangeBtn.setEnabled(true);
            SaveBtn.setEnabled(false);
            CancelBtn.setEnabled(true);
            
            BackBtn.setEnabled(true);             
    }
    
    public void SaveMode(){
            //DefaultMode();
            IdTxt.setEditable(false);
            ProjCodeTxt.setEnabled(false);
            ProjDescTxt.setEnabled(false);
            //TestCaseIdLst.setEnabled(true);
            TestCaseCmb.setEnabled(true);
            TestCaseDescTxt.setEnabled(false);
            //FunctionCodeLst.setEnabled(true);
            FunctionCodeCmb.setEnabled(true);
            FunctionTxt.setEnabled(false);
            //IterationLst.setEnabled(true);
            //IterationCmb.setEnabled(true);
            IterationFlagCmb.setEnabled(true);
            FieldIdTxt.setEnabled(true);
            FieldValueTxt.setEnabled(true);
            
            NewBtn.setEnabled(false);
            DeleteBtn.setEnabled(false);
            ChangeBtn.setEnabled(false);
            SaveBtn.setEnabled(true);
            CancelBtn.setEnabled(true);
            
            BackBtn.setEnabled(true);           
            
    }
    
    /*
    private void loadIterationCmb(){
        String[] arrlist = {"1","2","3","4","5"};
        DefaultComboBoxModel cmbmodel = (DefaultComboBoxModel)IterationCmb.getModel();
        
        cmbmodel.addElement(arrlist);
        IterationCmb.setModel(cmbmodel);
    }
*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton ChangeBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField FieldIdTxt;
    private javax.swing.JTextField FieldValueTxt;
    private javax.swing.JComboBox<String> FunctionCodeCmb;
    private javax.swing.JTextField FunctionTxt;
    private javax.swing.JTextField IdTxt;
    private javax.swing.JComboBox<String> IterationFlagCmb;
    private javax.swing.JButton NewBtn;
    private javax.swing.JTextField ProjCodeTxt;
    private javax.swing.JTextField ProjDescTxt;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JComboBox<String> TestCaseCmb;
    private javax.swing.JTextField TestCaseDescTxt;
    private javax.swing.JTable TestDataTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
